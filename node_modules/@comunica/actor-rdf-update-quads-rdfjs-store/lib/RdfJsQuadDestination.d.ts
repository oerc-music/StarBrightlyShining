/// <reference types="node" />
import type { IQuadDestination } from '@comunica/bus-rdf-update-quads';
import type { AsyncIterator } from 'asynciterator';
import type * as RDF from 'rdf-js';
import EventEmitter = NodeJS.EventEmitter;
/**
 * A quad destination that wraps around an {@link RDF.Store}.
 */
export declare class RdfJsQuadDestination implements IQuadDestination {
    private readonly store;
    constructor(store: RDF.Store);
    protected promisifyEventEmitter(eventEmitter: EventEmitter): Promise<void>;
    delete(quads: AsyncIterator<RDF.Quad>): Promise<void>;
    insert(quads: AsyncIterator<RDF.Quad>): Promise<void>;
    deleteGraphs(graphs: RDF.DefaultGraph | 'NAMED' | 'ALL' | RDF.NamedNode[], requireExistence: boolean, dropGraphs: boolean): Promise<void>;
    createGraphs(graphs: RDF.NamedNode[], requireNonExistence: boolean): Promise<void>;
}
