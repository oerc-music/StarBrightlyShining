import type { IActorQueryOperationOutput, IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';
import { ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';
import type { IActionRdfUpdateQuads, IActorRdfUpdateQuadsOutput } from '@comunica/bus-rdf-update-quads';
import type { ActionContext, Actor, IActorTest, Mediator } from '@comunica/core';
import type { Algebra } from 'sparqlalgebrajs';
/**
 * A [Query Operation](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation) actor
 * that handles SPARQL drop operations.
 */
export declare class ActorQueryOperationDrop extends ActorQueryOperationTypedMediated<Algebra.Drop> {
    readonly mediatorUpdateQuads: Mediator<Actor<IActionRdfUpdateQuads, IActorTest, IActorRdfUpdateQuadsOutput>, IActionRdfUpdateQuads, IActorTest, IActorRdfUpdateQuadsOutput>;
    constructor(args: IActorQueryOperationDropArgs);
    testOperation(pattern: Algebra.Drop, context: ActionContext): Promise<IActorTest>;
    runOperation(pattern: Algebra.Drop, context: ActionContext): Promise<IActorQueryOperationOutput>;
}
export interface IActorQueryOperationDropArgs extends IActorQueryOperationTypedMediatedArgs {
    mediatorUpdateQuads: Mediator<Actor<IActionRdfUpdateQuads, IActorTest, IActorRdfUpdateQuadsOutput>, IActionRdfUpdateQuads, IActorTest, IActorRdfUpdateQuadsOutput>;
}
