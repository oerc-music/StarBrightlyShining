"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActorRdfUpdateQuadsDestination = void 0;
const ActorRdfUpdateQuads_1 = require("./ActorRdfUpdateQuads");
/**
 * A base implementation for rdf-update-quads events
 * that wraps around an {@link IQuadDestination}.
 *
 * @see IQuadDestination
 */
class ActorRdfUpdateQuadsDestination extends ActorRdfUpdateQuads_1.ActorRdfUpdateQuads {
    async test(action) {
        return true;
    }
    async run(action) {
        const destination = await this.getDestination(action.context);
        return await this.getOutput(destination, action, action.context);
    }
    /**
     * Get the output of the given action on a destination.
     * @param {IQuadDestination} destination A quad destination, possibly lazy.
     * @param {IActionRdfUpdateQuads} action The action.
     * @param {ActionContext} context Optional context data.
     */
    async getOutput(destination, action, context) {
        const updateResult = Promise.all([
            action.quadStreamInsert ? destination.insert(action.quadStreamInsert) : Promise.resolve(),
            action.quadStreamDelete ? destination.delete(action.quadStreamDelete) : Promise.resolve(),
            action.deleteGraphs ?
                destination.deleteGraphs(action.deleteGraphs.graphs, action.deleteGraphs.requireExistence, action.deleteGraphs.dropGraphs) :
                Promise.resolve(),
            action.createGraphs ?
                destination.createGraphs(action.createGraphs.graphs, action.createGraphs.requireNonExistence) :
                Promise.resolve(),
        ]).then(() => {
            // Return void
        });
        return { updateResult };
    }
}
exports.ActorRdfUpdateQuadsDestination = ActorRdfUpdateQuadsDestination;
//# sourceMappingURL=ActorRdfUpdateQuadsDestination.js.map