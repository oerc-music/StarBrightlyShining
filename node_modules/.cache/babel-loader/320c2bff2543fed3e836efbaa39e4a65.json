{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActorQueryOperationValues = void 0;\n\nconst bus_query_operation_1 = require(\"@comunica/bus-query-operation\");\n\nconst asynciterator_1 = require(\"asynciterator\");\n\nconst rdf_string_1 = require(\"rdf-string\");\n/**\n * A comunica Values Query Operation Actor.\n */\n\n\nclass ActorQueryOperationValues extends bus_query_operation_1.ActorQueryOperationTyped {\n  constructor(args) {\n    super(args, 'values');\n  }\n\n  async testOperation(pattern, context) {\n    return true;\n  }\n\n  async runOperation(pattern, context) {\n    const bindingsStream = new asynciterator_1.ArrayIterator(pattern.bindings.map(x => bus_query_operation_1.Bindings(x)));\n\n    const metadata = () => Promise.resolve({\n      totalItems: pattern.bindings.length\n    });\n\n    const variables = pattern.variables.map(x => rdf_string_1.termToString(x));\n    const canContainUndefs = pattern.bindings.some(bindings => variables.some(variable => !(variable in bindings)));\n    return {\n      type: 'bindings',\n      bindingsStream,\n      metadata,\n      variables,\n      canContainUndefs\n    };\n  }\n\n}\n\nexports.ActorQueryOperationValues = ActorQueryOperationValues;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@comunica/actor-query-operation-values/lib/ActorQueryOperationValues.js"],"names":["Object","defineProperty","exports","value","ActorQueryOperationValues","bus_query_operation_1","require","asynciterator_1","rdf_string_1","ActorQueryOperationTyped","constructor","args","testOperation","pattern","context","runOperation","bindingsStream","ArrayIterator","bindings","map","x","Bindings","metadata","Promise","resolve","totalItems","length","variables","termToString","canContainUndefs","some","variable","type"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,yBAAR,GAAoC,KAAK,CAAzC;;AACA,MAAMC,qBAAqB,GAAGC,OAAO,CAAC,+BAAD,CAArC;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,eAAD,CAA/B;;AACA,MAAME,YAAY,GAAGF,OAAO,CAAC,YAAD,CAA5B;AACA;AACA;AACA;;;AACA,MAAMF,yBAAN,SAAwCC,qBAAqB,CAACI,wBAA9D,CAAuF;AACnFC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN,EAAY,QAAZ;AACH;;AACkB,QAAbC,aAAa,CAACC,OAAD,EAAUC,OAAV,EAAmB;AAClC,WAAO,IAAP;AACH;;AACiB,QAAZC,YAAY,CAACF,OAAD,EAAUC,OAAV,EAAmB;AACjC,UAAME,cAAc,GAAG,IAAIT,eAAe,CAACU,aAApB,CAAkCJ,OAAO,CAACK,QAAR,CAAiBC,GAAjB,CAAqBC,CAAC,IAAIf,qBAAqB,CAACgB,QAAtB,CAA+BD,CAA/B,CAA1B,CAAlC,CAAvB;;AACA,UAAME,QAAQ,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgB;AAAEC,MAAAA,UAAU,EAAEZ,OAAO,CAACK,QAAR,CAAiBQ;AAA/B,KAAhB,CAAvB;;AACA,UAAMC,SAAS,GAAGd,OAAO,CAACc,SAAR,CAAkBR,GAAlB,CAAsBC,CAAC,IAAIZ,YAAY,CAACoB,YAAb,CAA0BR,CAA1B,CAA3B,CAAlB;AACA,UAAMS,gBAAgB,GAAGhB,OAAO,CAACK,QAAR,CAAiBY,IAAjB,CAAsBZ,QAAQ,IAAIS,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAI,EAAEA,QAAQ,IAAIb,QAAd,CAA3B,CAAlC,CAAzB;AACA,WAAO;AAAEc,MAAAA,IAAI,EAAE,UAAR;AAAoBhB,MAAAA,cAApB;AAAoCM,MAAAA,QAApC;AAA8CK,MAAAA,SAA9C;AAAyDE,MAAAA;AAAzD,KAAP;AACH;;AAbkF;;AAevF3B,OAAO,CAACE,yBAAR,GAAoCA,yBAApC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActorQueryOperationValues = void 0;\nconst bus_query_operation_1 = require(\"@comunica/bus-query-operation\");\nconst asynciterator_1 = require(\"asynciterator\");\nconst rdf_string_1 = require(\"rdf-string\");\n/**\n * A comunica Values Query Operation Actor.\n */\nclass ActorQueryOperationValues extends bus_query_operation_1.ActorQueryOperationTyped {\n    constructor(args) {\n        super(args, 'values');\n    }\n    async testOperation(pattern, context) {\n        return true;\n    }\n    async runOperation(pattern, context) {\n        const bindingsStream = new asynciterator_1.ArrayIterator(pattern.bindings.map(x => bus_query_operation_1.Bindings(x)));\n        const metadata = () => Promise.resolve({ totalItems: pattern.bindings.length });\n        const variables = pattern.variables.map(x => rdf_string_1.termToString(x));\n        const canContainUndefs = pattern.bindings.some(bindings => variables.some(variable => !(variable in bindings)));\n        return { type: 'bindings', bindingsStream, metadata, variables, canContainUndefs };\n    }\n}\nexports.ActorQueryOperationValues = ActorQueryOperationValues;\n//# sourceMappingURL=ActorQueryOperationValues.js.map"]},"metadata":{},"sourceType":"script"}