{"ast":null,"code":"export function boxesForMeasures(verovioSVG, extraClasses) {\n  // given a Verovio-generated SVG, draw rectangles in front of each\n  // bar and return a list of them (e.g. for adding callbacks)\n  // N.B. I'm not removing previously-drawn barBoxes.\n  var barBoxes = [];\n  var SVGNS = \"http://www.w3.org/2000/svg\";\n  var page = verovioSVG.getElementsByClassName('page-margin')[0];\n  var systems = verovioSVG.getElementsByClassName('system');\n  if (!extraClasses) extraClasses = \"\";\n\n  for (var sysi = 0; sysi < systems.length; sysi++) {\n    var sysMeasures = systems[sysi].getElementsByClassName('measure');\n    var sysBBox = systems[sysi].getBBox();\n    var maxHeight = sysBBox.height;\n    var maxy = sysBBox.y;\n    var vu = getStafflineGap(sysMeasures[0]) / 4;\n\n    for (var measi = 0; measi < sysMeasures.length; measi++) {\n      var box = document.createElementNS(SVGNS, \"rect\");\n      var staff1 = sysMeasures[measi].getElementsByClassName('staff')[0];\n      var staffLines = Array.prototype.filter.call(staff1.children, x => x.tagName === \"path\");\n      var bbox = staffLines[0].getBBox(); // console.log(bbox);\n\n      box.setAttributeNS(null, \"id\", sysMeasures[measi].id + \"-box\");\n      box.setAttributeNS(null, \"class\", \"barBox \" + extraClasses);\n      box.setAttributeNS(null, \"x\", bbox.x + vu);\n      box.setAttributeNS(null, \"y\", maxy);\n      box.setAttributeNS(null, \"height\", maxHeight);\n      box.setAttributeNS(null, \"width\", bbox.width - 2 * vu); // Rounded corners\n\n      box.setAttributeNS(null, \"rx\", vu);\n      box.setAttributeNS(null, \"ry\", vu);\n      page.appendChild(box);\n      barBoxes.push(box);\n    }\n  }\n\n  return barBoxes;\n}\nexport function convertCoordsForElement(elem) {\n  return convertCoords(elem.getAttribute('id'));\n}\nexport function convertCoords(id) {\n  const elem = document.getElementById(id);\n\n  if (elem && elem.style.display !== \"none\" && (elem.getBBox().x !== 0 || elem.getBBox().y !== 0)) {\n    const x = elem.getBBox().x;\n    const width = elem.getBBox().width;\n    const y = elem.getBBox().y;\n    const height = elem.getBBox().height;\n    const offset = elem.closest(\"svg\").parentElement.getBoundingClientRect();\n    const matrix = elem.getScreenCTM();\n    return {\n      x: matrix.a * x + matrix.c * y + matrix.e - offset.left,\n      y: matrix.b * x + matrix.d * y + matrix.f - offset.top,\n      x2: matrix.a * (x + width) + matrix.c * y + matrix.e - offset.left,\n      y2: matrix.b * x + matrix.d * (y + height) + matrix.f - offset.top\n    };\n  } else {\n    console.warn(\"Element unavailable on page: \", id);\n    return {\n      x: 0,\n      y: 0,\n      x2: 0,\n      y2: 0\n    };\n  }\n}\n\nfunction getStafflineGap(measure) {\n  // some sort of scale info is needed. Let's use gap between\n  // stafflines. This is not guaranteed to be stable, since the way\n  // Verovio does these has no clear analogue in MEI. Also, they have\n  // no class and aren't grouped separately, so are easiest detected\n  // by their position in the file\n  var staff = measure.getElementsByClassName('staff')[0];\n  var kids = staff.children;\n\n  if (kids[0].tagName === \"path\" && kids[1].tagName === \"path\") {\n    var pos1 = kids[0].getAttributeNS(null, \"d\").split(\" \")[1];\n    var pos2 = kids[1].getAttributeNS(null, \"d\").split(\" \")[1];\n    return pos2 - pos1;\n  } else {\n    console.log(\"My assumptions about staves are wrong for measure:\", measure);\n  }\n}","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/meld-clients-core/lib/library/boxesForMeasures.js"],"names":["boxesForMeasures","verovioSVG","extraClasses","barBoxes","SVGNS","page","getElementsByClassName","systems","sysi","length","sysMeasures","sysBBox","getBBox","maxHeight","height","maxy","y","vu","getStafflineGap","measi","box","document","createElementNS","staff1","staffLines","Array","prototype","filter","call","children","x","tagName","bbox","setAttributeNS","id","width","appendChild","push","convertCoordsForElement","elem","convertCoords","getAttribute","getElementById","style","display","offset","closest","parentElement","getBoundingClientRect","matrix","getScreenCTM","a","c","e","left","b","d","f","top","x2","y2","console","warn","measure","staff","kids","pos1","getAttributeNS","split","pos2","log"],"mappings":"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","sourcesContent":["export function boxesForMeasures(verovioSVG, extraClasses) {\n  // given a Verovio-generated SVG, draw rectangles in front of each\n  // bar and return a list of them (e.g. for adding callbacks)\n  // N.B. I'm not removing previously-drawn barBoxes.\n  var barBoxes = [];\n  var SVGNS = \"http://www.w3.org/2000/svg\";\n  var page = verovioSVG.getElementsByClassName('page-margin')[0];\n  var systems = verovioSVG.getElementsByClassName('system');\n  if (!extraClasses) extraClasses = \"\";\n\n  for (var sysi = 0; sysi < systems.length; sysi++) {\n    var sysMeasures = systems[sysi].getElementsByClassName('measure');\n    var sysBBox = systems[sysi].getBBox();\n    var maxHeight = sysBBox.height;\n    var maxy = sysBBox.y;\n    var vu = getStafflineGap(sysMeasures[0]) / 4;\n\n    for (var measi = 0; measi < sysMeasures.length; measi++) {\n      var box = document.createElementNS(SVGNS, \"rect\");\n      var staff1 = sysMeasures[measi].getElementsByClassName('staff')[0];\n      var staffLines = Array.prototype.filter.call(staff1.children, x => x.tagName === \"path\");\n      var bbox = staffLines[0].getBBox(); // console.log(bbox);\n\n      box.setAttributeNS(null, \"id\", sysMeasures[measi].id + \"-box\");\n      box.setAttributeNS(null, \"class\", \"barBox \" + extraClasses);\n      box.setAttributeNS(null, \"x\", bbox.x + vu);\n      box.setAttributeNS(null, \"y\", maxy);\n      box.setAttributeNS(null, \"height\", maxHeight);\n      box.setAttributeNS(null, \"width\", bbox.width - 2 * vu); // Rounded corners\n\n      box.setAttributeNS(null, \"rx\", vu);\n      box.setAttributeNS(null, \"ry\", vu);\n      page.appendChild(box);\n      barBoxes.push(box);\n    }\n  }\n\n  return barBoxes;\n}\n\nexport function convertCoordsForElement(elem) {\n\treturn convertCoords(elem.getAttribute('id'));\n}\nexport function convertCoords(id) {\n\tconst elem = document.getElementById(id);\n  if(elem\n     && elem.style.display !== \"none\" && (elem.getBBox().x !== 0 || elem.getBBox().y !== 0)) {\n    const x = elem.getBBox().x;\n    const width = elem.getBBox().width;\n    const y = elem.getBBox().y;\n    const height = elem.getBBox().height;\n    const offset = elem.closest(\"svg\").parentElement.getBoundingClientRect();\n    const matrix = elem.getScreenCTM();\n    return {\n      x: (matrix.a * x) + (matrix.c * y) + matrix.e - offset.left,\n      y: (matrix.b * x) + (matrix.d * y) + matrix.f - offset.top,\n      x2: (matrix.a * (x + width)) + (matrix.c * y) + matrix.e - offset.left,\n      y2: (matrix.b * x) + (matrix.d * (y + height)) + matrix.f - offset.top\n    };\n  } else {\n    console.warn(\"Element unavailable on page: \", id);\n    return { x:0, y:0, x2:0, y2:0 }\n  }\n}\n\n\nfunction getStafflineGap(measure) {\n  // some sort of scale info is needed. Let's use gap between\n  // stafflines. This is not guaranteed to be stable, since the way\n  // Verovio does these has no clear analogue in MEI. Also, they have\n  // no class and aren't grouped separately, so are easiest detected\n  // by their position in the file\n  var staff = measure.getElementsByClassName('staff')[0];\n  var kids = staff.children;\n\n  if (kids[0].tagName === \"path\" && kids[1].tagName === \"path\") {\n    var pos1 = kids[0].getAttributeNS(null, \"d\").split(\" \")[1];\n    var pos2 = kids[1].getAttributeNS(null, \"d\").split(\" \")[1];\n    return pos2 - pos1;\n  } else {\n    console.log(\"My assumptions about staves are wrong for measure:\", measure);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}