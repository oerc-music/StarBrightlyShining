{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActorOptimizeQueryOperationJoinBgp = void 0;\n\nconst bus_optimize_query_operation_1 = require(\"@comunica/bus-optimize-query-operation\");\n\nconst sparqlalgebrajs_1 = require(\"sparqlalgebrajs\");\n/**\n * A comunica Join BGP Optimize Query Operation Actor.\n */\n\n\nclass ActorOptimizeQueryOperationJoinBgp extends bus_optimize_query_operation_1.ActorOptimizeQueryOperation {\n  constructor(args) {\n    super(args);\n  }\n\n  async test(action) {\n    return true;\n  }\n\n  async run(action) {\n    const operation = sparqlalgebrajs_1.Util.mapOperation(action.operation, {\n      join(op, factory) {\n        if (op.left.type === 'bgp' && op.right.type === 'bgp') {\n          return {\n            recurse: false,\n            result: factory.createBgp([...op.left.patterns, ...op.right.patterns])\n          };\n        }\n\n        return {\n          recurse: false,\n          result: op\n        };\n      }\n\n    });\n    return {\n      operation\n    };\n  }\n\n}\n\nexports.ActorOptimizeQueryOperationJoinBgp = ActorOptimizeQueryOperationJoinBgp;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@comunica/actor-optimize-query-operation-join-bgp/lib/ActorOptimizeQueryOperationJoinBgp.js"],"names":["Object","defineProperty","exports","value","ActorOptimizeQueryOperationJoinBgp","bus_optimize_query_operation_1","require","sparqlalgebrajs_1","ActorOptimizeQueryOperation","constructor","args","test","action","run","operation","Util","mapOperation","join","op","factory","left","type","right","recurse","result","createBgp","patterns"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kCAAR,GAA6C,KAAK,CAAlD;;AACA,MAAMC,8BAA8B,GAAGC,OAAO,CAAC,wCAAD,CAA9C;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,iBAAD,CAAjC;AACA;AACA;AACA;;;AACA,MAAMF,kCAAN,SAAiDC,8BAA8B,CAACG,2BAAhF,CAA4G;AACxGC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN;AACH;;AACS,QAAJC,IAAI,CAACC,MAAD,EAAS;AACf,WAAO,IAAP;AACH;;AACQ,QAAHC,GAAG,CAACD,MAAD,EAAS;AACd,UAAME,SAAS,GAAGP,iBAAiB,CAACQ,IAAlB,CAAuBC,YAAvB,CAAoCJ,MAAM,CAACE,SAA3C,EAAsD;AACpEG,MAAAA,IAAI,CAACC,EAAD,EAAKC,OAAL,EAAc;AACd,YAAID,EAAE,CAACE,IAAH,CAAQC,IAAR,KAAiB,KAAjB,IAA0BH,EAAE,CAACI,KAAH,CAASD,IAAT,KAAkB,KAAhD,EAAuD;AACnD,iBAAO;AACHE,YAAAA,OAAO,EAAE,KADN;AAEHC,YAAAA,MAAM,EAAEL,OAAO,CAACM,SAAR,CAAkB,CAAC,GAAGP,EAAE,CAACE,IAAH,CAAQM,QAAZ,EAAsB,GAAGR,EAAE,CAACI,KAAH,CAASI,QAAlC,CAAlB;AAFL,WAAP;AAIH;;AACD,eAAO;AACHH,UAAAA,OAAO,EAAE,KADN;AAEHC,UAAAA,MAAM,EAAEN;AAFL,SAAP;AAIH;;AAZmE,KAAtD,CAAlB;AAcA,WAAO;AAAEJ,MAAAA;AAAF,KAAP;AACH;;AAvBuG;;AAyB5GZ,OAAO,CAACE,kCAAR,GAA6CA,kCAA7C","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActorOptimizeQueryOperationJoinBgp = void 0;\nconst bus_optimize_query_operation_1 = require(\"@comunica/bus-optimize-query-operation\");\nconst sparqlalgebrajs_1 = require(\"sparqlalgebrajs\");\n/**\n * A comunica Join BGP Optimize Query Operation Actor.\n */\nclass ActorOptimizeQueryOperationJoinBgp extends bus_optimize_query_operation_1.ActorOptimizeQueryOperation {\n    constructor(args) {\n        super(args);\n    }\n    async test(action) {\n        return true;\n    }\n    async run(action) {\n        const operation = sparqlalgebrajs_1.Util.mapOperation(action.operation, {\n            join(op, factory) {\n                if (op.left.type === 'bgp' && op.right.type === 'bgp') {\n                    return {\n                        recurse: false,\n                        result: factory.createBgp([...op.left.patterns, ...op.right.patterns]),\n                    };\n                }\n                return {\n                    recurse: false,\n                    result: op,\n                };\n            },\n        });\n        return { operation };\n    }\n}\nexports.ActorOptimizeQueryOperationJoinBgp = ActorOptimizeQueryOperationJoinBgp;\n//# sourceMappingURL=ActorOptimizeQueryOperationJoinBgp.js.map"]},"metadata":{},"sourceType":"script"}