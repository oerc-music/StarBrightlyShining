{"ast":null,"code":"const {\n  MultiTransformIterator,\n  SimpleTransformIterator,\n  scheduleTask\n} = require('asynciterator'); // https://en.wikipedia.org/wiki/Nested_loop_join\n\n\nclass NestedLoopJoin extends MultiTransformIterator {\n  constructor(left, right, funJoin, options) {\n    super(left, options);\n    this.right = right;\n    this.funJoin = funJoin; // function that joins 2 elements or returns null if join is not possible\n\n    this.on('end', () => this.right.close());\n  }\n\n  close() {\n    super.close();\n    scheduleTask(() => this.right.close());\n  }\n\n  _createTransformer(leftItem) {\n    return new SimpleTransformIterator(this.right.clone(), {\n      transform: (rightItem, done) => {\n        let result = this.funJoin(leftItem, rightItem);\n        if (result !== null) this._push(result);\n        done();\n      }\n    });\n  }\n\n}\n\nmodule.exports = NestedLoopJoin;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/asyncjoin/join/NestedLoopJoin.js"],"names":["MultiTransformIterator","SimpleTransformIterator","scheduleTask","require","NestedLoopJoin","constructor","left","right","funJoin","options","on","close","_createTransformer","leftItem","clone","transform","rightItem","done","result","_push","module","exports"],"mappings":"AACA,MAAM;AAAEA,EAAAA,sBAAF;AAA0BC,EAAAA,uBAA1B;AAAmDC,EAAAA;AAAnD,IAAoEC,OAAO,CAAC,eAAD,CAAjF,C,CAEA;;;AACA,MAAMC,cAAN,SAA6BJ,sBAA7B,CACA;AACIK,EAAAA,WAAW,CAAEC,IAAF,EAAQC,KAAR,EAAeC,OAAf,EAAwBC,OAAxB,EACX;AACI,UAAMH,IAAN,EAAYG,OAAZ;AAEA,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf,CAJJ,CAI4B;;AACxB,SAAKE,EAAL,CAAQ,KAAR,EAAe,MAAM,KAAKH,KAAL,CAAWI,KAAX,EAArB;AACH;;AAEDA,EAAAA,KAAK,GACL;AACI,UAAMA,KAAN;AACAT,IAAAA,YAAY,CAAC,MAAM,KAAKK,KAAL,CAAWI,KAAX,EAAP,CAAZ;AACH;;AAEDC,EAAAA,kBAAkB,CAAEC,QAAF,EAClB;AACI,WAAO,IAAIZ,uBAAJ,CAA4B,KAAKM,KAAL,CAAWO,KAAX,EAA5B,EAAgD;AAAEC,MAAAA,SAAS,EAAE,CAACC,SAAD,EAAYC,IAAZ,KACpE;AACI,YAAIC,MAAM,GAAG,KAAKV,OAAL,CAAaK,QAAb,EAAuBG,SAAvB,CAAb;AACA,YAAIE,MAAM,KAAK,IAAf,EACI,KAAKC,KAAL,CAAWD,MAAX;AACJD,QAAAA,IAAI;AACP;AANsD,KAAhD,CAAP;AAOH;;AAzBL;;AA4BAG,MAAM,CAACC,OAAP,GAAiBjB,cAAjB","sourcesContent":["\nconst { MultiTransformIterator, SimpleTransformIterator, scheduleTask } = require('asynciterator');\n\n// https://en.wikipedia.org/wiki/Nested_loop_join\nclass NestedLoopJoin extends MultiTransformIterator\n{\n    constructor (left, right, funJoin, options)\n    {\n        super(left, options);\n\n        this.right = right;\n        this.funJoin = funJoin; // function that joins 2 elements or returns null if join is not possible\n        this.on('end', () => this.right.close());\n    }\n\n    close ()\n    {\n        super.close();\n        scheduleTask(() => this.right.close());\n    }\n\n    _createTransformer (leftItem)\n    {\n        return new SimpleTransformIterator(this.right.clone(), { transform: (rightItem, done) =>\n        {\n            let result = this.funJoin(leftItem, rightItem);\n            if (result !== null)\n                this._push(result);\n            done();\n        }});\n    }\n}\n\nmodule.exports = NestedLoopJoin;\n"]},"metadata":{},"sourceType":"script"}