{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EntryHandlerKeywordNest = void 0;\n\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\n\nconst EntryHandlerKeyword_1 = require(\"./EntryHandlerKeyword\");\n/**\n * Handles @nest entries.\n */\n\n\nclass EntryHandlerKeywordNest extends EntryHandlerKeyword_1.EntryHandlerKeyword {\n  constructor() {\n    super('@nest');\n  }\n\n  async handle(parsingContext, util, key, keys, value, depth) {\n    if (typeof value !== 'object') {\n      parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Found invalid @nest entry for '${key}': '${value}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_NEST_VALUE));\n    }\n\n    if ('@value' in (await util.unaliasKeywords(value, keys, depth, await parsingContext.getContext(keys)))) {\n      parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Found an invalid @value node for '${key}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_NEST_VALUE));\n    }\n\n    parsingContext.emittedStack[depth] = false;\n  }\n\n}\n\nexports.EntryHandlerKeywordNest = EntryHandlerKeywordNest;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/jsonld-streaming-parser/lib/entryhandler/keyword/EntryHandlerKeywordNest.js"],"names":["Object","defineProperty","exports","value","EntryHandlerKeywordNest","jsonld_context_parser_1","require","EntryHandlerKeyword_1","EntryHandlerKeyword","constructor","handle","parsingContext","util","key","keys","depth","emitError","ErrorCoded","ERROR_CODES","INVALID_NEST_VALUE","unaliasKeywords","getContext","emittedStack"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,uBAAR,GAAkC,KAAK,CAAvC;;AACA,MAAMC,uBAAuB,GAAGC,OAAO,CAAC,uBAAD,CAAvC;;AACA,MAAMC,qBAAqB,GAAGD,OAAO,CAAC,uBAAD,CAArC;AACA;AACA;AACA;;;AACA,MAAMF,uBAAN,SAAsCG,qBAAqB,CAACC,mBAA5D,CAAgF;AAC5EC,EAAAA,WAAW,GAAG;AACV,UAAM,OAAN;AACH;;AACW,QAANC,MAAM,CAACC,cAAD,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkCX,KAAlC,EAAyCY,KAAzC,EAAgD;AACxD,QAAI,OAAOZ,KAAP,KAAiB,QAArB,EAA+B;AAC3BQ,MAAAA,cAAc,CAACK,SAAf,CAAyB,IAAIX,uBAAuB,CAACY,UAA5B,CAAwC,kCAAiCJ,GAAI,OAAMV,KAAM,GAAzF,EAA6FE,uBAAuB,CAACa,WAAxB,CAAoCC,kBAAjI,CAAzB;AACH;;AACD,QAAI,aAAY,MAAMP,IAAI,CAACQ,eAAL,CAAqBjB,KAArB,EAA4BW,IAA5B,EAAkCC,KAAlC,EAAyC,MAAMJ,cAAc,CAACU,UAAf,CAA0BP,IAA1B,CAA/C,CAAlB,CAAJ,EAAuG;AACnGH,MAAAA,cAAc,CAACK,SAAf,CAAyB,IAAIX,uBAAuB,CAACY,UAA5B,CAAwC,qCAAoCJ,GAAI,GAAhF,EAAoFR,uBAAuB,CAACa,WAAxB,CAAoCC,kBAAxH,CAAzB;AACH;;AACDR,IAAAA,cAAc,CAACW,YAAf,CAA4BP,KAA5B,IAAqC,KAArC;AACH;;AAZ2E;;AAchFb,OAAO,CAACE,uBAAR,GAAkCA,uBAAlC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerKeywordNest = void 0;\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\nconst EntryHandlerKeyword_1 = require(\"./EntryHandlerKeyword\");\n/**\n * Handles @nest entries.\n */\nclass EntryHandlerKeywordNest extends EntryHandlerKeyword_1.EntryHandlerKeyword {\n    constructor() {\n        super('@nest');\n    }\n    async handle(parsingContext, util, key, keys, value, depth) {\n        if (typeof value !== 'object') {\n            parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Found invalid @nest entry for '${key}': '${value}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_NEST_VALUE));\n        }\n        if ('@value' in await util.unaliasKeywords(value, keys, depth, await parsingContext.getContext(keys))) {\n            parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Found an invalid @value node for '${key}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_NEST_VALUE));\n        }\n        parsingContext.emittedStack[depth] = false;\n    }\n}\nexports.EntryHandlerKeywordNest = EntryHandlerKeywordNest;\n//# sourceMappingURL=EntryHandlerKeywordNest.js.map"]},"metadata":{},"sourceType":"script"}