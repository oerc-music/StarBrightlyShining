{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KEY_CONTEXT_HTTPPROXYHANDLER = exports.ActorHttpProxy = void 0;\n\nconst bus_http_1 = require(\"@comunica/bus-http\");\n\nconst context_entries_1 = require(\"@comunica/context-entries\");\n/**\n * A comunica Proxy Http Actor.\n */\n\n\nclass ActorHttpProxy extends bus_http_1.ActorHttp {\n  constructor(args) {\n    super(args);\n  }\n\n  async test(action) {\n    if (!action.context) {\n      throw new Error(`Actor ${this.name} could not find a context.`);\n    }\n\n    const proxyHandler = action.context.get(context_entries_1.KeysHttpProxy.httpProxyHandler);\n\n    if (!proxyHandler) {\n      throw new Error(`Actor ${this.name} could not find a proxy handler in the context.`);\n    }\n\n    if (!(await proxyHandler.getProxy(action))) {\n      throw new Error(`Actor ${this.name} could not determine a proxy for the given request.`);\n    }\n\n    return {\n      time: Number.POSITIVE_INFINITY\n    };\n  }\n\n  async run(action) {\n    var _a;\n\n    const requestedUrl = typeof action.input === 'string' ? action.input : action.input.url;\n\n    if (!action.context) {\n      throw new Error('Illegal state: missing context');\n    }\n\n    const proxyHandler = action.context.get(context_entries_1.KeysHttpProxy.httpProxyHandler); // Send a request for the modified request\n\n    const output = await this.mediatorHttp.mediate(Object.assign(Object.assign({}, await proxyHandler.getProxy(action)), {\n      context: action.context.delete(context_entries_1.KeysHttpProxy.httpProxyHandler)\n    })); // Modify the response URL\n\n    output.url = (_a = output.headers.get('x-final-url')) !== null && _a !== void 0 ? _a : requestedUrl;\n    return output;\n  }\n\n}\n\nexports.ActorHttpProxy = ActorHttpProxy;\n/**\n * @deprecated Import this constant from @comunica/context-entries.\n */\n\nexports.KEY_CONTEXT_HTTPPROXYHANDLER = context_entries_1.KeysHttpProxy.httpProxyHandler;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@comunica/actor-http-proxy/lib/ActorHttpProxy.js"],"names":["Object","defineProperty","exports","value","KEY_CONTEXT_HTTPPROXYHANDLER","ActorHttpProxy","bus_http_1","require","context_entries_1","ActorHttp","constructor","args","test","action","context","Error","name","proxyHandler","get","KeysHttpProxy","httpProxyHandler","getProxy","time","Number","POSITIVE_INFINITY","run","_a","requestedUrl","input","url","output","mediatorHttp","mediate","assign","delete","headers"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,4BAAR,GAAuCF,OAAO,CAACG,cAAR,GAAyB,KAAK,CAArE;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,oBAAD,CAA1B;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,2BAAD,CAAjC;AACA;AACA;AACA;;;AACA,MAAMF,cAAN,SAA6BC,UAAU,CAACG,SAAxC,CAAkD;AAC9CC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN;AACH;;AACS,QAAJC,IAAI,CAACC,MAAD,EAAS;AACf,QAAI,CAACA,MAAM,CAACC,OAAZ,EAAqB;AACjB,YAAM,IAAIC,KAAJ,CAAW,SAAQ,KAAKC,IAAK,4BAA7B,CAAN;AACH;;AACD,UAAMC,YAAY,GAAGJ,MAAM,CAACC,OAAP,CAAeI,GAAf,CAAmBV,iBAAiB,CAACW,aAAlB,CAAgCC,gBAAnD,CAArB;;AACA,QAAI,CAACH,YAAL,EAAmB;AACf,YAAM,IAAIF,KAAJ,CAAW,SAAQ,KAAKC,IAAK,iDAA7B,CAAN;AACH;;AACD,QAAI,EAAC,MAAMC,YAAY,CAACI,QAAb,CAAsBR,MAAtB,CAAP,CAAJ,EAA0C;AACtC,YAAM,IAAIE,KAAJ,CAAW,SAAQ,KAAKC,IAAK,qDAA7B,CAAN;AACH;;AACD,WAAO;AAAEM,MAAAA,IAAI,EAAEC,MAAM,CAACC;AAAf,KAAP;AACH;;AACQ,QAAHC,GAAG,CAACZ,MAAD,EAAS;AACd,QAAIa,EAAJ;;AACA,UAAMC,YAAY,GAAG,OAAOd,MAAM,CAACe,KAAd,KAAwB,QAAxB,GAAmCf,MAAM,CAACe,KAA1C,GAAkDf,MAAM,CAACe,KAAP,CAAaC,GAApF;;AACA,QAAI,CAAChB,MAAM,CAACC,OAAZ,EAAqB;AACjB,YAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACH;;AACD,UAAME,YAAY,GAAGJ,MAAM,CAACC,OAAP,CAAeI,GAAf,CAAmBV,iBAAiB,CAACW,aAAlB,CAAgCC,gBAAnD,CAArB,CANc,CAOd;;AACA,UAAMU,MAAM,GAAG,MAAM,KAAKC,YAAL,CAAkBC,OAAlB,CAA0BhC,MAAM,CAACiC,MAAP,CAAcjC,MAAM,CAACiC,MAAP,CAAc,EAAd,EAAkB,MAAMhB,YAAY,CAACI,QAAb,CAAsBR,MAAtB,CAAxB,CAAd,EAAsE;AAAEC,MAAAA,OAAO,EAAED,MAAM,CAACC,OAAP,CAAeoB,MAAf,CAAsB1B,iBAAiB,CAACW,aAAlB,CAAgCC,gBAAtD;AAAX,KAAtE,CAA1B,CAArB,CARc,CASd;;AACAU,IAAAA,MAAM,CAACD,GAAP,GAAa,CAACH,EAAE,GAAGI,MAAM,CAACK,OAAP,CAAejB,GAAf,CAAmB,aAAnB,CAAN,MAA6C,IAA7C,IAAqDQ,EAAE,KAAK,KAAK,CAAjE,GAAqEA,EAArE,GAA0EC,YAAvF;AACA,WAAOG,MAAP;AACH;;AA7B6C;;AA+BlD5B,OAAO,CAACG,cAAR,GAAyBA,cAAzB;AACA;AACA;AACA;;AACAH,OAAO,CAACE,4BAAR,GAAuCI,iBAAiB,CAACW,aAAlB,CAAgCC,gBAAvE","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KEY_CONTEXT_HTTPPROXYHANDLER = exports.ActorHttpProxy = void 0;\nconst bus_http_1 = require(\"@comunica/bus-http\");\nconst context_entries_1 = require(\"@comunica/context-entries\");\n/**\n * A comunica Proxy Http Actor.\n */\nclass ActorHttpProxy extends bus_http_1.ActorHttp {\n    constructor(args) {\n        super(args);\n    }\n    async test(action) {\n        if (!action.context) {\n            throw new Error(`Actor ${this.name} could not find a context.`);\n        }\n        const proxyHandler = action.context.get(context_entries_1.KeysHttpProxy.httpProxyHandler);\n        if (!proxyHandler) {\n            throw new Error(`Actor ${this.name} could not find a proxy handler in the context.`);\n        }\n        if (!await proxyHandler.getProxy(action)) {\n            throw new Error(`Actor ${this.name} could not determine a proxy for the given request.`);\n        }\n        return { time: Number.POSITIVE_INFINITY };\n    }\n    async run(action) {\n        var _a;\n        const requestedUrl = typeof action.input === 'string' ? action.input : action.input.url;\n        if (!action.context) {\n            throw new Error('Illegal state: missing context');\n        }\n        const proxyHandler = action.context.get(context_entries_1.KeysHttpProxy.httpProxyHandler);\n        // Send a request for the modified request\n        const output = await this.mediatorHttp.mediate(Object.assign(Object.assign({}, await proxyHandler.getProxy(action)), { context: action.context.delete(context_entries_1.KeysHttpProxy.httpProxyHandler) }));\n        // Modify the response URL\n        output.url = (_a = output.headers.get('x-final-url')) !== null && _a !== void 0 ? _a : requestedUrl;\n        return output;\n    }\n}\nexports.ActorHttpProxy = ActorHttpProxy;\n/**\n * @deprecated Import this constant from @comunica/context-entries.\n */\nexports.KEY_CONTEXT_HTTPPROXYHANDLER = context_entries_1.KeysHttpProxy.httpProxyHandler;\n//# sourceMappingURL=ActorHttpProxy.js.map"]},"metadata":{},"sourceType":"script"}