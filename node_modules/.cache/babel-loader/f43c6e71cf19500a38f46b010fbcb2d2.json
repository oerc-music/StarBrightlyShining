{"ast":null,"code":"const DefaultGraph = require('./DefaultGraph.js');\n\nclass Quad {\n  constructor(subject, predicate, object, graph) {\n    this.subject = subject;\n    this.predicate = predicate;\n    this.object = object;\n\n    if (graph) {\n      this.graph = graph;\n    } else {\n      this.graph = new DefaultGraph();\n    }\n  }\n\n  equals(other) {\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n    return !!other && (other.termType === 'Quad' || !other.termType) && other.subject.equals(this.subject) && other.predicate.equals(this.predicate) && other.object.equals(this.object) && other.graph.equals(this.graph);\n  }\n\n}\n\nQuad.prototype.termType = 'Quad';\nQuad.prototype.value = '';\nmodule.exports = Quad;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@rdfjs/data-model/lib/Quad.js"],"names":["DefaultGraph","require","Quad","constructor","subject","predicate","object","graph","equals","other","termType","prototype","value","module","exports"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,mBAAD,CAA5B;;AAEA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,CAAEC,OAAF,EAAWC,SAAX,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqC;AAC9C,SAAKH,OAAL,GAAeA,OAAf;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,MAAL,GAAcA,MAAd;;AAEA,QAAIC,KAAJ,EAAW;AACT,WAAKA,KAAL,GAAaA,KAAb;AACD,KAFD,MAEO;AACL,WAAKA,KAAL,GAAa,IAAIP,YAAJ,EAAb;AACD;AACF;;AAEDQ,EAAAA,MAAM,CAAEC,KAAF,EAAS;AACb;AACA,WAAO,CAAC,CAACA,KAAF,KAAYA,KAAK,CAACC,QAAN,KAAmB,MAAnB,IAA6B,CAACD,KAAK,CAACC,QAAhD,KACLD,KAAK,CAACL,OAAN,CAAcI,MAAd,CAAqB,KAAKJ,OAA1B,CADK,IACiCK,KAAK,CAACJ,SAAN,CAAgBG,MAAhB,CAAuB,KAAKH,SAA5B,CADjC,IAELI,KAAK,CAACH,MAAN,CAAaE,MAAb,CAAoB,KAAKF,MAAzB,CAFK,IAE+BG,KAAK,CAACF,KAAN,CAAYC,MAAZ,CAAmB,KAAKD,KAAxB,CAFtC;AAGD;;AAlBQ;;AAqBXL,IAAI,CAACS,SAAL,CAAeD,QAAf,GAA0B,MAA1B;AACAR,IAAI,CAACS,SAAL,CAAeC,KAAf,GAAuB,EAAvB;AAEAC,MAAM,CAACC,OAAP,GAAiBZ,IAAjB","sourcesContent":["const DefaultGraph = require('./DefaultGraph.js')\n\nclass Quad {\n  constructor (subject, predicate, object, graph) {\n    this.subject = subject\n    this.predicate = predicate\n    this.object = object\n\n    if (graph) {\n      this.graph = graph\n    } else {\n      this.graph = new DefaultGraph()\n    }\n  }\n\n  equals (other) {\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n    return !!other && (other.termType === 'Quad' || !other.termType) &&\n      other.subject.equals(this.subject) && other.predicate.equals(this.predicate) &&\n      other.object.equals(this.object) && other.graph.equals(this.graph)\n  }\n}\n\nQuad.prototype.termType = 'Quad'\nQuad.prototype.value = ''\n\nmodule.exports = Quad\n"]},"metadata":{},"sourceType":"script"}