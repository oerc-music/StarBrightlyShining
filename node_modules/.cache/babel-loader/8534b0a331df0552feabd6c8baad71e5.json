{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActorRdfResolveQuadPatternRdfJsSource = void 0;\n\nconst bus_rdf_resolve_quad_pattern_1 = require(\"@comunica/bus-rdf-resolve-quad-pattern\");\n\nconst RdfJsQuadSource_1 = require(\"./RdfJsQuadSource\");\n/**\n * A comunica RDFJS Source RDF Resolve Quad Pattern Actor.\n */\n\n\nclass ActorRdfResolveQuadPatternRdfJsSource extends bus_rdf_resolve_quad_pattern_1.ActorRdfResolveQuadPatternSource {\n  constructor(args) {\n    super(args);\n  }\n\n  async test(action) {\n    if (!this.hasContextSingleSourceOfType('rdfjsSource', action.context)) {\n      throw new Error(`${this.name} requires a single source with an rdfjsSource to be present in the context.`);\n    }\n\n    const source = this.getContextSource(action.context);\n\n    if (!source || typeof source === 'string' || !('match' in source) && !source.value.match) {\n      throw new Error(`${this.name} received an invalid rdfjsSource.`);\n    }\n\n    return true;\n  }\n\n  async getSource(context) {\n    const source = this.getContextSource(context);\n    return new RdfJsQuadSource_1.RdfJsQuadSource('match' in source ? source : source.value);\n  }\n\n}\n\nexports.ActorRdfResolveQuadPatternRdfJsSource = ActorRdfResolveQuadPatternRdfJsSource;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@comunica/actor-rdf-resolve-quad-pattern-rdfjs-source/lib/ActorRdfResolveQuadPatternRdfJsSource.js"],"names":["Object","defineProperty","exports","value","ActorRdfResolveQuadPatternRdfJsSource","bus_rdf_resolve_quad_pattern_1","require","RdfJsQuadSource_1","ActorRdfResolveQuadPatternSource","constructor","args","test","action","hasContextSingleSourceOfType","context","Error","name","source","getContextSource","match","getSource","RdfJsQuadSource"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qCAAR,GAAgD,KAAK,CAArD;;AACA,MAAMC,8BAA8B,GAAGC,OAAO,CAAC,wCAAD,CAA9C;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,mBAAD,CAAjC;AACA;AACA;AACA;;;AACA,MAAMF,qCAAN,SAAoDC,8BAA8B,CAACG,gCAAnF,CAAoH;AAChHC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN;AACH;;AACS,QAAJC,IAAI,CAACC,MAAD,EAAS;AACf,QAAI,CAAC,KAAKC,4BAAL,CAAkC,aAAlC,EAAiDD,MAAM,CAACE,OAAxD,CAAL,EAAuE;AACnE,YAAM,IAAIC,KAAJ,CAAW,GAAE,KAAKC,IAAK,6EAAvB,CAAN;AACH;;AACD,UAAMC,MAAM,GAAG,KAAKC,gBAAL,CAAsBN,MAAM,CAACE,OAA7B,CAAf;;AACA,QAAI,CAACG,MAAD,IAAW,OAAOA,MAAP,KAAkB,QAA7B,IAA0C,EAAE,WAAWA,MAAb,KAAwB,CAACA,MAAM,CAACd,KAAP,CAAagB,KAApF,EAA4F;AACxF,YAAM,IAAIJ,KAAJ,CAAW,GAAE,KAAKC,IAAK,mCAAvB,CAAN;AACH;;AACD,WAAO,IAAP;AACH;;AACc,QAATI,SAAS,CAACN,OAAD,EAAU;AACrB,UAAMG,MAAM,GAAG,KAAKC,gBAAL,CAAsBJ,OAAtB,CAAf;AACA,WAAO,IAAIP,iBAAiB,CAACc,eAAtB,CAAsC,WAAWJ,MAAX,GAAoBA,MAApB,GAA6BA,MAAM,CAACd,KAA1E,CAAP;AACH;;AAjB+G;;AAmBpHD,OAAO,CAACE,qCAAR,GAAgDA,qCAAhD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActorRdfResolveQuadPatternRdfJsSource = void 0;\nconst bus_rdf_resolve_quad_pattern_1 = require(\"@comunica/bus-rdf-resolve-quad-pattern\");\nconst RdfJsQuadSource_1 = require(\"./RdfJsQuadSource\");\n/**\n * A comunica RDFJS Source RDF Resolve Quad Pattern Actor.\n */\nclass ActorRdfResolveQuadPatternRdfJsSource extends bus_rdf_resolve_quad_pattern_1.ActorRdfResolveQuadPatternSource {\n    constructor(args) {\n        super(args);\n    }\n    async test(action) {\n        if (!this.hasContextSingleSourceOfType('rdfjsSource', action.context)) {\n            throw new Error(`${this.name} requires a single source with an rdfjsSource to be present in the context.`);\n        }\n        const source = this.getContextSource(action.context);\n        if (!source || typeof source === 'string' || (!('match' in source) && !source.value.match)) {\n            throw new Error(`${this.name} received an invalid rdfjsSource.`);\n        }\n        return true;\n    }\n    async getSource(context) {\n        const source = this.getContextSource(context);\n        return new RdfJsQuadSource_1.RdfJsQuadSource('match' in source ? source : source.value);\n    }\n}\nexports.ActorRdfResolveQuadPatternRdfJsSource = ActorRdfResolveQuadPatternRdfJsSource;\n//# sourceMappingURL=ActorRdfResolveQuadPatternRdfJsSource.js.map"]},"metadata":{},"sourceType":"script"}