{"ast":null,"code":"import AsyncIteratorHandler from './AsyncIteratorHandler';\nimport DataHandler from './DataHandler';\nimport DeleteFunctionHandler from './DeleteFunctionHandler';\nimport ExecuteQueryHandler from './ExecuteQueryHandler';\nimport GetHandler from './GetFunctionHandler';\nimport InsertFunctionHandler from './InsertFunctionHandler';\nimport MutationExpressionsHandler from './MutationExpressionsHandler';\nimport PathExpressionHandler from './PathExpressionHandler';\nimport PredicateHandler from './PredicateHandler';\nimport PredicatesHandler from './PredicatesHandler';\nimport PreloadHandler from './PreloadHandler';\nimport PropertiesHandler from './PropertiesHandler';\nimport ReplaceFunctionHandler from './ReplaceFunctionHandler';\nimport SetFunctionHandler from './SetFunctionHandler';\nimport SortHandler from './SortHandler';\nimport SparqlHandler from './SparqlHandler';\nimport StringToLDflexHandler from './StringToLDflexHandler';\nimport SubjectHandler from './SubjectHandler';\nimport SubjectsHandler from './SubjectsHandler';\nimport ThenHandler from './ThenHandler';\nimport ToArrayHandler from './ToArrayHandler';\nimport { termToPrimitive } from './valueUtils';\n/**\n * A map with default property handlers.\n */\n\nexport default {\n  // Flag to loaders that exported paths are not ES6 modules\n  __esModule: () => undefined,\n  // Add thenable and async iterable behavior\n  then: new ThenHandler(),\n  [Symbol.asyncIterator]: new AsyncIteratorHandler(),\n  // Add read and query functionality\n  get: new GetHandler(),\n  subject: new SubjectHandler(),\n  predicate: new PredicateHandler(),\n  properties: new PropertiesHandler(),\n  predicates: new PredicatesHandler(),\n  pathExpression: new PathExpressionHandler(),\n  sparql: new SparqlHandler(),\n  subjects: new SubjectsHandler(),\n  results: new ExecuteQueryHandler(),\n  sort: new SortHandler('ASC'),\n  sortDesc: new SortHandler('DESC'),\n  preload: new PreloadHandler(),\n  // Add write functionality\n  mutationExpressions: new MutationExpressionsHandler(),\n  add: new InsertFunctionHandler(),\n  set: new SetFunctionHandler(),\n  replace: new ReplaceFunctionHandler(),\n  delete: new DeleteFunctionHandler(),\n  // Add RDFJS term handling\n  termType: termPropertyHandler('termType'),\n  value: termPropertyHandler('value'),\n  datatype: termPropertyHandler('datatype'),\n  language: termPropertyHandler('language'),\n  canonical: termPropertyHandler('canonical'),\n  equals: DataHandler.sync('subject', 'equals'),\n  toString: DataHandler.syncFunction('subject', 'value'),\n  valueOf: subjectToPrimitiveHandler(),\n  toPrimitive: subjectToPrimitiveHandler(),\n  // Add iteration helpers\n  toArray: new ToArrayHandler(),\n  termTypes: handler((_, path) => path.toArray(term => term.termType)),\n  values: handler((_, path) => path.toArray(term => term.value)),\n  datatypes: handler((_, path) => path.toArray(term => term.datatype)),\n  languages: handler((_, path) => path.toArray(term => term.language)),\n  // Parse a string into an LDflex object\n  resolve: new StringToLDflexHandler()\n}; // Creates a handler from the given function\n\nfunction handler(handle) {\n  return {\n    handle\n  };\n} // Creates a handler for the given RDF/JS Term property\n\n\nfunction termPropertyHandler(property) {\n  // If a resolved subject is present,\n  // behave as an RDF/JS term and synchronously expose the property;\n  // otherwise, return a promise to the property value\n  return handler(({\n    subject\n  }, path) => subject && property in subject ? subject[property] : path.then && path.then(term => term === null || term === void 0 ? void 0 : term[property]));\n} // Creates a handler that converts the subject into a primitive\n\n\nfunction subjectToPrimitiveHandler() {\n  return handler(({\n    subject\n  }) => () => typeof (subject === null || subject === void 0 ? void 0 : subject.termType) !== 'string' ? undefined : termToPrimitive(subject));\n}","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/ldflex/module/defaultHandlers.js"],"names":["AsyncIteratorHandler","DataHandler","DeleteFunctionHandler","ExecuteQueryHandler","GetHandler","InsertFunctionHandler","MutationExpressionsHandler","PathExpressionHandler","PredicateHandler","PredicatesHandler","PreloadHandler","PropertiesHandler","ReplaceFunctionHandler","SetFunctionHandler","SortHandler","SparqlHandler","StringToLDflexHandler","SubjectHandler","SubjectsHandler","ThenHandler","ToArrayHandler","termToPrimitive","__esModule","undefined","then","Symbol","asyncIterator","get","subject","predicate","properties","predicates","pathExpression","sparql","subjects","results","sort","sortDesc","preload","mutationExpressions","add","set","replace","delete","termType","termPropertyHandler","value","datatype","language","canonical","equals","sync","toString","syncFunction","valueOf","subjectToPrimitiveHandler","toPrimitive","toArray","termTypes","handler","_","path","term","values","datatypes","languages","resolve","handle","property"],"mappings":"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","sourcesContent":["import AsyncIteratorHandler from './AsyncIteratorHandler';\nimport DataHandler from './DataHandler';\nimport DeleteFunctionHandler from './DeleteFunctionHandler';\nimport ExecuteQueryHandler from './ExecuteQueryHandler';\nimport GetHandler from './GetFunctionHandler';\nimport InsertFunctionHandler from './InsertFunctionHandler';\nimport MutationExpressionsHandler from './MutationExpressionsHandler';\nimport PathExpressionHandler from './PathExpressionHandler';\nimport PredicateHandler from './PredicateHandler';\nimport PredicatesHandler from './PredicatesHandler';\nimport PreloadHandler from './PreloadHandler';\nimport PropertiesHandler from './PropertiesHandler';\nimport ReplaceFunctionHandler from './ReplaceFunctionHandler';\nimport SetFunctionHandler from './SetFunctionHandler';\nimport SortHandler from './SortHandler';\nimport SparqlHandler from './SparqlHandler';\nimport StringToLDflexHandler from './StringToLDflexHandler';\nimport SubjectHandler from './SubjectHandler';\nimport SubjectsHandler from './SubjectsHandler';\nimport ThenHandler from './ThenHandler';\nimport ToArrayHandler from './ToArrayHandler';\nimport { termToPrimitive } from './valueUtils';\n/**\n * A map with default property handlers.\n */\n\nexport default {\n  // Flag to loaders that exported paths are not ES6 modules\n  __esModule: () => undefined,\n  // Add thenable and async iterable behavior\n  then: new ThenHandler(),\n  [Symbol.asyncIterator]: new AsyncIteratorHandler(),\n  // Add read and query functionality\n  get: new GetHandler(),\n  subject: new SubjectHandler(),\n  predicate: new PredicateHandler(),\n  properties: new PropertiesHandler(),\n  predicates: new PredicatesHandler(),\n  pathExpression: new PathExpressionHandler(),\n  sparql: new SparqlHandler(),\n  subjects: new SubjectsHandler(),\n  results: new ExecuteQueryHandler(),\n  sort: new SortHandler('ASC'),\n  sortDesc: new SortHandler('DESC'),\n  preload: new PreloadHandler(),\n  // Add write functionality\n  mutationExpressions: new MutationExpressionsHandler(),\n  add: new InsertFunctionHandler(),\n  set: new SetFunctionHandler(),\n  replace: new ReplaceFunctionHandler(),\n  delete: new DeleteFunctionHandler(),\n  // Add RDFJS term handling\n  termType: termPropertyHandler('termType'),\n  value: termPropertyHandler('value'),\n  datatype: termPropertyHandler('datatype'),\n  language: termPropertyHandler('language'),\n  canonical: termPropertyHandler('canonical'),\n  equals: DataHandler.sync('subject', 'equals'),\n  toString: DataHandler.syncFunction('subject', 'value'),\n  valueOf: subjectToPrimitiveHandler(),\n  toPrimitive: subjectToPrimitiveHandler(),\n  // Add iteration helpers\n  toArray: new ToArrayHandler(),\n  termTypes: handler((_, path) => path.toArray(term => term.termType)),\n  values: handler((_, path) => path.toArray(term => term.value)),\n  datatypes: handler((_, path) => path.toArray(term => term.datatype)),\n  languages: handler((_, path) => path.toArray(term => term.language)),\n  // Parse a string into an LDflex object\n  resolve: new StringToLDflexHandler()\n}; // Creates a handler from the given function\n\nfunction handler(handle) {\n  return {\n    handle\n  };\n} // Creates a handler for the given RDF/JS Term property\n\n\nfunction termPropertyHandler(property) {\n  // If a resolved subject is present,\n  // behave as an RDF/JS term and synchronously expose the property;\n  // otherwise, return a promise to the property value\n  return handler(({\n    subject\n  }, path) => subject && property in subject ? subject[property] : path.then && path.then(term => term === null || term === void 0 ? void 0 : term[property]));\n} // Creates a handler that converts the subject into a primitive\n\n\nfunction subjectToPrimitiveHandler() {\n  return handler(({\n    subject\n  }) => () => typeof (subject === null || subject === void 0 ? void 0 : subject.termType) !== 'string' ? undefined : termToPrimitive(subject));\n}"]},"metadata":{},"sourceType":"module"}