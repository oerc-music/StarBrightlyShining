{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeHandlerDefinitionFragment = void 0;\n\nconst NodeHandlerDefinitionAdapter_1 = require(\"./NodeHandlerDefinitionAdapter\");\n/**\n * Errors if fragment definitions are found,\n * as these should have been processed away earlier.\n */\n\n\nclass NodeHandlerDefinitionFragment extends NodeHandlerDefinitionAdapter_1.NodeHandlerDefinitionAdapter {\n  constructor(util, settings) {\n    super('FragmentDefinition', util, settings);\n  }\n\n  handle(operationDefinition, convertContext) {\n    throw new Error('Illegal state: fragment definitions must be indexed and removed before processing');\n  }\n\n}\n\nexports.NodeHandlerDefinitionFragment = NodeHandlerDefinitionFragment;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/graphql-to-sparql/lib/handler/NodeHandlerDefinitionFragment.js"],"names":["Object","defineProperty","exports","value","NodeHandlerDefinitionFragment","NodeHandlerDefinitionAdapter_1","require","NodeHandlerDefinitionAdapter","constructor","util","settings","handle","operationDefinition","convertContext","Error"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,6BAAR,GAAwC,KAAK,CAA7C;;AACA,MAAMC,8BAA8B,GAAGC,OAAO,CAAC,gCAAD,CAA9C;AACA;AACA;AACA;AACA;;;AACA,MAAMF,6BAAN,SAA4CC,8BAA8B,CAACE,4BAA3E,CAAwG;AACpGC,EAAAA,WAAW,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACxB,UAAM,oBAAN,EAA4BD,IAA5B,EAAkCC,QAAlC;AACH;;AACDC,EAAAA,MAAM,CAACC,mBAAD,EAAsBC,cAAtB,EAAsC;AACxC,UAAM,IAAIC,KAAJ,CAAU,mFAAV,CAAN;AACH;;AANmG;;AAQxGZ,OAAO,CAACE,6BAAR,GAAwCA,6BAAxC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHandlerDefinitionFragment = void 0;\nconst NodeHandlerDefinitionAdapter_1 = require(\"./NodeHandlerDefinitionAdapter\");\n/**\n * Errors if fragment definitions are found,\n * as these should have been processed away earlier.\n */\nclass NodeHandlerDefinitionFragment extends NodeHandlerDefinitionAdapter_1.NodeHandlerDefinitionAdapter {\n    constructor(util, settings) {\n        super('FragmentDefinition', util, settings);\n    }\n    handle(operationDefinition, convertContext) {\n        throw new Error('Illegal state: fragment definitions must be indexed and removed before processing');\n    }\n}\nexports.NodeHandlerDefinitionFragment = NodeHandlerDefinitionFragment;\n//# sourceMappingURL=NodeHandlerDefinitionFragment.js.map"]},"metadata":{},"sourceType":"script"}