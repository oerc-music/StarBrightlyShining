{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EntryHandlerKeywordValue = void 0;\n\nconst EntryHandlerKeyword_1 = require(\"./EntryHandlerKeyword\");\n/**\n * Handles @value entries.\n */\n\n\nclass EntryHandlerKeywordValue extends EntryHandlerKeyword_1.EntryHandlerKeyword {\n  constructor() {\n    super('@value');\n  }\n\n  async test(parsingContext, util, key, keys, depth) {\n    return (await util.unaliasKeyword(keys[depth], keys.slice(0, keys.length - 1), depth - 1, true)) === '@value';\n  }\n\n  async handle(parsingContext, util, key, keys, value, depth) {\n    // If the value is valid, indicate that we are processing a literal.\n    // The actual value will be determined at the parent level when the @value is part of an object,\n    // because we may want to take into account additional entries such as @language.\n    // See {@link Util.valueToTerm}\n    // Indicate that we are processing a literal, and that no later predicates should be parsed at this depth.\n    parsingContext.literalStack[depth] = true; // Void any buffers that we may have accumulated up until now\n\n    delete parsingContext.unidentifiedValuesBuffer[depth];\n    delete parsingContext.unidentifiedGraphsBuffer[depth]; // Indicate that we have not emitted at this depth\n\n    parsingContext.emittedStack[depth] = false;\n  }\n\n}\n\nexports.EntryHandlerKeywordValue = EntryHandlerKeywordValue;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/jsonld-streaming-parser/lib/entryhandler/keyword/EntryHandlerKeywordValue.js"],"names":["Object","defineProperty","exports","value","EntryHandlerKeywordValue","EntryHandlerKeyword_1","require","EntryHandlerKeyword","constructor","test","parsingContext","util","key","keys","depth","unaliasKeyword","slice","length","handle","literalStack","unidentifiedValuesBuffer","unidentifiedGraphsBuffer","emittedStack"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,wBAAR,GAAmC,KAAK,CAAxC;;AACA,MAAMC,qBAAqB,GAAGC,OAAO,CAAC,uBAAD,CAArC;AACA;AACA;AACA;;;AACA,MAAMF,wBAAN,SAAuCC,qBAAqB,CAACE,mBAA7D,CAAiF;AAC7EC,EAAAA,WAAW,GAAG;AACV,UAAM,QAAN;AACH;;AACS,QAAJC,IAAI,CAACC,cAAD,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyC;AAC/C,WAAO,OAAMH,IAAI,CAACI,cAAL,CAAoBF,IAAI,CAACC,KAAD,CAAxB,EAAiCD,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcH,IAAI,CAACI,MAAL,GAAc,CAA5B,CAAjC,EAAiEH,KAAK,GAAG,CAAzE,EAA4E,IAA5E,CAAN,MAA4F,QAAnG;AACH;;AACW,QAANI,MAAM,CAACR,cAAD,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkCV,KAAlC,EAAyCW,KAAzC,EAAgD;AACxD;AACA;AACA;AACA;AACA;AACAJ,IAAAA,cAAc,CAACS,YAAf,CAA4BL,KAA5B,IAAqC,IAArC,CANwD,CAOxD;;AACA,WAAOJ,cAAc,CAACU,wBAAf,CAAwCN,KAAxC,CAAP;AACA,WAAOJ,cAAc,CAACW,wBAAf,CAAwCP,KAAxC,CAAP,CATwD,CAUxD;;AACAJ,IAAAA,cAAc,CAACY,YAAf,CAA4BR,KAA5B,IAAqC,KAArC;AACH;;AAnB4E;;AAqBjFZ,OAAO,CAACE,wBAAR,GAAmCA,wBAAnC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerKeywordValue = void 0;\nconst EntryHandlerKeyword_1 = require(\"./EntryHandlerKeyword\");\n/**\n * Handles @value entries.\n */\nclass EntryHandlerKeywordValue extends EntryHandlerKeyword_1.EntryHandlerKeyword {\n    constructor() {\n        super('@value');\n    }\n    async test(parsingContext, util, key, keys, depth) {\n        return await util.unaliasKeyword(keys[depth], keys.slice(0, keys.length - 1), depth - 1, true) === '@value';\n    }\n    async handle(parsingContext, util, key, keys, value, depth) {\n        // If the value is valid, indicate that we are processing a literal.\n        // The actual value will be determined at the parent level when the @value is part of an object,\n        // because we may want to take into account additional entries such as @language.\n        // See {@link Util.valueToTerm}\n        // Indicate that we are processing a literal, and that no later predicates should be parsed at this depth.\n        parsingContext.literalStack[depth] = true;\n        // Void any buffers that we may have accumulated up until now\n        delete parsingContext.unidentifiedValuesBuffer[depth];\n        delete parsingContext.unidentifiedGraphsBuffer[depth];\n        // Indicate that we have not emitted at this depth\n        parsingContext.emittedStack[depth] = false;\n    }\n}\nexports.EntryHandlerKeywordValue = EntryHandlerKeywordValue;\n//# sourceMappingURL=EntryHandlerKeywordValue.js.map"]},"metadata":{},"sourceType":"script"}