{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActorRdfParseXmlRdfa = void 0;\n\nconst bus_rdf_parse_1 = require(\"@comunica/bus-rdf-parse\");\n\nconst rdfa_streaming_parser_1 = require(\"rdfa-streaming-parser\");\n/**\n * A comunica XML RDFa RDF Parse Actor.\n */\n\n\nclass ActorRdfParseXmlRdfa extends bus_rdf_parse_1.ActorRdfParseFixedMediaTypes {\n  constructor(args) {\n    super(args);\n  }\n\n  async runHandle(action, mediaType, context) {\n    var _a;\n\n    const language = (_a = action.headers && action.headers.get('content-language')) !== null && _a !== void 0 ? _a : undefined;\n    action.input.on('error', error => quads.emit('error', error));\n    const quads = action.input.pipe(new rdfa_streaming_parser_1.RdfaParser({\n      baseIRI: action.baseIRI,\n      profile: 'xml',\n      language\n    }));\n    return {\n      quads,\n      triples: true\n    };\n  }\n\n}\n\nexports.ActorRdfParseXmlRdfa = ActorRdfParseXmlRdfa;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@comunica/actor-rdf-parse-xml-rdfa/lib/ActorRdfParseXmlRdfa.js"],"names":["Object","defineProperty","exports","value","ActorRdfParseXmlRdfa","bus_rdf_parse_1","require","rdfa_streaming_parser_1","ActorRdfParseFixedMediaTypes","constructor","args","runHandle","action","mediaType","context","_a","language","headers","get","undefined","input","on","error","quads","emit","pipe","RdfaParser","baseIRI","profile","triples"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;;AACA,MAAMC,eAAe,GAAGC,OAAO,CAAC,yBAAD,CAA/B;;AACA,MAAMC,uBAAuB,GAAGD,OAAO,CAAC,uBAAD,CAAvC;AACA;AACA;AACA;;;AACA,MAAMF,oBAAN,SAAmCC,eAAe,CAACG,4BAAnD,CAAgF;AAC5EC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN;AACH;;AACc,QAATC,SAAS,CAACC,MAAD,EAASC,SAAT,EAAoBC,OAApB,EAA6B;AACxC,QAAIC,EAAJ;;AACA,UAAMC,QAAQ,GAAG,CAACD,EAAE,GAAIH,MAAM,CAACK,OAAP,IAAkBL,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAmB,kBAAnB,CAAzB,MAAsE,IAAtE,IAA8EH,EAAE,KAAK,KAAK,CAA1F,GAA8FA,EAA9F,GAAmGI,SAApH;AACAP,IAAAA,MAAM,CAACQ,KAAP,CAAaC,EAAb,CAAgB,OAAhB,EAAyBC,KAAK,IAAIC,KAAK,CAACC,IAAN,CAAW,OAAX,EAAoBF,KAApB,CAAlC;AACA,UAAMC,KAAK,GAAGX,MAAM,CAACQ,KAAP,CAAaK,IAAb,CAAkB,IAAIlB,uBAAuB,CAACmB,UAA5B,CAAuC;AAAEC,MAAAA,OAAO,EAAEf,MAAM,CAACe,OAAlB;AAA2BC,MAAAA,OAAO,EAAE,KAApC;AAA2CZ,MAAAA;AAA3C,KAAvC,CAAlB,CAAd;AACA,WAAO;AAAEO,MAAAA,KAAF;AAASM,MAAAA,OAAO,EAAE;AAAlB,KAAP;AACH;;AAV2E;;AAYhF3B,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActorRdfParseXmlRdfa = void 0;\nconst bus_rdf_parse_1 = require(\"@comunica/bus-rdf-parse\");\nconst rdfa_streaming_parser_1 = require(\"rdfa-streaming-parser\");\n/**\n * A comunica XML RDFa RDF Parse Actor.\n */\nclass ActorRdfParseXmlRdfa extends bus_rdf_parse_1.ActorRdfParseFixedMediaTypes {\n    constructor(args) {\n        super(args);\n    }\n    async runHandle(action, mediaType, context) {\n        var _a;\n        const language = (_a = (action.headers && action.headers.get('content-language'))) !== null && _a !== void 0 ? _a : undefined;\n        action.input.on('error', error => quads.emit('error', error));\n        const quads = action.input.pipe(new rdfa_streaming_parser_1.RdfaParser({ baseIRI: action.baseIRI, profile: 'xml', language }));\n        return { quads, triples: true };\n    }\n}\nexports.ActorRdfParseXmlRdfa = ActorRdfParseXmlRdfa;\n//# sourceMappingURL=ActorRdfParseXmlRdfa.js.map"]},"metadata":{},"sourceType":"script"}