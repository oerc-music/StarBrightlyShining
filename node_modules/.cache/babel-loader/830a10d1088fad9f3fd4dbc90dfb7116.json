{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SparqlXmlBindingsTransformer = void 0;\n\nconst stream_1 = require(\"stream\");\n/**\n * Transforms a stream of SPARQL JSON bindings object to parsed bindings.\n */\n\n\nclass SparqlXmlBindingsTransformer extends stream_1.Transform {\n  constructor(parser) {\n    super({\n      objectMode: true\n    });\n    this.parser = parser;\n  }\n\n  _transform(chunk, encoding, callback) {\n    let bindings;\n\n    try {\n      bindings = this.parser.parseXmlBindings(chunk);\n    } catch (e) {\n      return callback(e);\n    }\n\n    callback(null, bindings);\n  }\n\n}\n\nexports.SparqlXmlBindingsTransformer = SparqlXmlBindingsTransformer;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/sparqlxml-parse/lib/SparqlXmlBindingsTransformer.js"],"names":["Object","defineProperty","exports","value","SparqlXmlBindingsTransformer","stream_1","require","Transform","constructor","parser","objectMode","_transform","chunk","encoding","callback","bindings","parseXmlBindings","e"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,4BAAR,GAAuC,KAAK,CAA5C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;AACA;AACA;AACA;;;AACA,MAAMF,4BAAN,SAA2CC,QAAQ,CAACE,SAApD,CAA8D;AAC1DC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,UAAM;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAN;AACA,SAAKD,MAAL,GAAcA,MAAd;AACH;;AACDE,EAAAA,UAAU,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAA4B;AAClC,QAAIC,QAAJ;;AACA,QAAI;AACAA,MAAAA,QAAQ,GAAG,KAAKN,MAAL,CAAYO,gBAAZ,CAA6BJ,KAA7B,CAAX;AACH,KAFD,CAGA,OAAOK,CAAP,EAAU;AACN,aAAOH,QAAQ,CAACG,CAAD,CAAf;AACH;;AACDH,IAAAA,QAAQ,CAAC,IAAD,EAAOC,QAAP,CAAR;AACH;;AAdyD;;AAgB9Db,OAAO,CAACE,4BAAR,GAAuCA,4BAAvC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SparqlXmlBindingsTransformer = void 0;\nconst stream_1 = require(\"stream\");\n/**\n * Transforms a stream of SPARQL JSON bindings object to parsed bindings.\n */\nclass SparqlXmlBindingsTransformer extends stream_1.Transform {\n    constructor(parser) {\n        super({ objectMode: true });\n        this.parser = parser;\n    }\n    _transform(chunk, encoding, callback) {\n        let bindings;\n        try {\n            bindings = this.parser.parseXmlBindings(chunk);\n        }\n        catch (e) {\n            return callback(e);\n        }\n        callback(null, bindings);\n    }\n}\nexports.SparqlXmlBindingsTransformer = SparqlXmlBindingsTransformer;\n//# sourceMappingURL=SparqlXmlBindingsTransformer.js.map"]},"metadata":{},"sourceType":"script"}