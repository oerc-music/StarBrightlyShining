{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActorRdfSerializeFixedMediaTypes = void 0;\n\nconst actor_abstract_mediatyped_1 = require(\"@comunica/actor-abstract-mediatyped\");\n/**\n * A base actor for listening to RDF serialize events that has fixed media types.\n *\n * Actor types:\n * * Input:  IActionRdfSerializeOrMediaType:      A serialize input or a media type input.\n * * Test:   <none>\n * * Output: IActorRdfSerializeOutputOrMediaType: The serialized quads.\n *\n * @see IActionInit\n */\n\n\nclass ActorRdfSerializeFixedMediaTypes extends actor_abstract_mediatyped_1.ActorAbstractMediaTypedFixed {\n  constructor(args) {\n    super(args);\n  }\n\n  async testHandleChecked(action) {\n    return true;\n  }\n\n}\n\nexports.ActorRdfSerializeFixedMediaTypes = ActorRdfSerializeFixedMediaTypes;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@comunica/bus-rdf-serialize/lib/ActorRdfSerializeFixedMediaTypes.js"],"names":["Object","defineProperty","exports","value","ActorRdfSerializeFixedMediaTypes","actor_abstract_mediatyped_1","require","ActorAbstractMediaTypedFixed","constructor","args","testHandleChecked","action"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gCAAR,GAA2C,KAAK,CAAhD;;AACA,MAAMC,2BAA2B,GAAGC,OAAO,CAAC,qCAAD,CAA3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMF,gCAAN,SAA+CC,2BAA2B,CAACE,4BAA3E,CAAwG;AACpGC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN;AACH;;AACsB,QAAjBC,iBAAiB,CAACC,MAAD,EAAS;AAC5B,WAAO,IAAP;AACH;;AANmG;;AAQxGT,OAAO,CAACE,gCAAR,GAA2CA,gCAA3C","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActorRdfSerializeFixedMediaTypes = void 0;\nconst actor_abstract_mediatyped_1 = require(\"@comunica/actor-abstract-mediatyped\");\n/**\n * A base actor for listening to RDF serialize events that has fixed media types.\n *\n * Actor types:\n * * Input:  IActionRdfSerializeOrMediaType:      A serialize input or a media type input.\n * * Test:   <none>\n * * Output: IActorRdfSerializeOutputOrMediaType: The serialized quads.\n *\n * @see IActionInit\n */\nclass ActorRdfSerializeFixedMediaTypes extends actor_abstract_mediatyped_1.ActorAbstractMediaTypedFixed {\n    constructor(args) {\n        super(args);\n    }\n    async testHandleChecked(action) {\n        return true;\n    }\n}\nexports.ActorRdfSerializeFixedMediaTypes = ActorRdfSerializeFixedMediaTypes;\n//# sourceMappingURL=ActorRdfSerializeFixedMediaTypes.js.map"]},"metadata":{},"sourceType":"script"}