{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeValueHandlerEnum = void 0;\n\nconst NodeValueHandlerAdapter_1 = require(\"./NodeValueHandlerAdapter\");\n/**\n * Converts GraphQL enums to RDF named nodes.\n */\n\n\nclass NodeValueHandlerEnum extends NodeValueHandlerAdapter_1.NodeValueHandlerAdapter {\n  constructor(util, settings) {\n    super('EnumValue', util, settings);\n  }\n\n  handle(valueNode, fieldName, convertContext) {\n    return {\n      terms: [this.util.valueToNamedNode(valueNode.value, convertContext.context)]\n    };\n  }\n\n}\n\nexports.NodeValueHandlerEnum = NodeValueHandlerEnum;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/graphql-to-sparql/lib/handler/valuenode/NodeValueHandlerEnum.js"],"names":["Object","defineProperty","exports","value","NodeValueHandlerEnum","NodeValueHandlerAdapter_1","require","NodeValueHandlerAdapter","constructor","util","settings","handle","valueNode","fieldName","convertContext","terms","valueToNamedNode","context"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;;AACA,MAAMC,yBAAyB,GAAGC,OAAO,CAAC,2BAAD,CAAzC;AACA;AACA;AACA;;;AACA,MAAMF,oBAAN,SAAmCC,yBAAyB,CAACE,uBAA7D,CAAqF;AACjFC,EAAAA,WAAW,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACxB,UAAM,WAAN,EAAmBD,IAAnB,EAAyBC,QAAzB;AACH;;AACDC,EAAAA,MAAM,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,cAAvB,EAAuC;AACzC,WAAO;AAAEC,MAAAA,KAAK,EAAE,CAAC,KAAKN,IAAL,CAAUO,gBAAV,CAA2BJ,SAAS,CAACT,KAArC,EAA4CW,cAAc,CAACG,OAA3D,CAAD;AAAT,KAAP;AACH;;AANgF;;AAQrFf,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeValueHandlerEnum = void 0;\nconst NodeValueHandlerAdapter_1 = require(\"./NodeValueHandlerAdapter\");\n/**\n * Converts GraphQL enums to RDF named nodes.\n */\nclass NodeValueHandlerEnum extends NodeValueHandlerAdapter_1.NodeValueHandlerAdapter {\n    constructor(util, settings) {\n        super('EnumValue', util, settings);\n    }\n    handle(valueNode, fieldName, convertContext) {\n        return { terms: [this.util.valueToNamedNode(valueNode.value, convertContext.context)] };\n    }\n}\nexports.NodeValueHandlerEnum = NodeValueHandlerEnum;\n//# sourceMappingURL=NodeValueHandlerEnum.js.map"]},"metadata":{},"sourceType":"script"}