{"ast":null,"code":"import ActivityHandler from './ActivityHandler';\n/* babel-plugin-inline-import './activity.ttl' */\n\nconst activityTemplate = \"_:id a _:type;\\n    <https://www.w3.org/ns/activitystreams#actor> _:actor;\\n    <https://www.w3.org/ns/activitystreams#object> _:object;\\n    <https://www.w3.org/ns/activitystreams#published> _:published.\\n\";\nimport { replaceVariables } from '../util';\nimport { namedNode, literal } from '@rdfjs/data-model';\nimport { v4 as uuidv4 } from 'uuid';\nimport context from '@solid/context';\nconst {\n  xsd\n} = context['@context'];\n/**\n * Handler that creates an activity in the user's data pod\n * Requires:\n * - the `root.user` handler\n * - the `root[...]` resolver\n * - a queryEngine property in the path settings\n */\n\nexport default class CreateActivityHandler extends ActivityHandler {\n  // Creates an activity for insertion in the given document\n  async *createResults(activity, document) {\n    const id = namedNode(new URL(\"#\".concat(uuidv4()), document).href);\n    const published = literal(new Date().toISOString(), \"\".concat(xsd, \"dateTime\"));\n    activity = {\n      id,\n      published,\n      ...activity\n    };\n    const insert = replaceVariables(activityTemplate, activity);\n    yield {\n      id,\n      insert\n    };\n  } // Inserts the activities into the document\n\n\n  async processResults(results, document, queryEngine) {\n    const sparql = \"INSERT {\\n\".concat(results.map(r => r.insert).join(''), \"}\");\n    await queryEngine.executeUpdate(sparql, document).next();\n    return results.map(r => r.id);\n  }\n\n}","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@solid/query-ldflex/module/handlers/CreateActivityHandler.js"],"names":["ActivityHandler","activityTemplate","replaceVariables","namedNode","literal","v4","uuidv4","context","xsd","CreateActivityHandler","createResults","activity","document","id","URL","concat","href","published","Date","toISOString","insert","processResults","results","queryEngine","sparql","map","r","join","executeUpdate","next"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AAEA;;AACA,MAAMC,gBAAgB,GAAG,gNAAzB;AACA,SAASC,gBAAT,QAAiC,SAAjC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,mBAAnC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,MAAM;AACJC,EAAAA;AADI,IAEFD,OAAO,CAAC,UAAD,CAFX;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,MAAME,qBAAN,SAAoCT,eAApC,CAAoD;AACjE;AACoB,SAAbU,aAAa,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACvC,UAAMC,EAAE,GAAGV,SAAS,CAAC,IAAIW,GAAJ,CAAQ,IAAIC,MAAJ,CAAWT,MAAM,EAAjB,CAAR,EAA8BM,QAA9B,EAAwCI,IAAzC,CAApB;AACA,UAAMC,SAAS,GAAGb,OAAO,CAAC,IAAIc,IAAJ,GAAWC,WAAX,EAAD,EAA2B,GAAGJ,MAAH,CAAUP,GAAV,EAAe,UAAf,CAA3B,CAAzB;AACAG,IAAAA,QAAQ,GAAG;AACTE,MAAAA,EADS;AAETI,MAAAA,SAFS;AAGT,SAAGN;AAHM,KAAX;AAKA,UAAMS,MAAM,GAAGlB,gBAAgB,CAACD,gBAAD,EAAmBU,QAAnB,CAA/B;AACA,UAAM;AACJE,MAAAA,EADI;AAEJO,MAAAA;AAFI,KAAN;AAID,GAfgE,CAe/D;;;AAGkB,QAAdC,cAAc,CAACC,OAAD,EAAUV,QAAV,EAAoBW,WAApB,EAAiC;AACnD,UAAMC,MAAM,GAAG,aAAaT,MAAb,CAAoBO,OAAO,CAACG,GAAR,CAAYC,CAAC,IAAIA,CAAC,CAACN,MAAnB,EAA2BO,IAA3B,CAAgC,EAAhC,CAApB,EAAyD,GAAzD,CAAf;AACA,UAAMJ,WAAW,CAACK,aAAZ,CAA0BJ,MAA1B,EAAkCZ,QAAlC,EAA4CiB,IAA5C,EAAN;AACA,WAAOP,OAAO,CAACG,GAAR,CAAYC,CAAC,IAAIA,CAAC,CAACb,EAAnB,CAAP;AACD;;AAtBgE","sourcesContent":["import ActivityHandler from './ActivityHandler';\n\n/* babel-plugin-inline-import './activity.ttl' */\nconst activityTemplate = \"_:id a _:type;\\n    <https://www.w3.org/ns/activitystreams#actor> _:actor;\\n    <https://www.w3.org/ns/activitystreams#object> _:object;\\n    <https://www.w3.org/ns/activitystreams#published> _:published.\\n\";\nimport { replaceVariables } from '../util';\nimport { namedNode, literal } from '@rdfjs/data-model';\nimport { v4 as uuidv4 } from 'uuid';\nimport context from '@solid/context';\nconst {\n  xsd\n} = context['@context'];\n/**\n * Handler that creates an activity in the user's data pod\n * Requires:\n * - the `root.user` handler\n * - the `root[...]` resolver\n * - a queryEngine property in the path settings\n */\n\nexport default class CreateActivityHandler extends ActivityHandler {\n  // Creates an activity for insertion in the given document\n  async *createResults(activity, document) {\n    const id = namedNode(new URL(\"#\".concat(uuidv4()), document).href);\n    const published = literal(new Date().toISOString(), \"\".concat(xsd, \"dateTime\"));\n    activity = {\n      id,\n      published,\n      ...activity\n    };\n    const insert = replaceVariables(activityTemplate, activity);\n    yield {\n      id,\n      insert\n    };\n  } // Inserts the activities into the document\n\n\n  async processResults(results, document, queryEngine) {\n    const sparql = \"INSERT {\\n\".concat(results.map(r => r.insert).join(''), \"}\");\n    await queryEngine.executeUpdate(sparql, document).next();\n    return results.map(r => r.id);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}