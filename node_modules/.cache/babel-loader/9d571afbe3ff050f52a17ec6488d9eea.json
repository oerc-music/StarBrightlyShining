{"ast":null,"code":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { postAnnotation } from 'meld-clients-core/lib/actions/index';\n\nclass SubmitButton extends Component {\n  constructor(props) {\n    super(props);\n    this.post = this.post.bind(this);\n    this.defaultOnResponse = this.defaultOnResponse.bind(this);\n  }\n\n  defaultOnResponse(resp) {\n    // overwritten if onResponse supplied in props\n    console.log(\"Received response: \", resp);\n  }\n\n  post() {\n    let submitHandlerArgs = \"submitHandlerArgs\" in this.props ? this.props.submitHandlerArgs : {};\n    this.props.postAnnotation(this.props.submitUri, \"\", this.props.submitHandler(submitHandlerArgs), \"\", typeof this.props.onResponse === \"function\" ? this.props.onResponse : this.defaultOnResponse);\n  }\n\n  render() {\n    const buttonContent = \"buttonContent\" in this.props ? this.props.buttonContent : \"Submit\";\n\n    if (\"disabled\" in this.props) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"selectable-score-postButton disabled\"\n      }, buttonContent);\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"selectable-score-postButton\",\n        onClick: this.post\n      }, buttonContent);\n    }\n  }\n\n}\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    postAnnotation\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubmitButton);","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/selectable-score/lib/submit-button.js"],"names":["React","Component","connect","bindActionCreators","postAnnotation","SubmitButton","constructor","props","post","bind","defaultOnResponse","resp","console","log","submitHandlerArgs","submitUri","submitHandler","onResponse","render","buttonContent","createElement","className","onClick","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,cAAT,QAA+B,qCAA/B;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDC,EAAAA,iBAAiB,CAACC,IAAD,EAAO;AACtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,IAAnC;AACD;;AAEDH,EAAAA,IAAI,GAAG;AACL,QAAIM,iBAAiB,GAAG,uBAAuB,KAAKP,KAA5B,GAAoC,KAAKA,KAAL,CAAWO,iBAA/C,GAAmE,EAA3F;AACA,SAAKP,KAAL,CAAWH,cAAX,CAA0B,KAAKG,KAAL,CAAWQ,SAArC,EAAgD,EAAhD,EAAoD,KAAKR,KAAL,CAAWS,aAAX,CAAyBF,iBAAzB,CAApD,EAAiG,EAAjG,EAAqG,OAAO,KAAKP,KAAL,CAAWU,UAAlB,KAAiC,UAAjC,GAA8C,KAAKV,KAAL,CAAWU,UAAzD,GAAsE,KAAKP,iBAAhL;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,mBAAmB,KAAKZ,KAAxB,GAAgC,KAAKA,KAAL,CAAWY,aAA3C,GAA2D,QAAjF;;AAEA,QAAI,cAAc,KAAKZ,KAAvB,EAA8B;AAC5B,aAAO,aAAaP,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AAC7CC,QAAAA,SAAS,EAAE;AADkC,OAA3B,EAEjBF,aAFiB,CAApB;AAGD,KAJD,MAIO;AACL,aAAO,aAAanB,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AAC7CC,QAAAA,SAAS,EAAE,6BADkC;AAE7CC,QAAAA,OAAO,EAAE,KAAKd;AAF+B,OAA3B,EAGjBW,aAHiB,CAApB;AAID;AACF;;AA9BkC;;AAkCrC,SAASI,eAAT,GAA2B;AACzB,SAAO,EAAP;AACD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAOtB,kBAAkB,CAAC;AACxBC,IAAAA;AADwB,GAAD,EAEtBqB,QAFsB,CAAzB;AAGD;;AAED,eAAevB,OAAO,CAACqB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnB,YAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { postAnnotation } from 'meld-clients-core/lib/actions/index';\n\nclass SubmitButton extends Component {\n  constructor(props) {\n    super(props);\n    this.post = this.post.bind(this);\n    this.defaultOnResponse = this.defaultOnResponse.bind(this);\n  }\n\n  defaultOnResponse(resp) {\n    // overwritten if onResponse supplied in props\n    console.log(\"Received response: \", resp);\n  }\n\n  post() {\n    let submitHandlerArgs = \"submitHandlerArgs\" in this.props ? this.props.submitHandlerArgs : {};\n    this.props.postAnnotation(this.props.submitUri, \"\", this.props.submitHandler(submitHandlerArgs), \"\", typeof this.props.onResponse === \"function\" ? this.props.onResponse : this.defaultOnResponse);\n  }\n\n  render() {\n    const buttonContent = \"buttonContent\" in this.props ? this.props.buttonContent : \"Submit\";\n\n    if (\"disabled\" in this.props) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"selectable-score-postButton disabled\"\n      }, buttonContent);\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"selectable-score-postButton\",\n        onClick: this.post\n      }, buttonContent);\n    }\n  }\n\n}\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    postAnnotation\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubmitButton);"]},"metadata":{},"sourceType":"module"}