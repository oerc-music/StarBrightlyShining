{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActionObserver = void 0;\n/**\n * An ActionObserver can passively listen to {@link Actor#run} inputs and outputs for all actors on a certain bus.\n *\n * ActionObserver should not edit inputs and outputs,\n * they should be considered immutable.\n *\n * @see Actor\n * @see Bus\n *\n * @template I The input type of an actor.\n * @template O The output type of an actor.\n */\n\nclass ActionObserver {\n  /**\n   * All enumerable properties from the `args` object are inherited to this observer.\n   *\n   * The observer will NOT automatically subscribe to the given bus when this constructor is called.\n   *\n   * @param {IActionObserverArgs<I extends IAction, O extends IActorOutput>} args Arguments object\n   * @throws When required arguments are missing.\n   */\n  constructor(args) {\n    Object.assign(this, args);\n  }\n\n}\n\nexports.ActionObserver = ActionObserver;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@comunica/core/lib/ActionObserver.js"],"names":["Object","defineProperty","exports","value","ActionObserver","constructor","args","assign"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,cAAN,CAAqB;AACjB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACdN,IAAAA,MAAM,CAACO,MAAP,CAAc,IAAd,EAAoBD,IAApB;AACH;;AAXgB;;AAarBJ,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActionObserver = void 0;\n/**\n * An ActionObserver can passively listen to {@link Actor#run} inputs and outputs for all actors on a certain bus.\n *\n * ActionObserver should not edit inputs and outputs,\n * they should be considered immutable.\n *\n * @see Actor\n * @see Bus\n *\n * @template I The input type of an actor.\n * @template O The output type of an actor.\n */\nclass ActionObserver {\n    /**\n     * All enumerable properties from the `args` object are inherited to this observer.\n     *\n     * The observer will NOT automatically subscribe to the given bus when this constructor is called.\n     *\n     * @param {IActionObserverArgs<I extends IAction, O extends IActorOutput>} args Arguments object\n     * @throws When required arguments are missing.\n     */\n    constructor(args) {\n        Object.assign(this, args);\n    }\n}\nexports.ActionObserver = ActionObserver;\n//# sourceMappingURL=ActionObserver.js.map"]},"metadata":{},"sourceType":"script"}