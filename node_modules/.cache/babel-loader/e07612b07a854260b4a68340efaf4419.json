{"ast":null,"code":"var _jsxFileName = \"/Users/mark/localRepos/StarBrightlyShining/src/containers/extractVisualiser.js\";\nimport React, { Component } from 'react';\nimport { convertCoords } from 'meld-clients-core/lib/library/boxesForMeasures';\nimport { prefix as pref } from 'meld-clients-core/lib/library/prefixes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction xmin(positions) {\n  return Math.min(...positions.map(pos => pos.x));\n}\n\nfunction xmax(positions) {\n  return Math.max(...positions.map(pos => pos.x2));\n}\n\nexport default class ExtractVisualiser extends Component {\n  constructor(props) {\n    super(props);\n    this.xRanges = this.xRanges.bind(this);\n    this.simpleLine = this.simpleLine.bind(this);\n  }\n\n  simpleLine(xrange, i) {\n    if (xrange) {\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        className: \"materialLine line-\" + i,\n        x1: xrange[0],\n        x2: xrange[1],\n        y1: 20,\n        y2: 20,\n        onClick: this.props.handleSelectAnnotation.bind(null, this.props.musicalMaterial[i])\n      }, \"material-\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n  xRanges(material) {\n    let xPositions = [];\n    const extracts = material[pref.frbr + \"embodiment\"];\n    const ids = extracts.reduce((extractNotes, extract) => {\n      console.log(extract);\n      return extract[pref.frbr + \"member\"].reduce((selectionNotes, selection) => {\n        console.log(selection);\n        return selection[pref.frbr + \"part\"].reduce((notes, uri) => uri.startsWith(this.props.uri + \"#\") ? notes.concat([uri]) : notes, selectionNotes);\n      }, extractNotes);\n    }, []);\n    const frags = ids.map(x => x.split('#')[1]);\n    console.log(frags);\n    const positions = frags.map(convertCoords);\n    console.log(positions);\n    return [xmin(positions), xmax(positions)];\n  }\n\n  render() {\n    if (this.props.toDraw && this.props.toDraw.length) {\n      // const toDraw = this.props.musicalMaterial.map(this.xRanges);\n      // console.log(\"!!!!\", toDraw);\n      return /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"6000\",\n        height: \"50\",\n        children: this.props.toDraw.map(this.simpleLine)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/src/containers/extractVisualiser.js"],"names":["React","Component","convertCoords","prefix","pref","xmin","positions","Math","min","map","pos","x","xmax","max","x2","ExtractVisualiser","constructor","props","xRanges","bind","simpleLine","xrange","i","handleSelectAnnotation","musicalMaterial","material","xPositions","extracts","frbr","ids","reduce","extractNotes","extract","console","log","selectionNotes","selection","notes","uri","startsWith","concat","frags","split","render","toDraw","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { convertCoords } from 'meld-clients-core/lib/library/boxesForMeasures';\nimport { prefix as pref } from 'meld-clients-core/lib/library/prefixes';\n\nfunction xmin(positions){\n\treturn Math.min(...positions.map(pos => pos.x));\n}\n\nfunction xmax(positions){\n\treturn Math.max(...positions.map(pos => pos.x2));\n}\n\nexport default class ExtractVisualiser extends Component {\n  constructor(props) {\n\t\tsuper(props);\n\t\tthis.xRanges = this.xRanges.bind(this);\n\t\tthis.simpleLine = this.simpleLine.bind(this);\n\t}\n\tsimpleLine(xrange, i){\n\t\tif(xrange){\n\t\t\treturn <line className={\"materialLine line-\"+i} x1={xrange[0]} x2={xrange[1]}\n\t\t\t\t\t\t\t\t\t y1={20} y2={20} key={\"material-\"+i}\n\t\t\t\t\t\t\t\t\t onClick={this.props.handleSelectAnnotation.bind(null, this.props.musicalMaterial[i]) }/>;\n\t\t}\n\t}\n\txRanges(material) {\n\t\tlet xPositions = [];\n\t\tconst extracts = material[pref.frbr+\"embodiment\"];\n\t\tconst ids = extracts.reduce(\n\t\t\t(extractNotes, extract) => {\n\t\t\t\tconsole.log(extract);\n\t\t\t\treturn extract[pref.frbr+\"member\"].reduce(\n\t\t\t\t\t(selectionNotes, selection) => {\n\t\t\t\t\t\tconsole.log(selection);\n\t\t\t\t\t\treturn selection[pref.frbr+\"part\"].reduce(\n\t\t\t\t\t\t\t(notes, uri) => ((uri.startsWith(this.props.uri + \"#\")) ? notes.concat([uri]) : notes),\n\t\t\t\t\t\t\tselectionNotes);\n\t\t\t\t\t}, extractNotes);\n\t\t\t}, []);\n\t\tconst frags = ids.map(x => x.split('#')[1]);\n\t\tconsole.log(frags);\n\t\tconst positions = frags.map(convertCoords);\n\t\tconsole.log(positions);\n\t\treturn [xmin(positions), xmax(positions)];\n\t}\n\n\trender(){\n\t\tif(this.props.toDraw && this.props.toDraw.length){\n\t\t\t// const toDraw = this.props.musicalMaterial.map(this.xRanges);\n\t\t\t// console.log(\"!!!!\", toDraw);\n\t\t\treturn (\n\t\t\t\t<svg width=\"6000\" height=\"50\">\n\t\t\t\t\t{this.props.toDraw.map(this.simpleLine)}\n\t\t\t\t</svg>\n\t\t\t);\n\t\t} else return <div/>;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}