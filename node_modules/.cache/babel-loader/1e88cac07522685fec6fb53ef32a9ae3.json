{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ensureArray, fetchScore, HAS_BODY, scoreNextPage, scorePrevPage, updateLatestRenderedPageNum } from '../actions/index';\nimport { CUE_AUDIO, CUE_VIDEO, handleArchivedMuzicodeTrigger, handleChallengePassed, handleChoiceMuzicode, handleCreateNextSession, handleCueAudio, handleCueVideo, handleDisklavierStart, handleEmphasis, handleHighlight, handleHighlight2, handleIdentifyMuzicode, handleMuzicodeTriggered, handleQueueNextSession, handleTransitionToNextSession, MARKUP_EMPHASIS, MARKUP_HIGHLIGHT, MARKUP_HIGHLIGHT2 } from '../actions/meldActions';\nconst defaultVrvOptions = {\n  ignoreLayout: 1,\n  adjustPageHeight: 1,\n  spacingStaff: 0,\n  spacingSystem: 4,\n  spacingLinear: 0.2,\n  spacingNonLinear: 0.55,\n  noFooter: 1,\n  noHeader: 1,\n  scale: 30,\n  pageHeight: 3000,\n  pageWidth: 1800\n};\n\nclass Score extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: {},\n      annotations: {}\n    };\n  }\n\n  render() {\n    let svg = ''; // ensure verovio has generated an SVG for the current MEI and current page: \n\n    if (\"score\" in this.props && this.props.uri in this.props.score.SVG && typeof this.props.score.SVG[this.props.uri] !== \"undefined\" && this.props.uri in this.props.score.pageState && typeof this.props.score.pageState[this.props.uri] !== \"undefined\" && \"currentPage\" in this.props.score.pageState[this.props.uri] && this.props.score.pageState[this.props.uri].currentPage in this.props.score.SVG[this.props.uri]) {\n      let currentPage = this.props.score.pageState[this.props.uri].currentPage;\n      svg = this.props.score.SVG[this.props.uri][currentPage].data;\n\n      if (this.props.scoreAnnotations && this.props.drawAnnotation && svg) {\n        // We can't edit the output of Verovio while it's a string,\n        // so, if there's anything to be done to it, it should happen\n        // to a parsed version.\n        // Ideally, this would be the version rendered, but in practice, I'm\n        // regenerating the serialisation and then drawing that. Which is pretty silly.\n        var parser = new DOMParser();\n        var svgObject = parser.parseFromString(svg, \"image/svg+xml\");\n        var svgChild = svgObject.getElementsByClassName('definition-scale')[0];\n        var oSerializer = new XMLSerializer();\n        this.props.drawAnnotation(this.props.scoreAnnotations, svgChild);\n        svg = oSerializer.serializeToString(svgObject);\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.uri,\n        className: \"scorepane\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"controls\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"annotations\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"score\",\n        dangerouslySetInnerHTML: {\n          __html: svg\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", null, \"Loading...\");\n  }\n\n  componentDidMount() {\n    this.props.fetchScore(this.props.uri, this.props.options);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let annotations = this.props.annotations;\n\n    if (!Array.isArray(annotations)) {\n      annotations = [annotations];\n    } // console.log(\"annotations:\", annotations)\n\n\n    if (annotations.length && typeof annotations[0] !== \"undefined\" && \"@type\" in annotations[0] && annotations[0][\"@type\"].includes(\"meldterm:topLevel\")) {\n      // console.log(\"Found old Larry-meld style topLevel annotation, converting...\")\n      annotations = annotations[0][\"oa:hasBody\"];\n    }\n\n    annotations.map(annotation => {\n      // console.log(\"annotation is: \", annotation)\n      if (typeof annotation === 'undefined') {\n        return;\n      } // each annotation...\n\n\n      annotation = ensureArray(annotation, \"oa:hasTarget\");\n      const frags = annotation[\"oa:hasTarget\"].map(annotationTarget => {\n        // each annotation target\n        if (annotationTarget[\"@id\"] in this.props.score.componentTargets) {\n          // if this is my target, grab frag ids according to media type\n          const mediaTypes = Object.keys(this.props.score.componentTargets[annotationTarget[\"@id\"]]);\n          let myFrags = {};\n          mediaTypes.map(type => {\n            if (type === \"MEI\") {\n              // only grab MY frag IDs, for THIS mei file\n              myFrags[type] = this.props.score.componentTargets[annotationTarget[\"@id\"]][type].filter(frag => {\n                return frag.substr(0, frag.indexOf(\"#\")) === this.props.uri;\n              });\n            } else {\n              //TODO think about what to do here to filter (e.g. multiple audios)\n              myFrags[type] = this.props.score.componentTargets[annotationTarget[\"@id\"]][type];\n            }\n          }); // and apply any annotations\n\n          this.handleMELDActions(annotation, myFrags);\n        } else if (annotationTarget[\"@id\"] == this.props.session) {\n          // this annotation applies to the *session*, e.g. a page turn\n          this.handleMELDActions(annotation, null);\n        }\n      });\n    });\n\n    if (Object.keys(prevProps.score.pageState).length && this.props.uri in prevProps.score.pageState && (prevProps.score.pageState[this.props.uri].currentPage !== this.props.score.pageState[this.props.uri].currentPage || // on page flip...\n    prevProps.score.pageState[this.props.uri].pageCount < this.props.score.pageState[this.props.uri].pageCount) // ...or first load\n    ) {\n      // signal that Verovio has rendered a new page\n      this.props.updateLatestRenderedPageNum(this.props.score.pageState[this.props.uri].currentPage);\n    }\n  }\n\n  handleMELDActions(annotation, fragments) {\n    // console.log(\"HANDLING MELD ACTION: \", annotation, fragments);\n    if (\"oa:motivatedBy\" in annotation) {\n      switch (annotation[\"oa:motivatedBy\"][\"@id\"]) {\n        case \"oa:highlighting\":\n          this.props.handleHighlight(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n          break;\n\n        case \"motivation:muzicodeIdentify\":\n          this.props.handleIdentifyMuzicode(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n          break;\n\n        case \"motivation:muzicodeChoice\":\n          this.props.handleChoiceMuzicode(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n          break;\n\n        case \"motivation:muzicodeChallengePassed\":\n          this.props.handleChallengePassed(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n          break;\n\n        case \"motivation:muzicodeDisklavierStart\":\n          this.props.handleDisklavierStart(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n          break;\n\n        case \"motivation:muzicodeTriggered\":\n          // for muzicodes, the component target contains information on muzicode type and climb cue\n          const muzicodeTarget = this.props.score.componentTargets[annotation[\"oa:hasTarget\"][0][\"@id\"]]; //FIXME handle n>1 targets\n\n          this.props.handleMuzicodeTriggered(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"], muzicodeTarget, this.props.session, this.props.nextSession, this.props.etag);\n          break;\n\n        case \"motivation:archivedMuzicodeTrigger\":\n          const archivedMuzicodeTarget = this.props.score.componentTargets[annotation[\"oa:hasTarget\"][0][\"@id\"]]; //FIXME handle n>1 targets\n\n          this.props.handleArchivedMuzicodeTrigger(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"], archivedMuzicodeTarget, this.props.session, this.props.nextSession);\n          break;\n\n        case \"motivation:nextPageOrPiece\":\n          // console.log(\"----\", this.props);\n          this.props.scoreNextPage(this.props.session, this.props.nextSession, this.props.etag, annotation, this.props.uri, this.props.score.pageState[this.props.uri].currentPage, this.props.score.MEI[this.props.uri]);\n          break;\n\n        case \"motivation:prevPageOrPiece\":\n          // console.log(\"----\", this.props);\n          this.props.scorePrevPage(this.props.session, this.props.nextSession, this.props.etag, annotation, this.props.uri, this.props.score.pageState[this.props.uri].currentPage, this.props.score.MEI[this.props.uri]);\n          break;\n\n        case \"motivation:queueNextSession\":\n          this.props.handleQueueNextSession(this.props.session, this.props.etag, annotation);\n          break;\n\n        case \"motivation:createNextSession\":\n          this.props.handleCreateNextSession(this.props.session, this.props.etag, annotation);\n          break;\n\n        case \"motivation:transitionToNextSession\":\n          this.props.handleTransitionToNextSession(this.props.session, this.props.etag, annotation);\n          break;\n\n        default:\n          console.log(\"Unknown motivation: \", annotation[\"oa:motivatedBy\"]);\n      }\n    } else if (HAS_BODY in annotation) {\n      annotation[HAS_BODY].map(b => {\n        // TODO convert to switch statement\n        if (b[\"@id\"] === MARKUP_EMPHASIS) {\n          this.props.handleEmphasis(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n        } else if (b[\"@id\"] === MARKUP_HIGHLIGHT) {\n          this.props.handleHighlight(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n        } else if (b[\"@id\"] === MARKUP_HIGHLIGHT2) {\n          this.props.handleHighlight2(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n        } else if (b[\"@id\"] === CUE_AUDIO) {\n          this.props.handleCueAudio(ReactDOM.findDOMNode(this), annotation, b, this.props.uri, fragments);\n        } else if (b[\"@id\"] === CUE_VIDEO) {\n          this.props.handleCueVideo(ReactDOM.findDOMNode(this), annotation, b, this.props.uri, fragments);\n        } else {\n          console.log(\"Score component unable to handle meld action: \", b);\n        }\n      }); // FIXME: the above should be phased out as we move into\n      // using motivations instead of bodies for rendering instructions\n    } else {\n      console.log(\"Skipping annotation without rendering instructions: \", annotation);\n    }\n  }\n\n}\n\nfunction mapStateToProps({\n  score\n}) {\n  return {\n    score\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchScore,\n    updateLatestRenderedPageNum,\n    handleEmphasis,\n    handleHighlight,\n    handleHighlight2,\n    handleCueAudio,\n    handleCueVideo,\n    scorePrevPage,\n    scoreNextPage,\n    handleQueueNextSession,\n    handleCreateNextSession,\n    handleTransitionToNextSession,\n    handleIdentifyMuzicode,\n    handleChoiceMuzicode,\n    handleChallengePassed,\n    handleDisklavierStart,\n    handleMuzicodeTriggered,\n    handleArchivedMuzicodeTrigger\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {\n  forwardRef: true\n})(Score);","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/meld-clients-core/lib/containers/score.js"],"names":["React","ReactDOM","connect","bindActionCreators","ensureArray","fetchScore","HAS_BODY","scoreNextPage","scorePrevPage","updateLatestRenderedPageNum","CUE_AUDIO","CUE_VIDEO","handleArchivedMuzicodeTrigger","handleChallengePassed","handleChoiceMuzicode","handleCreateNextSession","handleCueAudio","handleCueVideo","handleDisklavierStart","handleEmphasis","handleHighlight","handleHighlight2","handleIdentifyMuzicode","handleMuzicodeTriggered","handleQueueNextSession","handleTransitionToNextSession","MARKUP_EMPHASIS","MARKUP_HIGHLIGHT","MARKUP_HIGHLIGHT2","defaultVrvOptions","ignoreLayout","adjustPageHeight","spacingStaff","spacingSystem","spacingLinear","spacingNonLinear","noFooter","noHeader","scale","pageHeight","pageWidth","Score","Component","constructor","props","state","score","annotations","render","svg","uri","SVG","pageState","currentPage","data","scoreAnnotations","drawAnnotation","parser","DOMParser","svgObject","parseFromString","svgChild","getElementsByClassName","oSerializer","XMLSerializer","serializeToString","createElement","id","className","dangerouslySetInnerHTML","__html","componentDidMount","options","componentDidUpdate","prevProps","prevState","Array","isArray","length","includes","map","annotation","frags","annotationTarget","componentTargets","mediaTypes","Object","keys","myFrags","type","filter","frag","substr","indexOf","handleMELDActions","session","pageCount","fragments","findDOMNode","muzicodeTarget","nextSession","etag","archivedMuzicodeTarget","MEI","console","log","b","mapStateToProps","mapDispatchToProps","dispatch","forwardRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ensureArray, fetchScore, HAS_BODY, scoreNextPage, scorePrevPage, updateLatestRenderedPageNum } from '../actions/index';\nimport { CUE_AUDIO, CUE_VIDEO, handleArchivedMuzicodeTrigger, handleChallengePassed, handleChoiceMuzicode, handleCreateNextSession, handleCueAudio, handleCueVideo, handleDisklavierStart, handleEmphasis, handleHighlight, handleHighlight2, handleIdentifyMuzicode, handleMuzicodeTriggered, handleQueueNextSession, handleTransitionToNextSession, MARKUP_EMPHASIS, MARKUP_HIGHLIGHT, MARKUP_HIGHLIGHT2 } from '../actions/meldActions';\nconst defaultVrvOptions = {\n  ignoreLayout: 1,\n  adjustPageHeight: 1,\n  spacingStaff: 0,\n  spacingSystem: 4,\n  spacingLinear: 0.2,\n  spacingNonLinear: 0.55,\n  noFooter: 1,\n  noHeader: 1,\n  scale: 30,\n  pageHeight: 3000,\n  pageWidth: 1800\n};\n\nclass Score extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: {},\n      annotations: {}\n    };\n  }\n\n  render() {\n    let svg = ''; // ensure verovio has generated an SVG for the current MEI and current page: \n\n    if (\"score\" in this.props && this.props.uri in this.props.score.SVG && typeof this.props.score.SVG[this.props.uri] !== \"undefined\" && this.props.uri in this.props.score.pageState && typeof this.props.score.pageState[this.props.uri] !== \"undefined\" && \"currentPage\" in this.props.score.pageState[this.props.uri] && this.props.score.pageState[this.props.uri].currentPage in this.props.score.SVG[this.props.uri]) {\n      let currentPage = this.props.score.pageState[this.props.uri].currentPage;\n      svg = this.props.score.SVG[this.props.uri][currentPage].data;\n\n      if (this.props.scoreAnnotations && this.props.drawAnnotation && svg) {\n        // We can't edit the output of Verovio while it's a string,\n        // so, if there's anything to be done to it, it should happen\n        // to a parsed version.\n        // Ideally, this would be the version rendered, but in practice, I'm\n        // regenerating the serialisation and then drawing that. Which is pretty silly.\n        var parser = new DOMParser();\n        var svgObject = parser.parseFromString(svg, \"image/svg+xml\");\n        var svgChild = svgObject.getElementsByClassName('definition-scale')[0];\n        var oSerializer = new XMLSerializer();\n        this.props.drawAnnotation(this.props.scoreAnnotations, svgChild);\n        svg = oSerializer.serializeToString(svgObject);\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.uri,\n        className: \"scorepane\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"controls\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"annotations\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"score\",\n        dangerouslySetInnerHTML: {\n          __html: svg\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", null, \"Loading...\");\n  }\n\n  componentDidMount() {\n    this.props.fetchScore(this.props.uri, this.props.options);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let annotations = this.props.annotations;\n\n    if (!Array.isArray(annotations)) {\n      annotations = [annotations];\n    } // console.log(\"annotations:\", annotations)\n\n\n    if (annotations.length && typeof annotations[0] !== \"undefined\" && \"@type\" in annotations[0] && annotations[0][\"@type\"].includes(\"meldterm:topLevel\")) {\n      // console.log(\"Found old Larry-meld style topLevel annotation, converting...\")\n      annotations = annotations[0][\"oa:hasBody\"];\n    }\n\n    annotations.map(annotation => {\n      // console.log(\"annotation is: \", annotation)\n      if (typeof annotation === 'undefined') {\n        return;\n      } // each annotation...\n\n\n      annotation = ensureArray(annotation, \"oa:hasTarget\");\n      const frags = annotation[\"oa:hasTarget\"].map(annotationTarget => {\n        // each annotation target\n        if (annotationTarget[\"@id\"] in this.props.score.componentTargets) {\n          // if this is my target, grab frag ids according to media type\n          const mediaTypes = Object.keys(this.props.score.componentTargets[annotationTarget[\"@id\"]]);\n          let myFrags = {};\n          mediaTypes.map(type => {\n            if (type === \"MEI\") {\n              // only grab MY frag IDs, for THIS mei file\n              myFrags[type] = this.props.score.componentTargets[annotationTarget[\"@id\"]][type].filter(frag => {\n                return frag.substr(0, frag.indexOf(\"#\")) === this.props.uri;\n              });\n            } else {\n              //TODO think about what to do here to filter (e.g. multiple audios)\n              myFrags[type] = this.props.score.componentTargets[annotationTarget[\"@id\"]][type];\n            }\n          }); // and apply any annotations\n\n          this.handleMELDActions(annotation, myFrags);\n        } else if (annotationTarget[\"@id\"] == this.props.session) {\n          // this annotation applies to the *session*, e.g. a page turn\n          this.handleMELDActions(annotation, null);\n        }\n      });\n    });\n\n    if (Object.keys(prevProps.score.pageState).length && this.props.uri in prevProps.score.pageState && (prevProps.score.pageState[this.props.uri].currentPage !== this.props.score.pageState[this.props.uri].currentPage || // on page flip...\n    prevProps.score.pageState[this.props.uri].pageCount < this.props.score.pageState[this.props.uri].pageCount) // ...or first load\n    ) {\n        // signal that Verovio has rendered a new page\n        this.props.updateLatestRenderedPageNum(this.props.score.pageState[this.props.uri].currentPage);\n      }\n  }\n\n  handleMELDActions(annotation, fragments) {\n    // console.log(\"HANDLING MELD ACTION: \", annotation, fragments);\n    if (\"oa:motivatedBy\" in annotation) {\n      switch (annotation[\"oa:motivatedBy\"][\"@id\"]) {\n        case \"oa:highlighting\":\n          this.props.handleHighlight(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n          break;\n\n        case \"motivation:muzicodeIdentify\":\n          this.props.handleIdentifyMuzicode(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n          break;\n\n        case \"motivation:muzicodeChoice\":\n          this.props.handleChoiceMuzicode(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n          break;\n\n        case \"motivation:muzicodeChallengePassed\":\n          this.props.handleChallengePassed(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n          break;\n\n        case \"motivation:muzicodeDisklavierStart\":\n          this.props.handleDisklavierStart(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n          break;\n\n        case \"motivation:muzicodeTriggered\":\n          // for muzicodes, the component target contains information on muzicode type and climb cue\n          const muzicodeTarget = this.props.score.componentTargets[annotation[\"oa:hasTarget\"][0][\"@id\"]]; //FIXME handle n>1 targets\n\n          this.props.handleMuzicodeTriggered(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"], muzicodeTarget, this.props.session, this.props.nextSession, this.props.etag);\n          break;\n\n        case \"motivation:archivedMuzicodeTrigger\":\n          const archivedMuzicodeTarget = this.props.score.componentTargets[annotation[\"oa:hasTarget\"][0][\"@id\"]]; //FIXME handle n>1 targets\n\n          this.props.handleArchivedMuzicodeTrigger(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"], archivedMuzicodeTarget, this.props.session, this.props.nextSession);\n          break;\n\n        case \"motivation:nextPageOrPiece\":\n          // console.log(\"----\", this.props);\n          this.props.scoreNextPage(this.props.session, this.props.nextSession, this.props.etag, annotation, this.props.uri, this.props.score.pageState[this.props.uri].currentPage, this.props.score.MEI[this.props.uri]);\n          break;\n\n        case \"motivation:prevPageOrPiece\":\n          // console.log(\"----\", this.props);\n          this.props.scorePrevPage(this.props.session, this.props.nextSession, this.props.etag, annotation, this.props.uri, this.props.score.pageState[this.props.uri].currentPage, this.props.score.MEI[this.props.uri]);\n          break;\n\n        case \"motivation:queueNextSession\":\n          this.props.handleQueueNextSession(this.props.session, this.props.etag, annotation);\n          break;\n\n        case \"motivation:createNextSession\":\n          this.props.handleCreateNextSession(this.props.session, this.props.etag, annotation);\n          break;\n\n        case \"motivation:transitionToNextSession\":\n          this.props.handleTransitionToNextSession(this.props.session, this.props.etag, annotation);\n          break;\n\n        default:\n          console.log(\"Unknown motivation: \", annotation[\"oa:motivatedBy\"]);\n      }\n    } else if (HAS_BODY in annotation) {\n      annotation[HAS_BODY].map(b => {\n        // TODO convert to switch statement\n        if (b[\"@id\"] === MARKUP_EMPHASIS) {\n          this.props.handleEmphasis(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n        } else if (b[\"@id\"] === MARKUP_HIGHLIGHT) {\n          this.props.handleHighlight(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n        } else if (b[\"@id\"] === MARKUP_HIGHLIGHT2) {\n          this.props.handleHighlight2(ReactDOM.findDOMNode(this), annotation, this.props.uri, fragments[\"MEI\"]);\n        } else if (b[\"@id\"] === CUE_AUDIO) {\n          this.props.handleCueAudio(ReactDOM.findDOMNode(this), annotation, b, this.props.uri, fragments);\n        } else if (b[\"@id\"] === CUE_VIDEO) {\n          this.props.handleCueVideo(ReactDOM.findDOMNode(this), annotation, b, this.props.uri, fragments);\n        } else {\n          console.log(\"Score component unable to handle meld action: \", b);\n        }\n      }); // FIXME: the above should be phased out as we move into\n      // using motivations instead of bodies for rendering instructions\n    } else {\n      console.log(\"Skipping annotation without rendering instructions: \", annotation);\n    }\n  }\n\n}\n\nfunction mapStateToProps({\n  score\n}) {\n  return {\n    score\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchScore,\n    updateLatestRenderedPageNum,\n    handleEmphasis,\n    handleHighlight,\n    handleHighlight2,\n    handleCueAudio,\n    handleCueVideo,\n    scorePrevPage,\n    scoreNextPage,\n    handleQueueNextSession,\n    handleCreateNextSession,\n    handleTransitionToNextSession,\n    handleIdentifyMuzicode,\n    handleChoiceMuzicode,\n    handleChallengePassed,\n    handleDisklavierStart,\n    handleMuzicodeTriggered,\n    handleArchivedMuzicodeTrigger\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {\n  forwardRef: true\n})(Score);"]},"metadata":{},"sourceType":"module"}