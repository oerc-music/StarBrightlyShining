{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Named = void 0;\n\nconst Expressions_1 = require(\"./Expressions\");\n\nclass Named {\n  constructor(name, args, apply) {\n    this.name = name;\n    this.args = args;\n    this.apply = apply;\n    this.expressionType = Expressions_1.ExpressionType.Named;\n  }\n\n}\n\nexports.Named = Named;","map":{"version":3,"sources":["../../../lib/expressions/Named.ts"],"names":[],"mappings":";;;;;;;AAEA,MAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAOA,MAAa,KAAb,CAAkB;AAGhB,EAAA,WAAA,CACS,IADT,EAES,IAFT,EAGS,KAHT,EAGiC;AAFxB,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,KAAA,GAAA,KAAA;AALT,SAAA,cAAA,GAAuC,aAAA,CAAA,cAAA,CAAe,KAAtD;AAKsC;;AANtB;;AAAlB,OAAA,CAAA,KAAA,GAAA,KAAA","sourcesContent":["import * as RDF from 'rdf-js';\n\nimport {\n  Expression,\n  ExpressionType,\n  NamedExpression,\n  SimpleApplication,\n} from './Expressions';\n\nexport class Named implements NamedExpression {\n  expressionType: ExpressionType.Named = ExpressionType.Named;\n\n  constructor(\n    public name: RDF.NamedNode,\n    public args: Expression[],\n    public apply: SimpleApplication) { }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}