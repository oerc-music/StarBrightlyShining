{"ast":null,"code":"import update from 'immutability-helper';\nimport { CREATE_SESSION, MUZICODES_UPDATED } from '../actions/index';\nexport default function (state = {\n  newSessionUri: \"\",\n  newSessionScore: \"\",\n  muzicodesUpdated: false\n}, action) {\n  switch (action.type) {\n    case MUZICODES_UPDATED:\n      // console.log(\"Muzicodes has been updated.\");\n      return update(state, {\n        $merge: {\n          \"muzicodesUpdated\": true\n        }\n      });\n\n    case CREATE_SESSION:\n      // console.log(\"Created session: \", action.payload);\n      return update(state, {\n        $merge: {\n          \"newSessionUri\": action.payload.headers.location,\n          \"newSessionScore\": action.payload.data[\"@graph\"][0][\"mo:performance_of\"][\"@id\"]\n        }\n      });\n\n    default:\n      // console.log(\"Unknown action: \", action);\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/meld-clients-core/lib/reducers/reducer_sessionControl.js"],"names":["update","CREATE_SESSION","MUZICODES_UPDATED","state","newSessionUri","newSessionScore","muzicodesUpdated","action","type","$merge","payload","headers","location","data"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,kBAAlD;AACA,eAAe,UAAUC,KAAK,GAAG;AAC/BC,EAAAA,aAAa,EAAE,EADgB;AAE/BC,EAAAA,eAAe,EAAE,EAFc;AAG/BC,EAAAA,gBAAgB,EAAE;AAHa,CAAlB,EAIZC,MAJY,EAIJ;AACT,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,iBAAL;AACE;AACA,aAAOF,MAAM,CAACG,KAAD,EAAQ;AACnBM,QAAAA,MAAM,EAAE;AACN,8BAAoB;AADd;AADW,OAAR,CAAb;;AAMF,SAAKR,cAAL;AACE;AACA,aAAOD,MAAM,CAACG,KAAD,EAAQ;AACnBM,QAAAA,MAAM,EAAE;AACN,2BAAiBF,MAAM,CAACG,OAAP,CAAeC,OAAf,CAAuBC,QADlC;AAEN,6BAAmBL,MAAM,CAACG,OAAP,CAAeG,IAAf,CAAoB,QAApB,EAA8B,CAA9B,EAAiC,mBAAjC,EAAsD,KAAtD;AAFb;AADW,OAAR,CAAb;;AAOF;AACE;AACA,aAAOV,KAAP;AApBJ;AAsBD;AACD","sourcesContent":["import update from 'immutability-helper';\nimport { CREATE_SESSION, MUZICODES_UPDATED } from '../actions/index';\nexport default function (state = {\n  newSessionUri: \"\",\n  newSessionScore: \"\",\n  muzicodesUpdated: false\n}, action) {\n  switch (action.type) {\n    case MUZICODES_UPDATED:\n      // console.log(\"Muzicodes has been updated.\");\n      return update(state, {\n        $merge: {\n          \"muzicodesUpdated\": true\n        }\n      });\n\n    case CREATE_SESSION:\n      // console.log(\"Created session: \", action.payload);\n      return update(state, {\n        $merge: {\n          \"newSessionUri\": action.payload.headers.location,\n          \"newSessionScore\": action.payload.data[\"@graph\"][0][\"mo:performance_of\"][\"@id\"]\n        }\n      });\n\n    default:\n      // console.log(\"Unknown action: \", action);\n      return state;\n  }\n}\n;"]},"metadata":{},"sourceType":"module"}