{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActorQueryOperationCreate = void 0;\n\nconst bus_query_operation_1 = require(\"@comunica/bus-query-operation\");\n/**\n * A [Query Operation](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation) actor that\n * handles SPARQL create operations.\n */\n\n\nclass ActorQueryOperationCreate extends bus_query_operation_1.ActorQueryOperationTypedMediated {\n  constructor(args) {\n    super(args, 'create');\n  }\n\n  async testOperation(pattern, context) {\n    bus_query_operation_1.ActorQueryOperation.throwOnReadOnly(context);\n    return true;\n  }\n\n  async runOperation(pattern, context) {\n    // Delegate to update-quads bus\n    const {\n      updateResult\n    } = await this.mediatorUpdateQuads.mediate({\n      createGraphs: {\n        graphs: [pattern.source],\n        requireNonExistence: !pattern.silent\n      },\n      context\n    });\n    return {\n      type: 'update',\n      updateResult\n    };\n  }\n\n}\n\nexports.ActorQueryOperationCreate = ActorQueryOperationCreate;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@comunica/actor-query-operation-update-create/lib/ActorQueryOperationCreate.js"],"names":["Object","defineProperty","exports","value","ActorQueryOperationCreate","bus_query_operation_1","require","ActorQueryOperationTypedMediated","constructor","args","testOperation","pattern","context","ActorQueryOperation","throwOnReadOnly","runOperation","updateResult","mediatorUpdateQuads","mediate","createGraphs","graphs","source","requireNonExistence","silent","type"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,yBAAR,GAAoC,KAAK,CAAzC;;AACA,MAAMC,qBAAqB,GAAGC,OAAO,CAAC,+BAAD,CAArC;AACA;AACA;AACA;AACA;;;AACA,MAAMF,yBAAN,SAAwCC,qBAAqB,CAACE,gCAA9D,CAA+F;AAC3FC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN,EAAY,QAAZ;AACH;;AACkB,QAAbC,aAAa,CAACC,OAAD,EAAUC,OAAV,EAAmB;AAClCP,IAAAA,qBAAqB,CAACQ,mBAAtB,CAA0CC,eAA1C,CAA0DF,OAA1D;AACA,WAAO,IAAP;AACH;;AACiB,QAAZG,YAAY,CAACJ,OAAD,EAAUC,OAAV,EAAmB;AACjC;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAmB,MAAM,KAAKC,mBAAL,CAAyBC,OAAzB,CAAiC;AAC5DC,MAAAA,YAAY,EAAE;AACVC,QAAAA,MAAM,EAAE,CAACT,OAAO,CAACU,MAAT,CADE;AAEVC,QAAAA,mBAAmB,EAAE,CAACX,OAAO,CAACY;AAFpB,OAD8C;AAK5DX,MAAAA;AAL4D,KAAjC,CAA/B;AAOA,WAAO;AACHY,MAAAA,IAAI,EAAE,QADH;AAEHR,MAAAA;AAFG,KAAP;AAIH;;AArB0F;;AAuB/Fd,OAAO,CAACE,yBAAR,GAAoCA,yBAApC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActorQueryOperationCreate = void 0;\nconst bus_query_operation_1 = require(\"@comunica/bus-query-operation\");\n/**\n * A [Query Operation](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation) actor that\n * handles SPARQL create operations.\n */\nclass ActorQueryOperationCreate extends bus_query_operation_1.ActorQueryOperationTypedMediated {\n    constructor(args) {\n        super(args, 'create');\n    }\n    async testOperation(pattern, context) {\n        bus_query_operation_1.ActorQueryOperation.throwOnReadOnly(context);\n        return true;\n    }\n    async runOperation(pattern, context) {\n        // Delegate to update-quads bus\n        const { updateResult } = await this.mediatorUpdateQuads.mediate({\n            createGraphs: {\n                graphs: [pattern.source],\n                requireNonExistence: !pattern.silent,\n            },\n            context,\n        });\n        return {\n            type: 'update',\n            updateResult,\n        };\n    }\n}\nexports.ActorQueryOperationCreate = ActorQueryOperationCreate;\n//# sourceMappingURL=ActorQueryOperationCreate.js.map"]},"metadata":{},"sourceType":"script"}