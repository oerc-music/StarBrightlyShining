{"ast":null,"code":"/**\n * Returns a new path starting from the predicate of the current path.\n *\n * Requires:\n * - (optional) a predicate property on the path data\n */\nexport default class PredicateHandler {\n  handle(pathData) {\n    const {\n      predicate\n    } = pathData;\n    return !predicate ? undefined : Promise.resolve(predicate).then(subject => pathData.extendPath({\n      subject\n    }, null));\n  }\n\n}","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/ldflex/module/PredicateHandler.js"],"names":["PredicateHandler","handle","pathData","predicate","undefined","Promise","resolve","then","subject","extendPath"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMA,gBAAN,CAAuB;AACpCC,EAAAA,MAAM,CAACC,QAAD,EAAW;AACf,UAAM;AACJC,MAAAA;AADI,QAEFD,QAFJ;AAGA,WAAO,CAACC,SAAD,GAAaC,SAAb,GAAyBC,OAAO,CAACC,OAAR,CAAgBH,SAAhB,EAA2BI,IAA3B,CAAgCC,OAAO,IAAIN,QAAQ,CAACO,UAAT,CAAoB;AAC7FD,MAAAA;AAD6F,KAApB,EAExE,IAFwE,CAA3C,CAAhC;AAGD;;AARmC","sourcesContent":["/**\n * Returns a new path starting from the predicate of the current path.\n *\n * Requires:\n * - (optional) a predicate property on the path data\n */\nexport default class PredicateHandler {\n  handle(pathData) {\n    const {\n      predicate\n    } = pathData;\n    return !predicate ? undefined : Promise.resolve(predicate).then(subject => pathData.extendPath({\n      subject\n    }, null));\n  }\n\n}"]},"metadata":{},"sourceType":"module"}