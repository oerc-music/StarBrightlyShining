{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BusIndexed = void 0;\n\nconst Bus_1 = require(\"./Bus\");\n/**\n * A bus that indexes identified actors,\n * so that actions with a corresponding identifier can be published more efficiently.\n *\n * Multiple actors with the same identifier can be subscribed.\n *\n * If actors or actions do not have a valid identifier,\n * then this will fallback to the normal bus behaviour.\n *\n * @see Bus\n *\n * @template A The actor type that can subscribe to the sub.\n * @template I The input type of an actor.\n * @template T The test type of an actor.\n * @template O The output type of an actor.\n */\n\n\nclass BusIndexed extends Bus_1.Bus {\n  /**\n   * All enumerable properties from the `args` object are inherited to this bus.\n   *\n   * @param {IBusIndexedArgs} args Arguments object\n   * @param {string} args.name The name for the bus\n   * @throws When required arguments are missing.\n   */\n  constructor(args) {\n    super(args);\n    this.actorsIndex = {};\n  }\n\n  subscribe(actor) {\n    const actorId = this.getActorIdentifier(actor) || '_undefined_';\n    let actors = this.actorsIndex[actorId];\n\n    if (!actors) {\n      actors = this.actorsIndex[actorId] = [];\n    }\n\n    actors.push(actor);\n    super.subscribe(actor);\n  }\n\n  unsubscribe(actor) {\n    const actorId = this.getActorIdentifier(actor) || '_undefined_';\n    const actors = this.actorsIndex[actorId];\n\n    if (actors) {\n      const i = actors.indexOf(actor);\n\n      if (i >= 0) {\n        actors.splice(i, 1);\n      }\n\n      if (actors.length === 0) {\n        delete this.actorsIndex[actorId];\n      }\n    }\n\n    return super.unsubscribe(actor);\n  }\n\n  publish(action) {\n    const actionId = this.getActionIdentifier(action);\n\n    if (actionId) {\n      const actors = [...(this.actorsIndex[actionId] || []), ...(this.actorsIndex._undefined_ || [])];\n      return actors.map(actor => ({\n        actor,\n        reply: actor.test(action)\n      }));\n    }\n\n    return super.publish(action);\n  }\n\n  getActorIdentifier(actor) {\n    return this.actorIdentifierFields.reduce((object, field) => object[field], actor);\n  }\n\n  getActionIdentifier(action) {\n    return this.actionIdentifierFields.reduce((object, field) => object[field], action);\n  }\n\n}\n\nexports.BusIndexed = BusIndexed;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@comunica/core/lib/BusIndexed.js"],"names":["Object","defineProperty","exports","value","BusIndexed","Bus_1","require","Bus","constructor","args","actorsIndex","subscribe","actor","actorId","getActorIdentifier","actors","push","unsubscribe","i","indexOf","splice","length","publish","action","actionId","getActionIdentifier","_undefined_","map","reply","test","actorIdentifierFields","reduce","object","field","actionIdentifierFields"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMF,UAAN,SAAyBC,KAAK,CAACE,GAA/B,CAAmC;AAC/B;AACJ;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACH;;AACDC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,UAAMC,OAAO,GAAG,KAAKC,kBAAL,CAAwBF,KAAxB,KAAkC,aAAlD;AACA,QAAIG,MAAM,GAAG,KAAKL,WAAL,CAAiBG,OAAjB,CAAb;;AACA,QAAI,CAACE,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKL,WAAL,CAAiBG,OAAjB,IAA4B,EAArC;AACH;;AACDE,IAAAA,MAAM,CAACC,IAAP,CAAYJ,KAAZ;AACA,UAAMD,SAAN,CAAgBC,KAAhB;AACH;;AACDK,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACf,UAAMC,OAAO,GAAG,KAAKC,kBAAL,CAAwBF,KAAxB,KAAkC,aAAlD;AACA,UAAMG,MAAM,GAAG,KAAKL,WAAL,CAAiBG,OAAjB,CAAf;;AACA,QAAIE,MAAJ,EAAY;AACR,YAAMG,CAAC,GAAGH,MAAM,CAACI,OAAP,CAAeP,KAAf,CAAV;;AACA,UAAIM,CAAC,IAAI,CAAT,EAAY;AACRH,QAAAA,MAAM,CAACK,MAAP,CAAcF,CAAd,EAAiB,CAAjB;AACH;;AACD,UAAIH,MAAM,CAACM,MAAP,KAAkB,CAAtB,EAAyB;AACrB,eAAO,KAAKX,WAAL,CAAiBG,OAAjB,CAAP;AACH;AACJ;;AACD,WAAO,MAAMI,WAAN,CAAkBL,KAAlB,CAAP;AACH;;AACDU,EAAAA,OAAO,CAACC,MAAD,EAAS;AACZ,UAAMC,QAAQ,GAAG,KAAKC,mBAAL,CAAyBF,MAAzB,CAAjB;;AACA,QAAIC,QAAJ,EAAc;AACV,YAAMT,MAAM,GAAG,CAAC,IAAG,KAAKL,WAAL,CAAiBc,QAAjB,KAA8B,EAAjC,CAAD,EAAsC,IAAG,KAAKd,WAAL,CAAiBgB,WAAjB,IAAgC,EAAnC,CAAtC,CAAf;AACA,aAAOX,MAAM,CAACY,GAAP,CAAYf,KAAD,KAAY;AAAEA,QAAAA,KAAF;AAASgB,QAAAA,KAAK,EAAEhB,KAAK,CAACiB,IAAN,CAAWN,MAAX;AAAhB,OAAZ,CAAX,CAAP;AACH;;AACD,WAAO,MAAMD,OAAN,CAAcC,MAAd,CAAP;AACH;;AACDT,EAAAA,kBAAkB,CAACF,KAAD,EAAQ;AACtB,WAAO,KAAKkB,qBAAL,CAA2BC,MAA3B,CAAkC,CAACC,MAAD,EAASC,KAAT,KAAmBD,MAAM,CAACC,KAAD,CAA3D,EAAoErB,KAApE,CAAP;AACH;;AACDa,EAAAA,mBAAmB,CAACF,MAAD,EAAS;AACxB,WAAO,KAAKW,sBAAL,CAA4BH,MAA5B,CAAmC,CAACC,MAAD,EAASC,KAAT,KAAmBD,MAAM,CAACC,KAAD,CAA5D,EAAqEV,MAArE,CAAP;AACH;;AAhD8B;;AAkDnCrB,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BusIndexed = void 0;\nconst Bus_1 = require(\"./Bus\");\n/**\n * A bus that indexes identified actors,\n * so that actions with a corresponding identifier can be published more efficiently.\n *\n * Multiple actors with the same identifier can be subscribed.\n *\n * If actors or actions do not have a valid identifier,\n * then this will fallback to the normal bus behaviour.\n *\n * @see Bus\n *\n * @template A The actor type that can subscribe to the sub.\n * @template I The input type of an actor.\n * @template T The test type of an actor.\n * @template O The output type of an actor.\n */\nclass BusIndexed extends Bus_1.Bus {\n    /**\n     * All enumerable properties from the `args` object are inherited to this bus.\n     *\n     * @param {IBusIndexedArgs} args Arguments object\n     * @param {string} args.name The name for the bus\n     * @throws When required arguments are missing.\n     */\n    constructor(args) {\n        super(args);\n        this.actorsIndex = {};\n    }\n    subscribe(actor) {\n        const actorId = this.getActorIdentifier(actor) || '_undefined_';\n        let actors = this.actorsIndex[actorId];\n        if (!actors) {\n            actors = this.actorsIndex[actorId] = [];\n        }\n        actors.push(actor);\n        super.subscribe(actor);\n    }\n    unsubscribe(actor) {\n        const actorId = this.getActorIdentifier(actor) || '_undefined_';\n        const actors = this.actorsIndex[actorId];\n        if (actors) {\n            const i = actors.indexOf(actor);\n            if (i >= 0) {\n                actors.splice(i, 1);\n            }\n            if (actors.length === 0) {\n                delete this.actorsIndex[actorId];\n            }\n        }\n        return super.unsubscribe(actor);\n    }\n    publish(action) {\n        const actionId = this.getActionIdentifier(action);\n        if (actionId) {\n            const actors = [...this.actorsIndex[actionId] || [], ...this.actorsIndex._undefined_ || []];\n            return actors.map((actor) => ({ actor, reply: actor.test(action) }));\n        }\n        return super.publish(action);\n    }\n    getActorIdentifier(actor) {\n        return this.actorIdentifierFields.reduce((object, field) => object[field], actor);\n    }\n    getActionIdentifier(action) {\n        return this.actionIdentifierFields.reduce((object, field) => object[field], action);\n    }\n}\nexports.BusIndexed = BusIndexed;\n//# sourceMappingURL=BusIndexed.js.map"]},"metadata":{},"sourceType":"script"}