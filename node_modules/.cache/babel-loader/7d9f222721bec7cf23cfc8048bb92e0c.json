{"ast":null,"code":"/***\n\n ~~~ Version 2.2.2 ~~~\n\n ******************************************\n\n    ____                   _____      __          __ \n   / __ \\_________ _____ _/ ___/___  / /__  _____/ /_\n  / / / / ___/ __ `/ __ `/\\__ \\/ _ \\/ / _ \\/ ___/ __/\n / /_/ / /  / /_/ / /_/ /___/ /  __/ /  __/ /__/ /_  \n/_____/_/   \\__,_/\\__, //____/\\___/_/\\___/\\___/\\__/  \n               /____/                              \n\n ******************************************\n \n {*} {*} STAR THIS PLUGIN ON GITHUB {*} {*}\n\n https://github.com/ThibaultJanBeyer/DragSelect\n Please give it a like, this is what makes me happy :-)\n Thank You\n\n {*} {*} STAR THIS PLUGIN ON GITHUB {*} {*}\n\n ******************************************\n ********* The MIT License (MIT) **********\n ******************************************\n Created 2017 by ThibaultJanBeyer\n web: http://www.thibaultjanbeyer.com/\n github: https://github.com/ThibaultJanBeyer/DragSelect\n\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DragSelect = factory());\n})(this, function () {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _construct(Parent, args, Class) {\n    if (_isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n\n    return _construct.apply(null, arguments);\n  }\n\n  function _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n  }\n\n  function _wrapNativeSuper(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n    _wrapNativeSuper = function _wrapNativeSuper(Class) {\n      if (Class === null || !_isNativeFunction(Class)) return Class;\n\n      if (typeof Class !== \"function\") {\n        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n\n      if (typeof _cache !== \"undefined\") {\n        if (_cache.has(Class)) return _cache.get(Class);\n\n        _cache.set(Class, Wrapper);\n      }\n\n      function Wrapper() {\n        return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n      }\n\n      Wrapper.prototype = Object.create(Class.prototype, {\n        constructor: {\n          value: Wrapper,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      return _setPrototypeOf(Wrapper, Class);\n    };\n\n    return _wrapNativeSuper(Class);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n          result;\n\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor;\n\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n\n      return _possibleConstructorReturn(this, result);\n    };\n  }\n\n  function _superPropBase(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = _getPrototypeOf(object);\n      if (object === null) break;\n    }\n\n    return object;\n  }\n\n  function _get(target, property, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n      _get = Reflect.get;\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = _superPropBase(target, property);\n\n        if (!base) return;\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.get) {\n          return desc.get.call(receiver);\n        }\n\n        return desc.value;\n      };\n    }\n\n    return _get(target, property, receiver || target);\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  /**\n   * The Settings to be passed to the Class\n   * @typedef {Object} Settings\n   * @property {HTMLElement|SVGElement|HTMLDocument} [area=document] area in which you can drag. If not provided it will be the whole document\n   * @property {DSInputElements} [selectables=[]] the elements that can be selected\n   * @property {number} [autoScrollSpeed=5] Speed in which the area scrolls while selecting (if available). Unit is pixel per movement.\n   * @property {Vect2} [overflowTolerance={x:25,y:25}] Tolerance for autoScroll (how close one has to be near an edges for autoScroll to start)\n   * @property {number} [zoom=1] Zoom scale factor (in case of using CSS style transform: scale() which messes with real positions). Unit scale zoom.\n   * @property {boolean} [customStyles=false] if set to true, no styles (except for position absolute) will be applied by default\n   * @property {boolean} [multiSelectMode=false] Add newly selected elements to the selection instead of replacing them\n   * @property {boolean} [multiSelectToggling=true] Whether or not to toggle already active elements while multi-selecting\n   * @property {DSMultiSelectKeys} [multiSelectKeys=['Control', 'Shift', 'Meta']] Keys that allows switching to the multi-select mode (see the multiSelectMode option). Any key value is possible ([see MDN docs](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key)). Note that the best support is given for <kbd>Control</kbd>, <kbd>Shift</kbd> and <kbd>Meta</kbd>. Provide an empty array `[]` if you want to turn off the functionality.\n   * @property {HTMLElement} [selector=HTMLElement] the square that will draw the selection\n   * @property {boolean} [draggability=true] When a user is dragging on an already selected element, the selection is dragged.\n   * @property {boolean} [immediateDrag=true] Whether an element is draggable from the start or needs to be selected first\n   * @property {boolean} [keyboardDrag=true] Whether or not the user can drag with the keyboard (we don't recommend disabling it)\n   * @property {DSDragKeys} [dragKeys={up:['ArrowUp'],down:['ArrowDown'],left:['ArrowLeft'],righ:['ArrowRight']}] The keys available to drag element using the keyboard.\n   * @property {number} [keyboardDragSpeed=10] The speed at which elements are dragged using the keyboard. In pixels per keydown.\n   * @property {boolean} [useTransform=true] Whether to use hardware accelerated css transforms when dragging or top/left instead\n   * @property {string} [hoverClass=ds-hover] the class assigned to the mouse hovered items\n   * @property {string} [selectableClass=ds-selectable] the class assigned to the elements that can be selected\n   * @property {string} [selectedClass=ds-selected] the class assigned to the selected items\n   * @property {string} [selectorClass=ds-selector] the class assigned to the square selector helper\n   * @property {string} [selectorAreaClass=ds-selector-area] the class assigned to the square in which the selector resides. By default it's invisible\n   * @property {DSCallback} [callback] Deprecated: please use DragSelect.subscribe('callback', callback) instead\n   * @property {DSCallback} [onDragMove] Deprecated: please use DragSelect.subscribe('onDragMove', onDragMove) instead\n   * @property {DSCallback} [onDragStartBegin] Deprecated: please use DragSelect.subscribe('onDragStartBegin', onDragStartBegin) instead\n   * @property {DSCallback} [onDragStart] Deprecated: please use DragSelect.subscribe('onDragStart', onDragStart) instead\n   * @property {DSCallback} [onElementSelect] Deprecated: please use DragSelect.subscribe('onElementSelect', onElementSelect) instead\n   * @property {DSCallback} [onElementUnselect] Deprecated: please use DragSelect.subscribe('onElementUnselect', onElementUnselect) instead\n   */\n\n  /**\n   * The Object that is passed back to any callback method\n   * @typedef {Object} CallbackObject\n   * @property {Array<HTMLElement|SVGElement|any>} [items] The items currently selected\n   * @property {MouseEvent|TouchEvent|KeyboardEvent|Event} [event] The respective event object\n   * @property {HTMLElement|SVGElement|any} [item] The single item currently interacted with\n   * @property {boolean} [isDragging] Whether the interaction is a drag or a select\n   * @property {boolean} [isDraggingKeyboard] Whether or not the drag interaction is via keyboard\n   * @property {string} [key] Pressed key (lowercase)\n   * @property {Array.<'top'|'bottom'|'left'|'right'|undefined>} [scroll_directions]\n   * @property {number} [scroll_multiplier]\n   */\n\n  /**\n   * @typedef {function} DSCallback\n   * @param {CallbackObject} data\n   */\n\n  /** @typedef {{x: number, y: number}} Vect2 */\n\n  /** @typedef {{x:number,y:number,w:number,h:number,r:number,b:number}} DSElementPos */\n\n  /** @typedef {Array.<'top'|'bottom'|'left'|'right'|undefined>} DSEdges */\n\n  /** @typedef {HTMLElement|SVGElement|HTMLDocument} DSArea area within which you can drag */\n\n  /** @typedef {HTMLElement} DSSelectorArea area in which you can drag */\n\n  /** @typedef {Array.<HTMLElement|SVGElement> | HTMLElement | SVGElement} DSInputElements the elements that can be selected */\n\n  /** @typedef {Array.<HTMLElement|SVGElement>} DSElements the elements that can be selected */\n\n  /** @typedef {HTMLElement|SVGElement} DSElement a single element that can be selected */\n\n  /** @typedef {MouseEvent|TouchEvent} DSEvent en event from a touch or mouse interaction */\n\n  /** @typedef {Array.<'Shift'|'Control'|'Meta'|string>} DSMultiSelectKeys An array of keys that allows switching to the multi-select mode */\n\n  /** @typedef {'dragmove'|'autoscroll'|'dragstart'|'elementselect'|'elementunselect'|'callback'} DSEventNames */\n\n  /** @typedef {'Interaction:init'|'Interaction:start'|'Interaction:end'|'Interaction:update'|'Area:modified'|'Area:scroll'|'PointerStore:updated'|'Selected:added'|'Selected:removed'|'Selectable:click'|'Selectable:pointer'|'KeyStore:down'|'KeyStore:up'} DSInternalEventNames */\n\n  /** @typedef {'Interaction:init:pre'|'Interaction:start:pre'|'Interaction:end:pre'|'Interaction:update:pre'|'Area:modified:pre'|'Area:scroll:pre'|'PointerStore:updated:pre'|'Selected:added:pre'|'Selected:removed:pre'|'Selectable:click:pre'|'Selectable:pointer:pre'|'KeyStore:down:pre'|'KeyStore:up:pre'|'Drag:keyboardDrag:pre'} DSInternalEventNamesPre */\n\n  /** @typedef {DSEventNames|DSInternalEventNames} DSCallbackNames the name of the callback */\n\n  /** @typedef {{top:number,left:number,bottom:number,right:number,width:number,height:number}} DSBoundingRect */\n\n  /** @typedef {{up:string[],down:string[],left:string[],right:string[]}} DSDragKeys */\n\n  /**\n   * @callback DSModificationCallback\n   * @param {*} event\n   */\n  // @ts-check\n\n  /**\n   * @param {Vect2} v1\n   * @param {'+'|'-'|'*'|'/'} operator\n   * @param {Vect2} v2\n   * @return {Vect2}\n   */\n\n\n  var calc = function calc(_ref, operator, _ref2) {\n    var x1 = _ref.x,\n        y1 = _ref.y;\n    var x2 = _ref2.x,\n        y2 = _ref2.y;\n    var calculations = {\n      '+': {\n        x: x1 + x2,\n        y: y1 + y2\n      },\n      '-': {\n        x: x1 - x2,\n        y: y1 - y2\n      },\n      '*': {\n        x: x1 * x2,\n        y: y1 * y2\n      },\n      '/': {\n        x: x1 / x2,\n        y: y1 / y2\n      }\n    };\n    return calculations[operator];\n  };\n  /**\n   * @param {{left:number,top:number}} rect\n   * @returns {Vect2}\n   */\n\n\n  var rect2vect = function rect2vect(rect) {\n    return {\n      x: rect.left,\n      y: rect.top\n    };\n  };\n  /**\n   * @param {Vect2} vect\n   * @param {number} dimension\n   * @returns {DSBoundingRect}\n   */\n\n\n  var vect2rect = function vect2rect(vect) {\n    var dimension = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return {\n      left: vect.x,\n      top: vect.y,\n      right: vect.x,\n      bottom: vect.y,\n      width: dimension,\n      height: dimension\n    };\n  };\n  /**\n   * @param {number} n\n   * @returns {Vect2}\n   */\n\n\n  var num2vect = function num2vect(n) {\n    return {\n      x: n,\n      y: n\n    };\n  }; // @ts-check\n\n  /**\n   * Adds event-listeners to the selectorArea\n   * @param {DSArea[]} nodes\n   * @param {DSModificationCallback} callback\n   * @param {MutationObserver} modificationObserver\n   */\n\n\n  var addModificationObservers = function (nodes, callback, modificationObserver) {\n    window.addEventListener('resize', callback);\n    window.addEventListener('scroll', callback);\n    nodes.forEach(function (el, i) {\n      modificationObserver.observe(el, {\n        childList: i !== 0,\n        attributes: true\n      });\n    });\n  }; // @ts-check\n\n  /**\n   * Checks whether the area can scroll or not\n   * @param {DSArea} area\n   * @return {boolean} scroll X/Y\n   */\n\n\n  var canScroll = function (area) {\n    var scroll = getCurrentScroll(area);\n    if (scroll.x || scroll.y) return true;\n\n    if (area instanceof HTMLDocument) {\n      if (area.body) return !!(area.body.scrollTop = 1);else return !!(area.documentElement.scrollTop = 1);\n    }\n\n    return !!(area.scrollTop = 1);\n  }; // @ts-check\n\n  /**\n   * Creates the SelectorArea\n   * @param {string} selectorAreaClass\n   * @return {HTMLDivElement}\n   */\n\n\n  var createSelectorAreaElement = function (selectorAreaClass) {\n    var node = document.createElement('div');\n    node.style.position = 'fixed';\n    node.style.overflow = 'hidden';\n    node.style.pointerEvents = 'none';\n    node.style.zIndex = '999999999999999999';\n    node.classList.add(selectorAreaClass);\n    return node;\n  }; // @ts-check\n\n  /**\n   * Create the selector node\n   * @param {boolean} customStyles\n   * @return {HTMLElement}\n   */\n\n\n  var createSelectorElement = function (customStyles) {\n    var selector = document.createElement('div');\n    selector.style.position = 'absolute';\n\n    if (!customStyles) {\n      selector.style.background = 'rgba(0, 0, 255, 0.1)';\n      selector.style.border = '1px solid rgba(0, 0, 255, 0.45)';\n      selector.style.display = 'none';\n      selector.style.pointerEvents = 'none'; // fix for issue #8 (ie11+)\n    }\n\n    return selector;\n  }; // @ts-check\n\n  /**\n   * Returns a function, that, as long as it continues to be invoked, will not\n   * be triggered. The function will be called after it stops being called for\n   * `wait` milliseconds. All credits to [Trey Huffine]{@link https://levelup.gitconnected.com/debounce-in-javascript-improve-your-applications-performance-5b01855e086}\n   * @param {*} func\n   * @param {number} wait\n   * @returns {DSModificationCallback}\n   */\n\n\n  var debounce = function (func, wait) {\n    var timeout; // This is the function that is returned and will be executed many times\n    // We spread (...args) to capture any number of parameters we want to pass\n\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      } // The callback function to be executed after\n      // the debounce time has elapsed\n\n\n      var later = function later() {\n        // null timeout to indicate the debounce ended\n        timeout = null; // Execute the callback\n\n        func.apply(void 0, args);\n      }; // This will reset the waiting every function execution.\n      // This is the step that prevents the function from\n      // being executed because it will never reach the\n      // inside of the previous setTimeout\n\n\n      clearTimeout(timeout); // Restart the debounce waiting period.\n      // setTimeout returns a truthy value (it differs in web vs Node)\n\n      timeout = setTimeout(later, wait);\n    };\n  }; // @ts-check\n\n\n  var documentScroll = function () {\n    var _document$body, _document$documentEle, _document$body2, _document$documentEle2;\n\n    return {\n      y: ((_document$body = document.body) === null || _document$body === void 0 ? void 0 : _document$body.scrollTop) || ((_document$documentEle = document.documentElement) === null || _document$documentEle === void 0 ? void 0 : _document$documentEle.scrollTop) || 0,\n      x: ((_document$body2 = document.body) === null || _document$body2 === void 0 ? void 0 : _document$body2.scrollLeft) || ((_document$documentEle2 = document.documentElement) === null || _document$documentEle2 === void 0 ? void 0 : _document$documentEle2.scrollLeft) || 0\n    };\n  }; // @ts-check\n\n  /**\n   * Returns the top/left/bottom/right/width/height\n   * values of an area. If area is document then everything\n   * except the sizes will be nulled.\n   * @param {DSArea} area\n   * @param {number} zoom\n   * @returns {DSBoundingRect}\n   */\n\n\n  var getAreaRect = function (area, zoom) {\n    if (area instanceof Document) return {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    var rect = area.getBoundingClientRect();\n    return {\n      top: rect.top,\n      left: rect.left,\n      bottom: rect.bottom,\n      right: rect.right,\n      width: (area.clientWidth || rect.width) * zoom,\n      height: (area.clientHeight || rect.height) * zoom\n    };\n  }; // @ts-check\n\n  /**\n   * @param {DSArea} [area]\n   * @return {Vect2} scroll X/Y\n   */\n\n\n  var getCurrentScroll = function (area) {\n    if (!area || area instanceof Document) return documentScroll();\n    return {\n      x: area.scrollLeft >= 0 ? area.scrollLeft : documentScroll().x,\n      y: area.scrollTop >= 0 ? area.scrollTop : documentScroll().y\n    };\n  }; // @ts-check\n\n  /**\n   * Returns the edges that an element is overflowing\n   * @param {Object} p\n   * @param {DSBoundingRect} p.elementRect\n   * @param {DSBoundingRect} p.containerRect\n   * @param {Vect2} [p.tolerance]\n   * @returns {DSEdges}\n   */\n\n\n  var getOverflowEdges = function (_ref) {\n    var elementRect = _ref.elementRect,\n        containerRect = _ref.containerRect,\n        _ref$tolerance = _ref.tolerance,\n        tolerance = _ref$tolerance === void 0 ? {\n      x: 0,\n      y: 0\n    } : _ref$tolerance;\n    var edges = [];\n    if (elementRect.top - tolerance.y < containerRect.top) edges.push('top');\n    if (elementRect.left - tolerance.x < containerRect.left) edges.push('left');\n    if (elementRect.bottom + tolerance.y > containerRect.bottom) edges.push('bottom');\n    if (elementRect.right + tolerance.y > containerRect.right) edges.push('right');\n    return (\n      /** @type {DSEdges} */\n      edges\n    );\n  }; // @ts-check\n\n  /**\n   * Returns cursor x, y position based on event object\n   * @param {Object} p\n   * @param {MouseEvent|Touch} p.event\n   * @return {Vect2} cursor X/Y position\n   */\n\n\n  var getPointerPos = function (_ref) {\n    var event = _ref.event;\n    return {\n      x: event.clientX,\n      y: event.clientY\n    };\n  }; // @ts-check\n\n  /**\n   * Reliably returns the exact x,y,w,h positions of the selector element\n   * @param {{ scrollAmount:Vect2, initialPointerPos:Vect2, pointerPos:Vect2 }} p\n   * @returns {{left:number,top:number,width:number,height:number}}\n   */\n\n\n  var getSelectorPosition = function (_ref) {\n    var scrollAmount = _ref.scrollAmount,\n        initialPointerPos = _ref.initialPointerPos,\n        pointerPos = _ref.pointerPos;\n    /** check for direction\n     *\n     * This is quite complicated, so also quite complicated to explain. Lemme’ try:\n     *\n     * Problem #1:\n     * Sadly in HTML we can not have negative sizes.\n     * so if we want to scale our element 10px to the right then it is easy,\n     * we just have to add +10px to the width. But if we want to scale the element\n     * -10px to the left then things become more complicated, we have to move\n     * the element -10px to the left on the x axis and also scale the element\n     * by +10px width to fake a negative sizing.\n     *\n     * One solution to this problem is using css-transforms scale() with\n     * transform-origin of top left. BUT we can’t use this since it will size\n     * everything, then when your element has a border for example, the border will\n     * get inanely huge. Also transforms are not widely supported in IE.\n     *\n     * Example #1:\n     * Unfortunately, things get even more complicated when we are inside a scroll-able\n     * DIV. Then, let’s say we scroll to the right by 10px and move the cursor right by 5px in our\n     * checks we have to subtract 10px from the initialcursor position in our check\n     * (since the initial position is moved to the left by 10px) so in our example:\n     * 1. pointerPos.x (5) > initialPointerPos.x (0) - scrollAmount.x (10) === 5 > -10 === true\n     * then set the x position to the cursors start position\n     * selectorPos.x = initialPointerPos.x (0) - scrollAmount.x (10) === 10 // 2.\n     * then we can calculate the elements width, which is\n     * the new cursor position minus the initial one plus the scroll amount, so in our example:\n     * 3. selectorPos.w = pointerPos.x (5) - initialPointerPos.x (0) + scrollAmount.x (10) === 15;\n     *\n     * let’s say after that movement we now scroll 20px to the left and move our cursor by 30px to the left:\n     * 1b. pointerPos.x (-30) > initialPointerPos.x (0) - scrollAmount.x (-20) === -30 < --20 === -30 < +20 === false;\n     * 2b. selectorPos.x = pointerPos.x (-30) === -30; move left position to cursor (for more info see Problem #1)\n     * 3b. selectorPos.w = initialPointerPos.x (0) - pointerPos.x (-30) - scrollAmount.x (-20) === 0--30--20 === 0+30+20 === 50;  // scale width to original left position (for more info see Problem #1)\n     *\n     * same thing has to be done for top/bottom\n     *\n     * I hope that makes sense. Try stuff out and play around with variables to get a hang of it.\n     */\n\n    var selectorPos = {}; // right\n\n    if (pointerPos.x > initialPointerPos.x - scrollAmount.x) {\n      // 1.\n      selectorPos.left = initialPointerPos.x - scrollAmount.x; // 2.\n\n      selectorPos.width = pointerPos.x - initialPointerPos.x + scrollAmount.x; // 3.\n      // left\n    } else {\n      // 1b.\n      selectorPos.left = pointerPos.x; // 2b.\n\n      selectorPos.width = initialPointerPos.x - pointerPos.x - scrollAmount.x; // 3b.\n    } // bottom\n\n\n    if (pointerPos.y > initialPointerPos.y - scrollAmount.y) {\n      selectorPos.top = initialPointerPos.y - scrollAmount.y;\n      selectorPos.height = pointerPos.y - initialPointerPos.y + scrollAmount.y; // top\n    } else {\n      selectorPos.top = pointerPos.y;\n      selectorPos.height = initialPointerPos.y - pointerPos.y - scrollAmount.y;\n    }\n\n    return selectorPos;\n  }; // @ts-check\n\n  /**\n   * @param {DSElement} element\n   * @return {Vect2}\n   */\n\n\n  var getComputedTranslatePositions = function getComputedTranslatePositions(element) {\n    var position = {\n      x: 0,\n      y: 0\n    };\n    var computed = window.getComputedStyle(element);\n    if (!computed.transform || computed.transform === 'none') return position;\n\n    if (computed.transform.indexOf('3d') >= 0) {\n      var match = computed.transform.trim().match(/matrix3d\\((.*?)\\)/);\n\n      if (match && match.length) {\n        var _match$;\n\n        var values = (_match$ = match[1]) === null || _match$ === void 0 ? void 0 : _match$.split(',');\n        position.x = parseInt(values[12]) || 0;\n        position.y = parseInt(values[13]) || 0;\n      }\n\n      return position;\n    } else {\n      var _match = computed.transform.trim().match(/matrix\\((.*?)\\)/);\n\n      if (_match && _match.length) {\n        var _match$2;\n\n        var _values = (_match$2 = _match[1]) === null || _match$2 === void 0 ? void 0 : _match$2.split(',');\n\n        position.x = parseInt(_values[4]) || 0;\n        position.y = parseInt(_values[5]) || 0;\n      }\n\n      return position;\n    }\n  };\n  /**\n   * @param {DSElement} element\n   * @return {Vect2}\n   */\n\n\n  var getTranslatedPositions = function getTranslatedPositions(element) {\n    var transform = element.style.transform;\n    if (!transform || transform.indexOf('translate') < 0) return getComputedTranslatePositions(element);\n    var position = {\n      x: 0,\n      y: 0\n    };\n    var match = transform.trim().match(/translate[3dD]*?\\(.*?\\)/);\n\n    if (match) {\n      var _match$3;\n\n      var split = (_match$3 = match[0]) === null || _match$3 === void 0 ? void 0 : _match$3.split('(');\n\n      if (split) {\n        var _split$;\n\n        var values = (_split$ = split[1]) === null || _split$ === void 0 ? void 0 : _split$.split(',');\n        position.x = parseInt(values[0]) || 0;\n        position.y = parseInt(values[1]) || 0;\n      }\n    }\n\n    if (!position.x && !position.x) return getComputedTranslatePositions(element);\n    return position;\n  };\n  /**\n   * @param {DSElement} element\n   * @return {Vect2}\n   */\n\n\n  var getTopLeftPosition = function getTopLeftPosition(element) {\n    var style = element.style;\n    var position = {\n      x: parseInt(style.left) || 0,\n      y: parseInt(style.top) || 0\n    }; // initial positions\n\n    if (!position.x && !position.x) {\n      var computed = window.getComputedStyle(element);\n      return {\n        x: parseInt(computed.left) || 0,\n        y: parseInt(computed.top) || 0\n      };\n    }\n\n    return position;\n  };\n  /**\n   * Returns the X and Y coordinates based on styles\n   * Can handle translate and top/left\n   * @param {DSElement} element\n   * @param {boolean} [useTranslate]\n   * @return {Vect2}\n   */\n\n\n  var getStylePosition = function (element, useTranslate) {\n    if (useTranslate) return getTranslatedPositions(element);else return getTopLeftPosition(element);\n  }; // @ts-check\n\n  /**\n   * pushes element back the overflow amount\n   * (top - top gives overflow, then new position pushed back by overflow)\n   * @param {Object} p\n   * @param {DSElement} p.element\n   * @param {DSEdges} p.edges\n   * @param {DSBoundingRect} p.elementRect\n   * @param {DSBoundingRect} p.containerRect\n   * @param {Vect2} p.elementPos\n   * @param {boolean} p.useTransform\n   */\n\n\n  var handleElementOverflow = function (_ref) {\n    var element = _ref.element,\n        edges = _ref.edges,\n        elementRect = _ref.elementRect,\n        containerRect = _ref.containerRect,\n        elementPos = _ref.elementPos,\n        useTransform = _ref.useTransform;\n\n    if (edges.includes('top')) {\n      setStylePosition(element, {\n        y: elementPos.y + containerRect.top - elementRect.top,\n        x: elementPos.x\n      }, useTransform);\n    }\n\n    if (edges.includes('left')) {\n      setStylePosition(element, {\n        y: elementPos.y,\n        x: elementPos.x + containerRect.left - elementRect.left\n      }, useTransform);\n    }\n\n    if (edges.includes('bottom')) {\n      setStylePosition(element, {\n        y: elementPos.y + containerRect.bottom - elementRect.bottom,\n        x: elementPos.x\n      }, useTransform);\n    }\n\n    if (edges.includes('right')) {\n      setStylePosition(element, {\n        y: elementPos.y,\n        x: elementPos.x + containerRect.right - elementRect.right\n      }, useTransform);\n    }\n  }; // @ts-check\n\n  /**\n   * Fix: some elements have to have a special position attribute for calculations\n   * @param {Object} p\n   * @param {CSSStyleDeclaration} p.computedStyle\n   * @param {DSArea} p.node\n   */\n\n\n  var handleElementPositionAttribute = function (_ref) {\n    var computedStyle = _ref.computedStyle,\n        node = _ref.node;\n    var position = computedStyle.position;\n    var isPositioned = position === 'absolute' || position === 'relative' || position === 'fixed';\n    if (!(node instanceof HTMLDocument) && !isPositioned) node.style.position = 'relative';\n  }; // @ts-check\n\n  /**\n   * @typedef {function} ScrollCallback\n   * @property {Array.<'top'|'bottom'|'left'|'right'|undefined>} directions\n   * @property {number} multiplier\n   */\n\n  /**\n   * @param {Object} p\n   * @param {string} p.key the keyboard key that was pressed\n   * @param {boolean} p.shiftKey\n   * @param {boolean} p.canScroll\n   * @param {number} p.keyboardDragSpeed\n   * @param {number} p.zoom\n   * @param {ScrollCallback} p.scrollCallback\n   * @param {Vect2} p.scrollDiff\n   * @param {DSDragKeys} p.dragKeys\n   * @returns {Vect2}\n   */\n\n\n  var handleKeyboardDragPosDifference = function (_ref) {\n    var shiftKey = _ref.shiftKey,\n        keyboardDragSpeed = _ref.keyboardDragSpeed,\n        zoom = _ref.zoom,\n        key = _ref.key,\n        dragKeys = _ref.dragKeys,\n        scrollDiff = _ref.scrollDiff,\n        canScroll = _ref.canScroll,\n        scrollCallback = _ref.scrollCallback;\n    var posDirection = {\n      x: 0,\n      y: 0\n    };\n    var increase = shiftKey ? keyboardDragSpeed * 4 * zoom : keyboardDragSpeed * zoom;\n\n    if (dragKeys.left.includes(key)) {\n      posDirection.x = scrollDiff.x || -increase;\n      if (!shiftKey && !scrollDiff.x && canScroll) scrollCallback(['left'], keyboardDragSpeed);\n    }\n\n    if (dragKeys.right.includes(key)) {\n      posDirection.x = scrollDiff.x || increase;\n      if (!shiftKey && !scrollDiff.x && canScroll) scrollCallback(['right'], keyboardDragSpeed);\n    }\n\n    if (dragKeys.up.includes(key)) {\n      posDirection.y = scrollDiff.y || -increase;\n      if (!shiftKey && !scrollDiff.y && canScroll) scrollCallback(['top'], keyboardDragSpeed);\n    }\n\n    if (dragKeys.down.includes(key)) {\n      posDirection.y = scrollDiff.y || increase;\n      if (!shiftKey && !scrollDiff.y && canScroll) scrollCallback(['bottom'], keyboardDragSpeed);\n    }\n\n    return posDirection;\n  }; // @ts-check\n\n  /**\n   * Logic when an element is selected\n   * @param {Object} p\n   * @param {DSElement} p.element\n   * @param {boolean} p.force\n   * @param {boolean} p.multiSelectionToggle\n   * @param {Set} p.SelectedSet\n   * @param {string} p.hoverClassName\n   */\n\n\n  var handleSelection = function (_ref) {\n    var element = _ref.element,\n        force = _ref.force,\n        multiSelectionToggle = _ref.multiSelectionToggle,\n        SelectedSet = _ref.SelectedSet,\n        hoverClassName = _ref.hoverClassName;\n    if (element.classList.contains(hoverClassName) && !force) return;\n    if (!SelectedSet.has(element)) SelectedSet.add(element);else if (multiSelectionToggle) SelectedSet[\"delete\"](element);\n    element.classList.add(hoverClassName);\n  }; // @ts-check\n\n  /**\n   * Logic when an element is de-selected\n   * @param {Object} p\n   * @param {DSElement} p.element\n   * @param {boolean} p.force\n   * @param {Set} p.SelectedSet\n   * @param {Set} p.PrevSelectedSet\n   * @param {string} p.hoverClassName\n   */\n\n\n  var handleUnSelection = function (_ref) {\n    var element = _ref.element,\n        force = _ref.force,\n        SelectedSet = _ref.SelectedSet,\n        PrevSelectedSet = _ref.PrevSelectedSet,\n        hoverClassName = _ref.hoverClassName;\n    if (!element.classList.contains(hoverClassName) && !force) return false;\n    var inSelection = SelectedSet.has(element);\n    var inPrevSelection = PrevSelectedSet.has(element);\n    /**\n     * Special for issue #9.\n     * if a multi-select-key is pressed, ds 'remembers' the last selection and reverts\n     * to that state if the selection is not kept, to mimic the natural OS behaviour\n     * = if item was selected and is not in selection anymore, reselect it\n     * = if item was not selected and is not in selection anymore, unselect it\n     */\n\n    if (inSelection && !inPrevSelection) SelectedSet[\"delete\"](element);else if (!inSelection && inPrevSelection) SelectedSet.add(element);\n    element.classList.remove(hoverClassName);\n  }; // @ts-check\n\n  /**\n   * Axis-Aligned Bounding Box Collision Detection.\n   * Imagine following Example:\n   *\n   *\n   *        b01\n   *     a01[1]a02\n   *        b02      b11\n   *              a11[2]a12\n   *                 b12\n   *\n   *\n   * to check if those two boxes collide we do this AABB calculation:\n   * 1. a01 < a12 (left border pos box1 smaller than right border pos box2)\n   * 2. a02 > a11 (right border pos box1 larger than left border pos box2)\n   * 3. b01 < b12 (top border pos box1 smaller than bottom border pos box2)\n   * 4. b02 > b11 (bottom border pos box1 larger than top border pos box2)\n   * {@link https://en.wikipedia.org/wiki/Minimum_bounding_box#Axis-aligned_minimum_bounding_box Wikipedia}\n   * {@link https://developer.mozilla.org/en-US/docs/Games/Techniques/2D_collision_detection MDN}\n   * @param {{left:number,right:number,top:number,bottom:number}} el1\n   * @param {{left:number,right:number,top:number,bottom:number}} el2\n   * @returns {boolean}\n   */\n\n\n  var isCollision = function (el1, el2) {\n    if (el1.left < el2.right && // 1.\n    el1.right > el2.left && // 2.\n    el1.top < el2.bottom && // 3.\n    el1.bottom > el2.top // 4.\n    ) return true; // collision detected!\n    else return false;\n  }; // @ts-check\n\n  /**\n   * Moves the element in a posDirection\n   * @param {Object} p\n   * @param {DSElement} p.element\n   * @param {Vect2} p.posDirection\n   * @param {DSBoundingRect} p.containerRect\n   * @param {boolean} p.useTransform\n   */\n\n\n  var moveElement = function (_ref) {\n    var element = _ref.element,\n        posDirection = _ref.posDirection,\n        containerRect = _ref.containerRect,\n        useTransform = _ref.useTransform;\n    var elementPos = getStylePosition(element, useTransform);\n    var newPos = calc(elementPos, '+', posDirection);\n    setStylePosition(element, newPos, useTransform);\n    var elementRect = element.getBoundingClientRect();\n    var edges = getOverflowEdges({\n      elementRect: elementRect,\n      containerRect: containerRect\n    });\n    handleElementOverflow({\n      element: element,\n      edges: edges,\n      elementRect: elementRect,\n      containerRect: containerRect,\n      elementPos: newPos,\n      useTransform: useTransform\n    });\n  }; // @ts-check\n\n  /**\n   * Removes event-listeners to the selectorArea\n   * @param {MutationObserver} modificationObserver\n   * @param {DSModificationCallback} callback\n   */\n\n\n  var removeModificationObservers = function (modificationObserver, callback) {\n    window.removeEventListener('resize', callback);\n    window.removeEventListener('scroll', callback);\n    modificationObserver.disconnect();\n  }; // @ts-check\n\n  /**\n   * Scroll the element in the specified direction\n   * @param {DSArea} element\n   * @param {Array.<'top'|'bottom'|'left'|'right'|undefined>} directions\n   * @param {number} multiplier\n   */\n\n\n  var scrollElement = function (element, directions, multiplier) {\n    if (!directions.length) return;\n    var docEl = document && document.documentElement && document.documentElement.scrollTop && document.documentElement;\n\n    var _element = element instanceof HTMLDocument ? docEl || document.body : element;\n\n    var scrollTop = directions.includes('top') && _element.scrollTop > 0;\n\n    var scrollBot = directions.includes('bottom') && _element.scrollTop < _element.scrollHeight;\n\n    var scrollLeft = directions.includes('left') && _element.scrollLeft > 0;\n\n    var scrollRight = directions.includes('right') && _element.scrollLeft < _element.scrollWidth;\n\n    if (scrollTop) _element.scrollTop -= 1 * multiplier;\n    if (scrollBot) _element.scrollTop += 1 * multiplier;\n    if (scrollLeft) _element.scrollLeft -= 1 * multiplier;\n    if (scrollRight) _element.scrollLeft += 1 * multiplier;\n  }; // @ts-check\n\n  /**\n   * Sets the style position to the X and Y coordinates\n   * Can handle translate and top/left\n   * @param {DSElement} element\n   * @param {Vect2} values\n   * @param {boolean} [useTranslate]\n   * @return {DSElement}\n   */\n\n\n  var setStylePosition = function (element, values, useTranslate) {\n    if (useTranslate) {\n      var prevTransform = element.style.transform;\n      element.style.transform = \"translate3d(\".concat(values.x, \"px,\").concat(values.y, \"px,1px) \").concat(prevTransform.replace(/translate.*?\\)/g, ''));\n    } else {\n      element.style.left = \"\".concat(values.x, \"px\");\n      element.style.top = \"\".concat(values.y, \"px\");\n    }\n\n    return element;\n  };\n  /**\n   * @typedef {function} DSSubscribe\n   * @param {DSCallbackNames} eventName\n   * @param {DSCallback} callback\n   * @returns {number} event id, can be used to unsubscribe more efficiently\n   */\n\n  /**\n   * @typedef {function} DSPublish\n   * @param {DSCallbackNames} eventName\n   * @param {CallbackObject} data passed to the subscription method\n   */\n\n  /**\n   * Maps internal events to external ones\n   *\n   * @param {Object} p\n   * @param {DSSubscribe} p.subscribe\n   * @param {DSPublish} p.publish\n   * @param {Interaction} p.Interaction\n   * @param {SelectedSet} p.SelectedSet\n   */\n\n\n  var subscriberAliases = function (_ref) {\n    var subscribe = _ref.subscribe,\n        publish = _ref.publish,\n        Interaction = _ref.Interaction,\n        SelectedSet = _ref.SelectedSet;\n    var mapping = {\n      'Selected:added': [{\n        name: 'elementselect'\n      }],\n      'Selected:removed': [{\n        name: 'elementunselect'\n      }],\n      'Area:scroll': [{\n        name: 'autoscroll'\n      }],\n      // scroll_directions, scroll_multiplier\n      'Interaction:start': [{\n        name: 'dragstart'\n      }],\n      // event, isDraggingKeyboard\n      'Interaction:update': [{\n        name: 'dragmove',\n        condition: function condition(data) {\n          return data.event;\n        }\n      }],\n      // event, isDraggingKeyboard\n      'Interaction:end': [{\n        name: 'callback'\n      }],\n      // event, isDraggingKeyboard\n      'Drag:keyboardDrag': [{\n        name: 'dragstart'\n      }, {\n        name: 'dragmove'\n      }] // event, isDraggingKeyboard\n\n    };\n\n    var _loop = function _loop() {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          sub_name = _Object$entries$_i[0],\n          pubs = _Object$entries$_i[1];\n\n      ['pre', false].forEach(function (filler) {\n        return subscribe(filler ? \"\".concat(sub_name, \":\").concat(filler) : sub_name, function (data) {\n          return pubs.forEach(function (pub) {\n            return (!pub.condition || pub.condition(data)) && publish(filler ? \"\".concat(filler).concat(pub.name) : pub.name, _objectSpread2({\n              items: SelectedSet.elements,\n              isDragging: Interaction.isDragging\n            }, data));\n          });\n        });\n      });\n    };\n\n    for (var _i = 0, _Object$entries = Object.entries(mapping); _i < _Object$entries.length; _i++) {\n      _loop();\n    }\n  };\n  /**\n   * Transforms any list or single item to an array so user doesn’t have to care.\n   * @param {DSInputElements} items a single item, a Node-list or any element group\n   * @return {DSElements}\n   */\n\n\n  var toArray = function (items) {\n    if (!items) return [];\n    if (!Array.isArray(items) && (items instanceof HTMLElement || items instanceof SVGElement)) return [items];\n    return _toConsumableArray(items);\n  }; // @ts-check\n\n  /**\n   * Updates element style left, top, width, height values\n   * according to pos input object.\n   * @param {HTMLElement} element\n   * @param {{left:number,top:number,width:number,height:number}} pos\n   */\n\n\n  var updateElementStylePos = function (element, pos) {\n    element.style.left = \"\".concat(pos.left, \"px\");\n    element.style.top = \"\".concat(pos.top, \"px\");\n    element.style.width = \"\".concat(pos.width, \"px\");\n    element.style.height = \"\".concat(pos.height, \"px\");\n  };\n\n  var Area = /*#__PURE__*/function () {\n    /**\n     * @type {DSModificationCallback}\n     * @private\n     */\n\n    /**\n     * @type {MutationObserver}\n     * @private\n     */\n\n    /**\n     * @type {number}\n     * @private\n     */\n\n    /**\n     * @type {DSArea}\n     * @private\n     */\n\n    /**\n     * @type {DSArea[]}\n     * @private\n     */\n\n    /**\n     * @type {CSSStyleDeclaration}\n     * @private\n     * */\n\n    /**\n     * @type {{top:number,bottom:number,left:number,right:number}}\n     * @private\n     * */\n\n    /**\n     * @type {DSBoundingRect}\n     * @private\n     * */\n\n    /**\n     * @constructor Area\n     * @param {Object} obj\n     * @param {DSArea} obj.area\n     * @param {PubSub} obj.PS\n     * @param {number} obj.zoom\n     * @ignore\n     */\n    function Area(_ref) {\n      var _this = this;\n\n      var area = _ref.area,\n          PS = _ref.PS,\n          zoom = _ref.zoom;\n\n      _classCallCheck(this, Area);\n\n      _defineProperty(this, \"_modificationCallback\", void 0);\n\n      _defineProperty(this, \"_modificationObserver\", void 0);\n\n      _defineProperty(this, \"_zoom\", void 0);\n\n      _defineProperty(this, \"_node\", void 0);\n\n      _defineProperty(this, \"_parentNodes\", void 0);\n\n      _defineProperty(this, \"_computedStyle\", void 0);\n\n      _defineProperty(this, \"_computedBorder\", void 0);\n\n      _defineProperty(this, \"_rect\", void 0);\n\n      _defineProperty(this, \"start\", function () {\n        addModificationObservers(_this.parentNodes, _this._modificationCallback, _this._modificationObserver);\n      });\n\n      _defineProperty(this, \"reset\", function () {\n        _this._computedStyle = undefined;\n        _this._rect = undefined;\n        _this._computedBorder = undefined;\n        _this._parentNodes = undefined;\n      });\n\n      _defineProperty(this, \"stop\", function () {\n        removeModificationObservers(_this._modificationObserver, _this._modificationCallback);\n\n        _this.reset();\n      });\n\n      _defineProperty(this, \"scroll\", function (directions, multiplier) {\n        scrollElement(_this._node, directions, multiplier);\n\n        _this.PubSub.publish('Area:scroll', {\n          scroll_directions: directions,\n          scroll_multiplier: multiplier\n        });\n      });\n\n      this._node = area;\n      this._zoom = zoom;\n      this.PubSub = PS;\n      handleElementPositionAttribute({\n        computedStyle: this.computedStyle,\n        node: this._node\n      });\n      this._modificationCallback = debounce(function (event) {\n        _this.reset();\n\n        _this.PubSub.publish('Area:modified', {\n          event: event,\n          item: _this\n        });\n      }, 60);\n      this._modificationObserver = new MutationObserver(this._modificationCallback); // first immediate debounce to update values after dom-update\n\n      setTimeout(function () {\n        _this.reset();\n\n        _this.PubSub.publish('Area:modified', {\n          event: event,\n          item: _this\n        });\n      });\n      this.PubSub.subscribe('Interaction:init', this.start);\n      this.PubSub.subscribe('Interaction:end', this.reset);\n    }\n\n    _createClass(Area, [{\n      key: \"HTMLNode\",\n      //////////////////////////////////////////////////////////////////////////////////////\n      // Node Getters\n      get: function get() {\n        return (\n          /** @type {DSArea} */\n          this._node\n        );\n      }\n      /**\n       * The computed border from the element (caches result)\n       * @type {{top:number,bottom:number,left:number,right:number}}\n       */\n\n    }, {\n      key: \"computedBorder\",\n      get: function get() {\n        if (this._computedBorder) return this._computedBorder;\n        return {\n          top: parseInt(this.computedStyle.borderTopWidth),\n          bottom: parseInt(this.computedStyle.borderBottomWidth),\n          left: parseInt(this.computedStyle.borderLeftWidth),\n          right: parseInt(this.computedStyle.borderRightWidth)\n        };\n      }\n      /**\n       * The computed styles from the element (caches result)\n       * @type {CSSStyleDeclaration}\n       */\n\n    }, {\n      key: \"computedStyle\",\n      get: function get() {\n        if (this._computedStyle) return this._computedStyle;\n        if (this.HTMLNode instanceof HTMLDocument) return this._computedStyle = window.getComputedStyle(this.HTMLNode.body || this.HTMLNode.documentElement);else return this._computedStyle = window.getComputedStyle(this.HTMLNode);\n      }\n      /**\n       * The element rect (caches result) (without scrollbar or borders)\n       * @type {DSBoundingRect}\n       */\n\n    }, {\n      key: \"rect\",\n      get: function get() {\n        if (this._rect) return this._rect;\n        return this._rect = getAreaRect(this.HTMLNode, this._zoom);\n      }\n    }, {\n      key: \"parentNodes\",\n      get: function get() {\n        if (this._parentNodes) return this._parentNodes;\n\n        var traverse = function traverse(toWatch) {\n          var _toWatch$index;\n\n          var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          var parent = (_toWatch$index = toWatch[index]) === null || _toWatch$index === void 0 ? void 0 : _toWatch$index.parentNode;\n\n          if (parent) {\n            toWatch.push(parent);\n            index++;\n            return traverse(toWatch, index);\n          } else {\n            return toWatch;\n          }\n        };\n\n        this._parentNodes = traverse([this.HTMLNode]);\n        return this._parentNodes;\n      }\n    }]);\n\n    return Area;\n  }();\n\n  var Drag = /*#__PURE__*/function () {\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    /**\n     * @type {Vect2}\n     * @private\n     */\n\n    /**\n     * @type {Vect2}\n     * @private\n     */\n\n    /**\n     * @type {DSElements}\n     * @private\n     */\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    /**\n     * @type {DSDragKeys}\n     * @private\n     */\n\n    /**\n     * @type {string[]}\n     * @private\n     */\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    /**\n     * @type {number}\n     * @private\n     */\n\n    /**\n     * @type {number}\n     * @private\n     */\n\n    /**\n     * @param {Object} p\n     * @param {DragSelect} p.DS\n     * @param {boolean} p.draggability\n     * @param {boolean} p.useTransform\n     * @param {DSDragKeys} p.dragKeys\n     * @param {boolean} p.keyboardDrag\n     * @param {number} p.keyboardDragSpeed\n     * @param {number} p.zoom\n     * @ignore\n     */\n    function Drag(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS,\n          dragKeys = _ref.dragKeys,\n          draggability = _ref.draggability,\n          keyboardDrag = _ref.keyboardDrag,\n          keyboardDragSpeed = _ref.keyboardDragSpeed,\n          useTransform = _ref.useTransform,\n          zoom = _ref.zoom;\n\n      _classCallCheck(this, Drag);\n\n      _defineProperty(this, \"_useTransform\", void 0);\n\n      _defineProperty(this, \"_prevCursorPos\", void 0);\n\n      _defineProperty(this, \"_prevScrollPos\", void 0);\n\n      _defineProperty(this, \"_elements\", []);\n\n      _defineProperty(this, \"_draggability\", void 0);\n\n      _defineProperty(this, \"_dragKeys\", void 0);\n\n      _defineProperty(this, \"_dragKeysFlat\", void 0);\n\n      _defineProperty(this, \"_keyboardDrag\", void 0);\n\n      _defineProperty(this, \"_keyboardDragSpeed\", void 0);\n\n      _defineProperty(this, \"_zoom\", void 0);\n\n      _defineProperty(this, \"keyboardDrag\", function (_ref2) {\n        var event = _ref2.event,\n            key = _ref2.key;\n        if (!_this._keyboardDrag || !_this._dragKeysFlat.includes(key) || !_this.DS.SelectedSet.size || !_this._draggability || _this.DS[\"continue\"]) return;\n\n        _this.DS.publish('Interaction:start', {\n          event: event,\n          isDragging: true,\n          isDraggingKeyboard: true\n        });\n\n        _this._elements = _this.DS.getSelection();\n\n        _this.handleZIndex(true);\n\n        var posDirection = handleKeyboardDragPosDifference({\n          shiftKey: _this.DS.stores.KeyStore.currentValues.includes('shift'),\n          keyboardDragSpeed: _this._keyboardDragSpeed,\n          zoom: _this._zoom,\n          key: key,\n          scrollCallback: _this.DS.Area.scroll,\n          scrollDiff: _this._scrollDiff,\n          canScroll: _this.DS.stores.ScrollStore.canScroll,\n          dragKeys: _this._dragKeys\n        });\n\n        _this._elements.forEach(function (element) {\n          return moveElement({\n            element: element,\n            posDirection: posDirection,\n            containerRect: _this.DS.SelectorArea.rect,\n            useTransform: _this._useTransform\n          });\n        });\n\n        _this.DS.publish('Interaction:update', {\n          event: event,\n          isDragging: true,\n          isDraggingKeyboard: true\n        });\n      });\n\n      _defineProperty(this, \"keyboardEnd\", function (_ref3) {\n        var event = _ref3.event,\n            key = _ref3.key;\n        if (!_this._keyboardDrag || !_this._dragKeysFlat.includes(key) || !_this.DS.SelectedSet.size || !_this._draggability) return;\n\n        _this.DS.publish('Interaction:end', {\n          event: event,\n          isDragging: _this._draggability,\n          isDraggingKeyboard: true\n        });\n      });\n\n      _defineProperty(this, \"start\", function (_ref4) {\n        var isDragging = _ref4.isDragging,\n            isDraggingKeyboard = _ref4.isDraggingKeyboard;\n        if (!isDragging || isDraggingKeyboard) return;\n        _this._prevCursorPos = null;\n        _this._prevScrollPos = null;\n        _this._elements = _this.DS.getSelection();\n\n        _this.handleZIndex(true);\n      });\n\n      _defineProperty(this, \"stop\", function (evt) {\n        if (evt !== null && evt !== void 0 && evt.isKeyboard) return;\n        _this._prevCursorPos = null;\n        _this._prevScrollPos = null;\n\n        _this.handleZIndex(false);\n\n        _this._elements = [];\n      });\n\n      _defineProperty(this, \"update\", function (_ref5) {\n        var isDragging = _ref5.isDragging,\n            isDraggingKeyboard = _ref5.isDraggingKeyboard;\n        if (!isDragging || !_this._elements.length || isDraggingKeyboard || _this.DS[\"continue\"]) return;\n        var posDirection = calc(_this._cursorDiff, '+', _this._scrollDiff);\n\n        _this._elements.forEach(function (element) {\n          return moveElement({\n            element: element,\n            posDirection: posDirection,\n            containerRect: _this.DS.SelectorArea.rect,\n            useTransform: _this._useTransform\n          });\n        });\n      });\n\n      _defineProperty(this, \"handleZIndex\", function (add) {\n        _this._elements.forEach(function (element) {\n          return element.style.zIndex = \"\".concat((parseInt(element.style.zIndex) || 0) + add ? 9999 : -9998);\n        });\n      });\n\n      this.DS = DS;\n      this._useTransform = useTransform;\n      this._keyboardDragSpeed = keyboardDragSpeed;\n      this._keyboardDrag = keyboardDrag;\n      this._zoom = zoom;\n      this._draggability = draggability;\n      this._dragKeys = {\n        up: dragKeys.up.map(function (k) {\n          return k.toLowerCase();\n        }),\n        down: dragKeys.down.map(function (k) {\n          return k.toLowerCase();\n        }),\n        left: dragKeys.left.map(function (k) {\n          return k.toLowerCase();\n        }),\n        right: dragKeys.right.map(function (k) {\n          return k.toLowerCase();\n        })\n      };\n      this._dragKeysFlat = [].concat(_toConsumableArray(this._dragKeys.up), _toConsumableArray(this._dragKeys.down), _toConsumableArray(this._dragKeys.left), _toConsumableArray(this._dragKeys.right));\n      this.DS.subscribe('Interaction:start', this.start);\n      this.DS.subscribe('Interaction:end', this.stop);\n      this.DS.subscribe('Interaction:update', this.update);\n      this.DS.subscribe('KeyStore:down', this.keyboardDrag);\n      this.DS.subscribe('KeyStore:up', this.keyboardEnd);\n    }\n\n    _createClass(Drag, [{\n      key: \"_cursorDiff\",\n      get: function get() {\n        var currentPointerVal = this.DS.stores.PointerStore.currentVal;\n        var cursorDiff = this._prevCursorPos ? calc(currentPointerVal, '-', this._prevCursorPos) : {\n          x: 0,\n          y: 0\n        };\n        this._prevCursorPos = currentPointerVal;\n        return cursorDiff;\n      }\n    }, {\n      key: \"_scrollDiff\",\n      get: function get() {\n        var currentScrollVal = this.DS.stores.ScrollStore.currentVal;\n        var scrollDiff = this._prevScrollPos ? calc(currentScrollVal, '-', this._prevScrollPos) : {\n          x: 0,\n          y: 0\n        };\n        this._prevScrollPos = currentScrollVal;\n        return scrollDiff;\n      }\n    }]);\n\n    return Drag;\n  }();\n\n  var Interaction = /*#__PURE__*/function () {\n    /**\n     * @type {DSArea}\n     * @private\n     * */\n\n    /**\n     * @type {boolean}\n     * @private\n     * */\n\n    /**\n     * @type {boolean}\n     * @private\n     * */\n\n    /** @type {boolean} */\n\n    /** @type {boolean} */\n\n    /**\n     * @constructor Interaction\n     * @param {Object} obj\n     * @param {DSArea} obj.areaElement\n     * @param {boolean} obj.draggability\n     * @param {boolean} obj.immediateDrag\n     * @param {DragSelect} obj.DS\n     * @ignore\n     */\n    function Interaction(_ref) {\n      var _this = this;\n\n      var areaElement = _ref.areaElement,\n          DS = _ref.DS,\n          draggability = _ref.draggability,\n          immediateDrag = _ref.immediateDrag;\n\n      _classCallCheck(this, Interaction);\n\n      _defineProperty(this, \"_areaElement\", void 0);\n\n      _defineProperty(this, \"_draggability\", void 0);\n\n      _defineProperty(this, \"_immediateDrag\", void 0);\n\n      _defineProperty(this, \"isInteracting\", void 0);\n\n      _defineProperty(this, \"isDragging\", void 0);\n\n      _defineProperty(this, \"init\", function () {\n        _this.stop();\n\n        _this._areaElement.addEventListener('mousedown', _this.start);\n\n        _this._areaElement.addEventListener('touchstart', _this.start, {\n          passive: false\n        });\n\n        _this.DS.publish('Interaction:init', {});\n      });\n\n      _defineProperty(this, \"start\", function (event) {\n        if (event.type === 'touchstart') event.preventDefault(); // Call preventDefault() to prevent double click issue, see https://github.com/ThibaultJanBeyer/DragSelect/pull/29 & https://developer.mozilla.org/vi/docs/Web/API/Touch_events/Supporting_both_TouchEvent_and_MouseEvent\n\n        if (!_this._canInteract(event)) return;\n        _this.isInteracting = true;\n        _this.isDragging = _this.isDragEvent(event);\n\n        _this.DS.publish('Interaction:start', {\n          event: event,\n          isDragging: _this.isDragging\n        });\n\n        document.addEventListener('mouseup', _this.reset);\n        document.addEventListener('touchend', _this.reset);\n      });\n\n      _defineProperty(this, \"isDragEvent\", function (event) {\n        if (!_this._draggability || _this.DS.stores.KeyStore.isMultiSelectKeyPressed(event) || !_this.DS.SelectableSet.has(event.target)) return false;\n\n        if (_this._immediateDrag) {\n          if (!_this.DS.SelectedSet.size) _this.DS.SelectedSet.add(\n          /** @type {DSElement} */\n          event.target);else if (!_this.DS.SelectedSet.has(event.target)) {\n            _this.DS.SelectedSet.clear();\n\n            _this.DS.SelectedSet.add(\n            /** @type {DSElement} */\n            event.target);\n          }\n        }\n\n        if (_this.DS.SelectedSet.has(event.target)) return true;\n        return false;\n      });\n\n      _defineProperty(this, \"onClick\", function (_ref2) {\n        var event = _ref2.event;\n        if (!_this._canInteract(event)) return;\n        if (event.detail > 0) return; // mouse interaction\n\n        var _this$DS = _this.DS,\n            _this$DS$stores = _this$DS.stores,\n            PointerStore = _this$DS$stores.PointerStore,\n            KeyStore = _this$DS$stores.KeyStore,\n            SelectableSet = _this$DS.SelectableSet,\n            SelectedSet = _this$DS.SelectedSet,\n            publish = _this$DS.publish;\n        PointerStore.start(event);\n        var node =\n        /** @type {any} */\n        event.target;\n        if (!SelectableSet.has(node)) return;\n        if (!KeyStore.isMultiSelectKeyPressed(event)) SelectedSet.clear();\n        SelectedSet.toggle(node);\n        publish('Interaction:end', {\n          event: event,\n          isDragging: _this.isDragging\n        }); // simulate mouse-up (that does not exist on keyboard)\n      });\n\n      _defineProperty(this, \"stop\", function () {\n        _this.isInteracting = false;\n        _this.isDragging = false;\n\n        _this._areaElement.removeEventListener('mousedown', _this.start);\n\n        _this._areaElement.removeEventListener('touchstart', _this.start, {\n          // @ts-ignore\n          passive: false\n        });\n\n        document.removeEventListener('mouseup', _this.reset);\n        document.removeEventListener('touchend', _this.reset);\n      });\n\n      _defineProperty(this, \"update\", function (_ref3) {\n        var event = _ref3.event,\n            scroll_directions = _ref3.scroll_directions,\n            scroll_multiplier = _ref3.scroll_multiplier;\n        if (_this.isInteracting) _this.DS.publish('Interaction:update', {\n          event: event,\n          scroll_directions: scroll_directions,\n          scroll_multiplier: scroll_multiplier,\n          isDragging: _this.isDragging\n        });\n      });\n\n      _defineProperty(this, \"reset\", function (event) {\n        var isDragging = _this.isDragging;\n\n        _this.stop();\n\n        _this.init();\n\n        _this.DS.publish('Interaction:end', {\n          event: event,\n          isDragging: isDragging\n        });\n      });\n\n      this._areaElement = areaElement;\n      this._draggability = draggability;\n      this._immediateDrag = immediateDrag;\n      this.DS = DS;\n      this.DS.subscribe('PointerStore:updated', this.update);\n      this.DS.subscribe('Selectable:click', this.onClick);\n      this.DS.subscribe('Selectable:pointer', function (_ref4) {\n        var event = _ref4.event;\n        return _this.start(event);\n      });\n      this.DS.subscribe('Area:scroll', this.update);\n    }\n\n    _createClass(Interaction, [{\n      key: \"_canInteract\",\n\n      /**\n       * @param {DSEvent} event\n       */\n      value: function _canInteract(event) {\n        var isKeyboardClick =\n        /** @type {MouseEvent} */\n        event.clientX === 0 &&\n        /** @type {MouseEvent} */\n        event.clientY === 0 &&\n        /** @type {MouseEvent} */\n        event.detail === 0 && event.target;\n        if (\n        /** @type {MouseEvent} */\n        event.button === 2 || // right-clicks\n        this.isInteracting || // fix double-click issues\n        event.target && !this.DS.SelectorArea.isInside(\n        /** @type {DSElement} */\n        event.target) || //fix outside elements issue\n        !isKeyboardClick && !this.DS.SelectorArea.isClicked(event) // make sure the mouse click is inside the area\n        ) return false;\n        return true;\n      }\n      /**\n       * @param {DSEvent} event\n       */\n\n    }]);\n\n    return Interaction;\n  }();\n\n  var PubSub = function PubSub() {\n    var _this = this;\n\n    _classCallCheck(this, PubSub);\n\n    _defineProperty(this, \"subscribers\", {});\n\n    _defineProperty(this, \"subscribe\", function (eventName, callback) {\n      if (!Array.isArray(_this.subscribers[eventName])) _this.subscribers[eventName] = [];\n\n      _this.subscribers[eventName].push(callback);\n\n      return _this.subscribers[eventName].length - 1;\n    });\n\n    _defineProperty(this, \"unsubscribe\", function (eventName, callback, id) {\n      if (id >= 0) _this.subscribers[eventName].splice(id, 1);else if (callback) _this.subscribers[eventName] = _this.subscribers[eventName].filter(function (cb) {\n        return cb !== callback;\n      });\n    });\n\n    _defineProperty(this, \"publish\", function (eventName, data) {\n      var _this$subscribers$, _this$subscribers$eve;\n\n      if (!Array.isArray(_this.subscribers[eventName])) return;\n      (_this$subscribers$ = _this.subscribers[\"\".concat(eventName, \":pre\")]) === null || _this$subscribers$ === void 0 ? void 0 : _this$subscribers$.forEach(function (callback) {\n        return callback(data);\n      });\n      (_this$subscribers$eve = _this.subscribers[eventName]) === null || _this$subscribers$eve === void 0 ? void 0 : _this$subscribers$eve.forEach(function (callback) {\n        return callback(data);\n      });\n    });\n  };\n\n  var SelectableSet = /*#__PURE__*/function (_Set) {\n    _inherits(SelectableSet, _Set);\n\n    var _super = _createSuper(SelectableSet);\n    /**\n     * @type {DSElements}\n     * @private\n     * */\n\n    /**\n     * @type {string}\n     * @private\n     * */\n\n    /**\n     * @type {string}\n     * @private\n     * */\n\n    /**\n     * @type {boolean}\n     * @private\n     * */\n\n    /**\n     * @type {boolean}\n     * @private\n     * */\n\n    /**\n     * @constructor SelectableSet\n     * @param {Object} p\n     * @param {DSInputElements} p.elements\n     * @param {DragSelect} p.DS\n     * @param {string} p.className\n     * @param {string} p.hoverClassName\n     * @param {boolean} p.useTransform\n     * @param {boolean} p.draggability\n     * @ignore\n     */\n\n\n    function SelectableSet(_ref) {\n      var _this;\n\n      var _elements = _ref.elements,\n          className = _ref.className,\n          hoverClassName = _ref.hoverClassName,\n          draggability = _ref.draggability,\n          useTransform = _ref.useTransform,\n          DS = _ref.DS;\n\n      _classCallCheck(this, SelectableSet);\n\n      _this = _super.call(this);\n\n      _defineProperty(_assertThisInitialized(_this), \"_initElements\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"_className\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"_hoverClassName\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"_useTransform\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"_draggability\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"init\", function () {\n        return _this._initElements.forEach(function (el) {\n          return _this.add(el);\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n        return _this.forEach(function (el) {\n          return _this[\"delete\"](el);\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_onClick\", function (event) {\n        return _this.DS.publish('Selectable:click', {\n          event: event\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_onPointer\", function (event) {\n        return _this.DS.publish('Selectable:pointer', {\n          event: event\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"addAll\", function (elements) {\n        return elements.forEach(function (el) {\n          return _this.add(el);\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"deleteAll\", function (elements) {\n        return elements.forEach(function (el) {\n          return _this[\"delete\"](el);\n        });\n      });\n\n      _this.DS = DS;\n      _this._initElements = toArray(_elements);\n      _this._className = className;\n      _this._hoverClassName = hoverClassName;\n      _this._useTransform = useTransform;\n      _this._draggability = draggability;\n\n      _this.DS.subscribe('Interaction:init', _this.init);\n\n      return _this;\n    }\n\n    _createClass(SelectableSet, [{\n      key: \"add\",\n\n      /** @param {DSElement} element */\n      value: function add(element) {\n        element.classList.add(this._className);\n        element.addEventListener('click', this._onClick);\n        element.addEventListener('mousedown', this._onPointer);\n        element.addEventListener('touchstart', this._onPointer, {\n          // @ts-ignore\n          passive: false\n        });\n        if (this._draggability && !this._useTransform) handleElementPositionAttribute({\n          computedStyle: window.getComputedStyle(element),\n          node: element\n        });\n        return _get(_getPrototypeOf(SelectableSet.prototype), \"add\", this).call(this, element);\n      }\n      /** @param {DSElement} element */\n\n    }, {\n      key: \"delete\",\n      value: function _delete(element) {\n        element.classList.remove(this._className);\n        element.classList.remove(this._hoverClassName);\n        element.removeEventListener('click', this._onClick);\n        element.removeEventListener('mousedown', this._onPointer);\n        element.removeEventListener('touchstart', this._onPointer, {\n          // @ts-ignore\n          passive: false\n        });\n        return _get(_getPrototypeOf(SelectableSet.prototype), \"delete\", this).call(this, element);\n      }\n    }, {\n      key: \"elements\",\n\n      /** @return {DSElements} */\n      get: function get() {\n        return Array.from(this.values());\n      }\n    }]);\n\n    return SelectableSet;\n  }( /*#__PURE__*/_wrapNativeSuper(Set));\n\n  var SelectedSet = /*#__PURE__*/function (_Set) {\n    _inherits(SelectedSet, _Set);\n\n    var _super = _createSuper(SelectedSet);\n    /**\n     * @type {string}\n     * @private\n     * */\n\n    /**\n     * @constructor SelectableSet\n     * @param {Object} p\n     * @param {DragSelect} p.DS\n     * @param {string} p.className\n     * @ignore\n     */\n\n\n    function SelectedSet(_ref) {\n      var _this;\n\n      var className = _ref.className,\n          DS = _ref.DS;\n\n      _classCallCheck(this, SelectedSet);\n\n      _this = _super.call(this);\n\n      _defineProperty(_assertThisInitialized(_this), \"_className\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n        return _this.forEach(function (el) {\n          return _this[\"delete\"](el);\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"addAll\", function (elements) {\n        return elements.forEach(function (el) {\n          return _this.add(el);\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"deleteAll\", function (elements) {\n        return elements.forEach(function (el) {\n          return _this[\"delete\"](el);\n        });\n      });\n\n      _this.DS = DS;\n      _this._className = className;\n      return _this;\n    }\n    /** @param {DSElement} element */\n\n\n    _createClass(SelectedSet, [{\n      key: \"add\",\n      value: function add(element) {\n        if (_get(_getPrototypeOf(SelectedSet.prototype), \"has\", this).call(this, element)) return;\n\n        _get(_getPrototypeOf(SelectedSet.prototype), \"add\", this).call(this, element);\n\n        element.classList.add(this._className);\n        this.DS.publish('Selected:added', {\n          items: this.elements,\n          item: element\n        });\n        element.style.zIndex = \"\".concat((parseInt(element.style.zIndex) || 0) + 1);\n        return this;\n      }\n      /** @param {DSElement} element */\n\n    }, {\n      key: \"delete\",\n      value: function _delete(element) {\n        if (!_get(_getPrototypeOf(SelectedSet.prototype), \"has\", this).call(this, element)) return;\n\n        var deleted = _get(_getPrototypeOf(SelectedSet.prototype), \"delete\", this).call(this, element);\n\n        element.classList.remove(this._className);\n        this.DS.publish('Selected:removed', {\n          items: this.elements,\n          item: element\n        });\n        element.style.zIndex = \"\".concat((parseInt(element.style.zIndex) || 0) - 1);\n        return deleted;\n      }\n    }, {\n      key: \"toggle\",\n\n      /**\n       * Adds/Removes an element. If it is already selected = remove, if not = add.\n       * @param {DSElement} element\n       * @return {DSElement}\n       */\n      value: function toggle(element) {\n        if (this.has(element)) this[\"delete\"](element);else this.add(element);\n        return element;\n      }\n      /** @param {DSElements} elements */\n\n    }, {\n      key: \"elements\",\n\n      /** @return {DSElements} */\n      get: function get() {\n        return Array.from(this.values());\n      }\n    }]);\n\n    return SelectedSet;\n  }( /*#__PURE__*/_wrapNativeSuper(Set));\n\n  var Selection = /*#__PURE__*/function () {\n    /**\n     * @type {Set}\n     * @private\n     * */\n\n    /**\n     * @type {string}\n     * @private\n     * */\n\n    /**\n     * @type {boolean}\n     * @private\n     * */\n\n    /**\n     * @constructor Selection\n     * @param {{ DS:DragSelect, hoverClassName:string, multiSelectToggling:boolean }} p\n     * @ignore\n     */\n    function Selection(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS,\n          hoverClassName = _ref.hoverClassName,\n          multiSelectToggling = _ref.multiSelectToggling;\n\n      _classCallCheck(this, Selection);\n\n      _defineProperty(this, \"_prevSelectedSet\", void 0);\n\n      _defineProperty(this, \"_hoverClassName\", void 0);\n\n      _defineProperty(this, \"_multiSelectToggling\", void 0);\n\n      _defineProperty(this, \"start\", function (_ref2) {\n        var event = _ref2.event,\n            isDragging = _ref2.isDragging;\n        if (isDragging) return;\n\n        _this._storePrevious(event);\n\n        _this._handleInsideSelection(true, event);\n      });\n\n      _defineProperty(this, \"update\", function (_ref3) {\n        var isDragging = _ref3.isDragging;\n        if (isDragging || _this.DS[\"continue\"]) return;\n\n        _this._handleInsideSelection();\n      });\n\n      _defineProperty(this, \"_handleInsideSelection\", function (force, event) {\n        var _this$DS = _this.DS,\n            SelectableSet = _this$DS.SelectableSet,\n            SelectorArea = _this$DS.SelectorArea,\n            Selector = _this$DS.Selector;\n        /** @type {any} */\n\n        var elPosCombo = SelectableSet.elements.map(function (element) {\n          return [element, element.getBoundingClientRect()];\n        });\n        var select = [];\n        var unselect = [];\n\n        for (var i = 0, il = elPosCombo.length; i < il; i++) {\n          if (!SelectorArea.isInside(elPosCombo[i][0], elPosCombo[i][1])) continue;\n          if (isCollision(elPosCombo[i][1], Selector.rect)) select.push(elPosCombo[i][0]);else unselect.push(elPosCombo[i][0]);\n        }\n\n        var multiSelectionToggle = _this.DS.stores.KeyStore.isMultiSelectKeyPressed(event) && _this._multiSelectToggling;\n\n        select.forEach(function (element) {\n          return handleSelection({\n            element: element,\n            force: force,\n            multiSelectionToggle: multiSelectionToggle,\n            SelectedSet: _this.DS.SelectedSet,\n            hoverClassName: _this._hoverClassName\n          });\n        });\n        unselect.forEach(function (element) {\n          return handleUnSelection({\n            element: element,\n            force: force,\n            SelectedSet: _this.DS.SelectedSet,\n            hoverClassName: _this._hoverClassName,\n            PrevSelectedSet: _this._prevSelectedSet\n          });\n        });\n      });\n\n      this._hoverClassName = hoverClassName;\n      this._multiSelectToggling = multiSelectToggling;\n      this.DS = DS;\n      this.DS.subscribe('Interaction:start', this.start);\n      this.DS.subscribe('Interaction:update', this.update);\n    }\n    /**\n     * Stores the previous selection (solves #9)\n     * @param {DSEvent} event\n     * @private\n     * */\n\n\n    _createClass(Selection, [{\n      key: \"_storePrevious\",\n      value: function _storePrevious(event) {\n        var _this$DS2 = this.DS,\n            KeyStore = _this$DS2.stores.KeyStore,\n            SelectedSet = _this$DS2.SelectedSet;\n        if (KeyStore.isMultiSelectKeyPressed(event)) this._prevSelectedSet = new Set(SelectedSet);else this._prevSelectedSet = new Set();\n      }\n      /** @param {{event:DSEvent,isDragging:boolean}} event */\n\n    }]);\n\n    return Selection;\n  }();\n\n  var Selector = /*#__PURE__*/function () {\n    /**\n     * @type {DSBoundingRect}\n     * @private\n     */\n\n    /**\n     * @constructor Selector\n     * @param {Object} p\n     * @param {DragSelect} p.DS\n     * @param {HTMLElement} p.selector\n     * @param {string} p.selectorClass\n     * @param {boolean} p.customStyles\n     * @ignore\n     */\n    function Selector(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS,\n          selector = _ref.selector,\n          selectorClass = _ref.selectorClass,\n          customStyles = _ref.customStyles;\n\n      _classCallCheck(this, Selector);\n\n      _defineProperty(this, \"_rect\", void 0);\n\n      _defineProperty(this, \"start\", function (_ref2) {\n        var isDragging = _ref2.isDragging;\n        if (isDragging) return;\n        var PointerStore = _this.DS.stores.PointerStore;\n        var pPos = PointerStore.initialValArea;\n        updateElementStylePos(_this.HTMLNode, vect2rect(pPos, 1));\n        _this.HTMLNode.style.display = 'block';\n        _this._rect = null;\n      });\n\n      _defineProperty(this, \"stop\", function () {\n        _this.HTMLNode.style.width = '0';\n        _this.HTMLNode.style.height = '0';\n        _this.HTMLNode.style.display = 'none';\n      });\n\n      _defineProperty(this, \"update\", function (_ref3) {\n        var isDragging = _ref3.isDragging;\n        if (isDragging || _this.DS[\"continue\"]) return;\n        var _this$DS$stores = _this.DS.stores,\n            ScrollStore = _this$DS$stores.ScrollStore,\n            PointerStore = _this$DS$stores.PointerStore;\n        var pos = getSelectorPosition({\n          scrollAmount: ScrollStore.scrollAmount,\n          initialPointerPos: PointerStore.initialValArea,\n          pointerPos: PointerStore.currentValArea\n        });\n        updateElementStylePos(_this.HTMLNode, pos);\n        _this._rect = null;\n      });\n\n      this.DS = DS;\n      this.HTMLNode = selector || createSelectorElement(customStyles);\n      this.HTMLNode.classList.add(selectorClass);\n      this.DS.subscribe('Interaction:start', this.start);\n      this.DS.subscribe('Interaction:update', this.update);\n      this.DS.subscribe('Interaction:end', this.stop);\n    }\n\n    _createClass(Selector, [{\n      key: \"rect\",\n      get: function get() {\n        if (this._rect) return this._rect;\n        return this._rect = this.HTMLNode.getBoundingClientRect();\n      }\n    }]);\n\n    return Selector;\n  }();\n\n  var SelectorArea = /*#__PURE__*/function () {\n    /**\n     * @type {number}\n     * @private\n     * */\n\n    /**\n     * @type {*}\n     * @private\n     * */\n\n    /**\n     * @type {DSBoundingRect}\n     * @private\n     */\n\n    /**\n     * @type {DSEdges}\n     * @private\n     */\n\n    /**\n     * @type {Vect2}\n     * @private\n     */\n\n    /**\n     * @class SelectorArea\n     * @constructor SelectorArea\n     * @param {{ DS:DragSelect, selectorAreaClass:string, autoScrollSpeed:number, overflowTolerance:Vect2}} obj\n     * @ignore\n     */\n    function SelectorArea(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS,\n          selectorAreaClass = _ref.selectorAreaClass,\n          autoScrollSpeed = _ref.autoScrollSpeed,\n          overflowTolerance = _ref.overflowTolerance;\n\n      _classCallCheck(this, SelectorArea);\n\n      _defineProperty(this, \"_autoScrollSpeed\", void 0);\n\n      _defineProperty(this, \"_scrollInterval\", void 0);\n\n      _defineProperty(this, \"_rect\", void 0);\n\n      _defineProperty(this, \"currentEdges\", []);\n\n      _defineProperty(this, \"_overflowTolerance\", void 0);\n\n      _defineProperty(this, \"start\", function () {\n        return _this.applyElements('append');\n      });\n\n      _defineProperty(this, \"applyElements\", function () {\n        var method = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'append';\n        var docEl = document.body ? 'body' : 'documentElement';\n        var methodName = \"\".concat(method, \"Child\");\n\n        _this.HTMLNode[methodName](_this.DS.Selector.HTMLNode);\n\n        document[docEl][methodName](_this.HTMLNode);\n      });\n\n      _defineProperty(this, \"updatePos\", function () {\n        _this._rect = null;\n        var rect = _this.DS.Area.rect;\n        var border = _this.DS.Area.computedBorder;\n        var style = _this.HTMLNode.style;\n        var top = \"\".concat(rect.top + border.top, \"px\");\n        var left = \"\".concat(rect.left + border.left, \"px\");\n        var width = \"\".concat(rect.width, \"px\");\n        var height = \"\".concat(rect.height, \"px\");\n        if (style.top !== top) style.top = top;\n        if (style.left !== left) style.left = left;\n        if (style.width !== width) style.width = width;\n        if (style.height !== height) style.height = height;\n      });\n\n      _defineProperty(this, \"stop\", function (remove) {\n        _this.stopAutoScroll();\n\n        if (remove) _this.applyElements('remove');\n      });\n\n      _defineProperty(this, \"startAutoScroll\", function () {\n        _this.currentEdges = [];\n        _this._scrollInterval = setInterval(function () {\n          return _this.handleAutoScroll();\n        }, 16);\n      });\n\n      _defineProperty(this, \"handleAutoScroll\", function () {\n        if (_this.DS[\"continue\"]) return;\n        var _this$DS = _this.DS,\n            PointerStore = _this$DS.stores.PointerStore,\n            Area = _this$DS.Area;\n        _this.currentEdges = getOverflowEdges({\n          elementRect: vect2rect(PointerStore.currentVal),\n          containerRect: _this.rect,\n          tolerance: _this._overflowTolerance\n        });\n        if (_this.currentEdges.length) Area.scroll(_this.currentEdges, _this._autoScrollSpeed);\n      });\n\n      _defineProperty(this, \"stopAutoScroll\", function () {\n        _this.currentEdges = [];\n        clearInterval(_this._scrollInterval);\n      });\n\n      _defineProperty(this, \"isInside\", function (element, elementRect) {\n        if (_this.DS.Area.HTMLNode.contains(element) && _this.DS.stores.ScrollStore.canScroll) return true;\n        return isCollision(_this.rect, elementRect || element.getBoundingClientRect());\n      });\n\n      this._autoScrollSpeed = autoScrollSpeed;\n      this._overflowTolerance = overflowTolerance;\n      this.DS = DS;\n      this.HTMLNode = createSelectorAreaElement(selectorAreaClass);\n      this.DS.subscribe('Area:modified', this.updatePos);\n      this.DS.subscribe('Interaction:init', this.start);\n      this.DS.subscribe('Interaction:start', this.startAutoScroll);\n      this.DS.subscribe('Interaction:end', function () {\n        _this.updatePos();\n\n        _this.stopAutoScroll();\n      });\n    }\n\n    _createClass(SelectorArea, [{\n      key: \"isClicked\",\n\n      /**\n       * checks if the click was triggered on the area.\n       * @param {DSEvent} [event]\n       * @returns {boolean}\n       */\n      value: function isClicked(event) {\n        var PointerStore = this.DS.stores.PointerStore;\n        var initialVal = event ? PointerStore.getPointerPosition(event) : PointerStore.initialVal;\n        return isCollision({\n          left: initialVal.x,\n          top: initialVal.y,\n          right: initialVal.x,\n          bottom: initialVal.y\n        }, this.rect);\n      }\n    }, {\n      key: \"rect\",\n      get: function get() {\n        if (this._rect) return this._rect;\n        return this._rect = this.HTMLNode.getBoundingClientRect();\n      }\n    }]);\n\n    return SelectorArea;\n  }();\n\n  var KeyStore = /*#__PURE__*/function () {\n    /**\n     * @type {boolean}\n     * @private\n     * */\n\n    /**\n     * @type {DSMultiSelectKeys}\n     * @private\n     * */\n\n    /**\n     * @type {Set<string>}\n     * @private\n     * */\n\n    /**\n     * @type {{control:string,shift:string,meta:string}}\n     * @private\n     * */\n\n    /**\n     * @class KeyStore\n     * @constructor KeyStore\n     * @param {{DS:DragSelect,multiSelectKeys:DSMultiSelectKeys,multiSelectMode:boolean}} p\n     * @ignore\n     */\n    function KeyStore(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS,\n          multiSelectKeys = _ref.multiSelectKeys,\n          multiSelectMode = _ref.multiSelectMode;\n\n      _classCallCheck(this, KeyStore);\n\n      _defineProperty(this, \"_multiSelectMode\", void 0);\n\n      _defineProperty(this, \"_multiSelectKeys\", void 0);\n\n      _defineProperty(this, \"_currentValues\", new Set());\n\n      _defineProperty(this, \"_keyMapping\", {\n        control: 'ctrlKey',\n        shift: 'shiftKey',\n        meta: 'metaKey'\n      });\n\n      _defineProperty(this, \"init\", function () {\n        document.addEventListener('keydown', _this.keydown);\n        document.addEventListener('keyup', _this.keyup);\n        window.addEventListener('blur', _this.reset);\n      });\n\n      _defineProperty(this, \"keydown\", function (event) {\n        var key = event.key.toLowerCase();\n\n        _this._currentValues.add(key);\n\n        _this.DS.publish('KeyStore:down', {\n          event: event,\n          key: key\n        });\n      });\n\n      _defineProperty(this, \"keyup\", function (event) {\n        var key = event.key.toLowerCase();\n\n        _this._currentValues[\"delete\"](key);\n\n        _this.DS.publish('KeyStore:up', {\n          event: event,\n          key: key\n        });\n      });\n\n      _defineProperty(this, \"stop\", function () {\n        document.removeEventListener('keydown', _this.keydown);\n        document.removeEventListener('keyup', _this.reset);\n        window.removeEventListener('blur', _this.reset);\n\n        _this.reset();\n      });\n\n      _defineProperty(this, \"reset\", function () {\n        return _this._currentValues.clear();\n      });\n\n      this.DS = DS;\n      this._multiSelectMode = multiSelectMode; // @TODO: remove after deprecation\n\n      this._multiSelectKeys = multiSelectKeys.map(function (key) {\n        var deprecatedKeys = {\n          ctrlKey: 'Control',\n          shiftKey: 'Shift',\n          metaKey: 'Meta'\n        };\n        /** @type {string} */\n\n        var newName = deprecatedKeys[key];\n\n        if (newName) {\n          console.warn(\"[DragSelect] \".concat(key, \" is deprecated. Use \\\"\").concat(newName, \"\\\" instead. Act Now!. See docs for more info\"));\n          return newName.toLowerCase();\n        }\n\n        return key.toLowerCase();\n      });\n      this.DS.subscribe('Interaction:init', this.init);\n    }\n\n    _createClass(KeyStore, [{\n      key: \"isMultiSelectKeyPressed\",\n\n      /** @param {KeyboardEvent|MouseEvent|TouchEvent} [event] */\n      value: function isMultiSelectKeyPressed(event) {\n        var _this2 = this;\n\n        if (this._multiSelectMode) return true;\n        if (this.currentValues.some(function (key) {\n          return _this2._multiSelectKeys.includes(key);\n        })) return true;\n        if (event && this._multiSelectKeys.some(function (key) {\n          return event[_this2._keyMapping[key]];\n        })) return true;\n        return false;\n      }\n    }, {\n      key: \"currentValues\",\n      get: function get() {\n        return Array.from(this._currentValues.values());\n      }\n    }]);\n\n    return KeyStore;\n  }();\n\n  var PointerStore = /*#__PURE__*/function () {\n    /** @type {boolean} */\n    // Pointer Positions within Area\n\n    /**\n     * @type {Vect2}\n     * @private\n     * */\n\n    /**\n     * @type {Vect2}\n     * @private\n     * */\n\n    /**\n     * @type {Vect2}\n     * @private\n     * */\n    // General Pointer Position\n\n    /**\n     * @type {Vect2}\n     * @private\n     * */\n\n    /**\n     * @type {Vect2}\n     * @private\n     * */\n\n    /**\n     * @type {Vect2}\n     * @private\n     * */\n\n    /**\n     * @type {TouchEvent}\n     * @private\n     * */\n\n    /**\n     * @class PointerStore\n     * @constructor PointerStore\n     * @param {{DS:DragSelect}} p\n     * @ignore\n     */\n    function PointerStore(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS;\n\n      _classCallCheck(this, PointerStore);\n\n      _defineProperty(this, \"_isMouseInteraction\", false);\n\n      _defineProperty(this, \"_initialValArea\", void 0);\n\n      _defineProperty(this, \"_currentValArea\", void 0);\n\n      _defineProperty(this, \"_lastValArea\", void 0);\n\n      _defineProperty(this, \"_initialVal\", void 0);\n\n      _defineProperty(this, \"_currentVal\", void 0);\n\n      _defineProperty(this, \"_lastVal\", void 0);\n\n      _defineProperty(this, \"_lastTouch\", void 0);\n\n      _defineProperty(this, \"init\", function () {\n        document.addEventListener('mousemove', _this.update);\n        document.addEventListener('touchmove', _this.update, {\n          // @ts-ignore\n          passive: false\n        });\n      });\n\n      _defineProperty(this, \"getPointerPosition\", function (event) {\n        return getPointerPos({\n          event: _this._normalizedEvent(event)\n        });\n      });\n\n      _defineProperty(this, \"update\", function (event) {\n        if (!event) return;\n        _this.currentVal = _this.getPointerPosition(event);\n        if (!_this._isMouseInteraction) return;\n\n        _this.DS.publish('PointerStore:updated', {\n          event: event\n        });\n      });\n\n      _defineProperty(this, \"stop\", function () {\n        document.removeEventListener('mousemove', _this.update);\n        document.removeEventListener('touchmove', _this.update, {\n          // @ts-ignore\n          passive: false\n        }); // debounce in order \"onClick\" to work\n\n        setTimeout(function () {\n          return _this._isMouseInteraction = false;\n        }, 100);\n      });\n\n      _defineProperty(this, \"reset\", function (event) {\n        if (!event) return;\n        _this.currentVal = _this.lastVal = _this.getPointerPosition(event);\n\n        _this.stop();\n\n        _this.init();\n      });\n\n      this.DS = DS;\n      this.DS.subscribe('Interaction:init', this.init);\n      this.DS.subscribe('Interaction:start', function (_ref2) {\n        var event = _ref2.event;\n        return _this.start(event);\n      });\n      this.DS.subscribe('Interaction:end', function (_ref3) {\n        var event = _ref3.event;\n        return _this.reset(event);\n      });\n    }\n\n    _createClass(PointerStore, [{\n      key: \"start\",\n\n      /** @param {DSEvent} [event] */\n      value: function start(event) {\n        if (!event) return;\n        this._isMouseInteraction = true;\n        this.currentVal = this.initialVal = this.getPointerPosition(event);\n      }\n      /** @param {DSEvent} event */\n\n    }, {\n      key: \"_normalizedEvent\",\n\n      /**\n       * @param {DSEvent} event\n       * @return {MouseEvent|Touch}\n       * @private\n       */\n      value: function _normalizedEvent(event) {\n        // touchend has not touches. so we take the last touch if a touchevent, we need to store the positions\n        if ('touches' in event && event.type !== 'touchend') this._lastTouch = event; // if a touchevent, return the last touch rather than the regular event\n        // we need .touches[0] from that event instead\n\n        return 'touches' in event ? this._lastTouch.touches[0] : event;\n      }\n      /** First recorded pointer position within the area */\n\n    }, {\n      key: \"initialValArea\",\n      get: function get() {\n        if (!this._initialValArea) return {\n          x: 0,\n          y: 0\n        };\n        return this._initialValArea;\n      }\n      /** Current pointer position within the area */\n\n    }, {\n      key: \"currentValArea\",\n      get: function get() {\n        if (!this._currentValArea) return {\n          x: 0,\n          y: 0\n        };\n        return this._currentValArea;\n      }\n      /** Last recorded pointer position within the area */\n\n    }, {\n      key: \"lastValArea\",\n      get: function get() {\n        if (!this._lastValArea) return {\n          x: 0,\n          y: 0\n        };\n        return this._lastValArea;\n      }\n      /** First recorded pointer position */\n\n    }, {\n      key: \"initialVal\",\n      get: function get() {\n        if (!this._initialVal) return {\n          x: 0,\n          y: 0\n        };\n        return this._initialVal;\n      }\n      /** Current pointer position */\n      ,\n      set: function set(value) {\n        this._initialVal = value;\n        this._initialValArea = value && calc(value, '-', calc(rect2vect(this.DS.Area.rect), '+', rect2vect(this.DS.Area.computedBorder)));\n      }\n    }, {\n      key: \"currentVal\",\n      get: function get() {\n        if (!this._currentVal) return {\n          x: 0,\n          y: 0\n        };\n        return this._currentVal;\n      }\n      /** Last recorded pointer position */\n      ,\n      set: function set(value) {\n        this._currentVal = value;\n        this._currentValArea = value && calc(value, '-', calc(rect2vect(this.DS.Area.rect), '+', rect2vect(this.DS.Area.computedBorder)));\n      }\n    }, {\n      key: \"lastVal\",\n      get: function get() {\n        if (!this._lastVal) return {\n          x: 0,\n          y: 0\n        };\n        return this._lastVal;\n      },\n      set: function set(value) {\n        this._lastVal = value;\n        this._lastValArea = value && calc(value, '-', calc(rect2vect(this.DS.Area.rect), '+', rect2vect(this.DS.Area.computedBorder)));\n      }\n    }]);\n\n    return PointerStore;\n  }();\n\n  var ScrollStore = /*#__PURE__*/function () {\n    /**\n     * @type {Vect2}\n     * @private */\n\n    /**\n     * @type {Vect2}\n     * @private */\n\n    /**\n     * @type {DSArea}\n     * @private */\n\n    /**\n     * @type {boolean}\n     * @private */\n\n    /**\n     * @class ScrollStore\n     * @constructor ScrollStore\n     * @param {{ DS:DragSelect, areaElement: DSArea, zoom:number }} p\n     * @ignore\n     */\n    function ScrollStore(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS,\n          areaElement = _ref.areaElement,\n          zoom = _ref.zoom;\n\n      _classCallCheck(this, ScrollStore);\n\n      _defineProperty(this, \"_initialVal\", void 0);\n\n      _defineProperty(this, \"_currentVal\", void 0);\n\n      _defineProperty(this, \"_areaElement\", void 0);\n\n      _defineProperty(this, \"_canScroll\", void 0);\n\n      _defineProperty(this, \"init\", function () {\n        return _this._areaElement.addEventListener('scroll', _this.update);\n      });\n\n      _defineProperty(this, \"start\", function () {\n        _this._currentVal = _this._initialVal = getCurrentScroll(_this._areaElement);\n\n        _this._areaElement.addEventListener('scroll', _this.update);\n      });\n\n      _defineProperty(this, \"update\", function () {\n        return _this._currentVal = getCurrentScroll(_this._areaElement);\n      });\n\n      _defineProperty(this, \"stop\", function () {\n        _this._areaElement.removeEventListener('scroll', _this.update);\n\n        _this._initialVal = {\n          x: 0,\n          y: 0\n        };\n        _this._canScroll = null;\n      });\n\n      _defineProperty(this, \"reset\", function () {\n        _this.stop();\n\n        _this.start();\n      });\n\n      this._areaElement = areaElement;\n      this.DS = DS;\n      this.zoom = zoom;\n      this.DS.subscribe('Interaction:init', this.init);\n      this.DS.subscribe('Interaction:start', function () {\n        return _this.start();\n      });\n      this.DS.subscribe('Interaction:end', function () {\n        return _this.reset();\n      });\n    }\n\n    _createClass(ScrollStore, [{\n      key: \"canScroll\",\n      get: function get() {\n        if (typeof this._canScroll === 'boolean') return this._canScroll;\n        return this._canScroll = canScroll(this._areaElement);\n      }\n    }, {\n      key: \"scrollAmount\",\n      get: function get() {\n        var scrollDiff = calc(this.currentVal, '-', this.initialVal); // if area is zoomed, the scroll values are skewed, we need to fix that manually :(\n\n        var zoom = num2vect(this.zoom);\n        var zoomScroll = calc(calc(scrollDiff, '*', zoom), '-', scrollDiff);\n        return {\n          x: scrollDiff.x + zoomScroll.x,\n          y: scrollDiff.y + zoomScroll.y\n        };\n      }\n    }, {\n      key: \"initialVal\",\n      get: function get() {\n        if (!this._initialVal) return {\n          x: 0,\n          y: 0\n        };\n        return this._initialVal;\n      }\n    }, {\n      key: \"currentVal\",\n      get: function get() {\n        if (!this._currentVal) this._currentVal = getCurrentScroll(this._areaElement);\n        return this._currentVal;\n      }\n    }]);\n\n    return ScrollStore;\n  }(); //////////////////////////////////////////////////////////////////////////////////////\n\n\n  var DragSelect = /*#__PURE__*/function () {\n    /**\n     * used to skip all current Selection and dragNdrop functionality\n     * @type {boolean}\n     */\n\n    /**\n     * @class DragSelect\n     * @constructor DragSelect\n     * @param {Settings} settings\n     */\n    function DragSelect(_ref) {\n      var _this = this;\n\n      var _ref$area = _ref.area,\n          area = _ref$area === void 0 ? document : _ref$area,\n          _ref$selectables = _ref.selectables,\n          selectables = _ref$selectables === void 0 ? [] : _ref$selectables,\n          _ref$autoScrollSpeed = _ref.autoScrollSpeed,\n          autoScrollSpeed = _ref$autoScrollSpeed === void 0 ? 5 : _ref$autoScrollSpeed,\n          _ref$overflowToleranc = _ref.overflowTolerance,\n          overflowTolerance = _ref$overflowToleranc === void 0 ? {\n        x: 25,\n        y: 25\n      } : _ref$overflowToleranc,\n          _ref$zoom = _ref.zoom,\n          zoom = _ref$zoom === void 0 ? 1 : _ref$zoom,\n          _ref$customStyles = _ref.customStyles,\n          customStyles = _ref$customStyles === void 0 ? false : _ref$customStyles,\n          _ref$multiSelectMode = _ref.multiSelectMode,\n          multiSelectMode = _ref$multiSelectMode === void 0 ? false : _ref$multiSelectMode,\n          _ref$multiSelectToggl = _ref.multiSelectToggling,\n          multiSelectToggling = _ref$multiSelectToggl === void 0 ? true : _ref$multiSelectToggl,\n          _ref$multiSelectKeys = _ref.multiSelectKeys,\n          multiSelectKeys = _ref$multiSelectKeys === void 0 ? ['Control', 'Shift', 'Meta'] : _ref$multiSelectKeys,\n          _ref$selector = _ref.selector,\n          selector = _ref$selector === void 0 ? undefined : _ref$selector,\n          _ref$draggability = _ref.draggability,\n          draggability = _ref$draggability === void 0 ? true : _ref$draggability,\n          _ref$immediateDrag = _ref.immediateDrag,\n          immediateDrag = _ref$immediateDrag === void 0 ? true : _ref$immediateDrag,\n          _ref$keyboardDrag = _ref.keyboardDrag,\n          keyboardDrag = _ref$keyboardDrag === void 0 ? true : _ref$keyboardDrag,\n          dragKeys = _ref.dragKeys,\n          _ref$keyboardDragSpee = _ref.keyboardDragSpeed,\n          keyboardDragSpeed = _ref$keyboardDragSpee === void 0 ? 10 : _ref$keyboardDragSpee,\n          _ref$useTransform = _ref.useTransform,\n          useTransform = _ref$useTransform === void 0 ? true : _ref$useTransform,\n          _ref$hoverClass = _ref.hoverClass,\n          hoverClass = _ref$hoverClass === void 0 ? 'ds-hover' : _ref$hoverClass,\n          _ref$selectableClass = _ref.selectableClass,\n          selectableClass = _ref$selectableClass === void 0 ? 'ds-selectable' : _ref$selectableClass,\n          _ref$selectedClass = _ref.selectedClass,\n          selectedClass = _ref$selectedClass === void 0 ? 'ds-selected' : _ref$selectedClass,\n          _ref$selectorClass = _ref.selectorClass,\n          selectorClass = _ref$selectorClass === void 0 ? 'ds-selector' : _ref$selectorClass,\n          _ref$selectorAreaClas = _ref.selectorAreaClass,\n          selectorAreaClass = _ref$selectorAreaClas === void 0 ? 'ds-selector-area' : _ref$selectorAreaClas,\n          callback = _ref.callback,\n          onDragMove = _ref.onDragMove,\n          onDragStartBegin = _ref.onDragStartBegin,\n          onDragStart = _ref.onDragStart,\n          onElementSelect = _ref.onElementSelect,\n          onElementUnselect = _ref.onElementUnselect;\n\n      _classCallCheck(this, DragSelect);\n\n      _defineProperty(this, \"continue\", false);\n\n      _defineProperty(this, \"start\", function () {\n        return _this.Interaction.init();\n      });\n\n      _defineProperty(this, \"break\", function () {\n        return _this[\"continue\"] = true;\n      });\n\n      _defineProperty(this, \"getSelection\", function () {\n        return _this.SelectedSet.elements;\n      });\n\n      _defineProperty(this, \"getSelectables\", function () {\n        return _this.SelectableSet.elements;\n      });\n\n      _defineProperty(this, \"getInitialCursorPosition\", function () {\n        return _this.stores.PointerStore.initialVal;\n      });\n\n      _defineProperty(this, \"getCurrentCursorPosition\", function () {\n        return _this.stores.PointerStore.currentVal;\n      });\n\n      _defineProperty(this, \"getPreviousCursorPosition\", function () {\n        return _this.stores.PointerStore.lastVal;\n      });\n\n      _defineProperty(this, \"getInitialCursorPositionArea\", function () {\n        return _this.stores.PointerStore.initialValArea;\n      });\n\n      _defineProperty(this, \"getCurrentCursorPositionArea\", function () {\n        return _this.stores.PointerStore.currentValArea;\n      });\n\n      _defineProperty(this, \"getPreviousCursorPositionArea\", function () {\n        return _this.stores.PointerStore.lastValArea;\n      });\n\n      _defineProperty(this, \"isMultiSelect\", function (event) {\n        return _this.stores.KeyStore.isMultiSelectKeyPressed(event);\n      });\n\n      _defineProperty(this, \"isDragging\", function () {\n        return _this.Interaction.isDragging;\n      });\n\n      this.PubSub = new PubSub();\n      this.subscribe = this.PubSub.subscribe;\n      this.unsubscribe = this.PubSub.unsubscribe;\n      this.publish = this.PubSub.publish;\n\n      this._callbacksTemp({\n        callback: callback,\n        onDragMove: onDragMove,\n        onDragStart: onDragStart,\n        onDragStartBegin: onDragStartBegin,\n        onElementSelect: onElementSelect,\n        onElementUnselect: onElementUnselect\n      });\n\n      this.stores = {\n        PointerStore: new PointerStore({\n          DS: this\n        }),\n        ScrollStore: new ScrollStore({\n          DS: this,\n          areaElement: area,\n          zoom: zoom\n        }),\n        KeyStore: new KeyStore({\n          DS: this,\n          multiSelectKeys: multiSelectKeys,\n          multiSelectMode: multiSelectMode\n        })\n      };\n      this.Area = new Area({\n        area: area,\n        PS: this.PubSub,\n        zoom: zoom\n      });\n      this.Selector = new Selector({\n        DS: this,\n        selector: selector,\n        selectorClass: selectorClass,\n        customStyles: customStyles\n      });\n      this.SelectorArea = new SelectorArea({\n        DS: this,\n        selectorAreaClass: selectorAreaClass,\n        autoScrollSpeed: autoScrollSpeed,\n        overflowTolerance: overflowTolerance\n      });\n      this.SelectableSet = new SelectableSet({\n        elements: selectables,\n        DS: this,\n        className: selectableClass,\n        hoverClassName: hoverClass,\n        useTransform: useTransform,\n        draggability: draggability\n      });\n      this.SelectedSet = new SelectedSet({\n        DS: this,\n        className: selectedClass\n      });\n      this.Selection = new Selection({\n        DS: this,\n        hoverClassName: hoverClass,\n        multiSelectToggling: multiSelectToggling\n      });\n      this.Drag = new Drag({\n        DS: this,\n        draggability: draggability,\n        useTransform: useTransform,\n        keyboardDrag: keyboardDrag,\n        dragKeys: Object.assign({\n          up: ['ArrowUp'],\n          down: ['ArrowDown'],\n          left: ['ArrowLeft'],\n          right: ['ArrowRight']\n        }, dragKeys),\n        zoom: zoom,\n        keyboardDragSpeed: keyboardDragSpeed\n      });\n      this.Interaction = new Interaction({\n        areaElement: area,\n        DS: this,\n        draggability: draggability,\n        immediateDrag: immediateDrag\n      }); // Subscriber Aliases\n\n      subscriberAliases({\n        subscribe: this.subscribe,\n        publish: this.publish,\n        SelectedSet: this.SelectedSet,\n        Interaction: this.Interaction\n      });\n      this.subscribe('Interaction:end', function () {\n        return _this[\"continue\"] = false;\n      });\n      this.start();\n    } // @TODO: remove after deprecation\n\n\n    _createClass(DragSelect, [{\n      key: \"_callbacksTemp\",\n      value: function _callbacksTemp(_ref2) {\n        var callback = _ref2.callback,\n            onDragMove = _ref2.onDragMove,\n            onDragStart = _ref2.onDragStart,\n            onDragStartBegin = _ref2.onDragStartBegin,\n            onElementSelect = _ref2.onElementSelect,\n            onElementUnselect = _ref2.onElementUnselect;\n\n        var warnMessage = function warnMessage(name, newName) {\n          return console.warn(\"[DragSelect] \".concat(name, \" is deprecated. Use DragSelect.subscribe(\\\"\").concat(newName, \"\\\", (callbackObject) => {}) instead. Act Now! See docs for more info\"));\n        };\n\n        if (callback) {\n          warnMessage('callback', 'callback');\n          this.subscribe('callback', function (_ref3) {\n            var items = _ref3.items,\n                item = _ref3.item,\n                event = _ref3.event;\n            return callback(items, event);\n          });\n        }\n\n        if (onDragMove) {\n          warnMessage('onDragMove', 'dragmove');\n          this.subscribe('dragmove', function (_ref4) {\n            var items = _ref4.items,\n                item = _ref4.item,\n                event = _ref4.event;\n            return onDragMove(event);\n          });\n        }\n\n        if (onDragStart) {\n          warnMessage('onDragStart', 'dragstart');\n          this.subscribe('dragstart', function (_ref5) {\n            var items = _ref5.items,\n                item = _ref5.item,\n                event = _ref5.event;\n            return onDragStart(event);\n          });\n        }\n\n        if (onDragStartBegin) {\n          warnMessage('onDragStartBegin', 'dragstart');\n          this.subscribe('dragstart', function (_ref6) {\n            var items = _ref6.items,\n                item = _ref6.item,\n                event = _ref6.event;\n            return onDragStartBegin(event);\n          });\n        }\n\n        if (onElementSelect) {\n          warnMessage('onElementSelect', 'elementselect');\n          this.subscribe('elementselect', function (_ref7) {\n            var items = _ref7.items,\n                item = _ref7.item,\n                event = _ref7.event;\n            return onElementSelect(item, event);\n          });\n        }\n\n        if (onElementUnselect) {\n          warnMessage('onElementUnselect', 'elementunselect');\n          this.subscribe('elementunselect', function (_ref8) {\n            var items = _ref8.items,\n                item = _ref8.item,\n                event = _ref8.event;\n            return onElementUnselect(item, event);\n          });\n        }\n      } // Useful methods for the user\n      //////////////////////////////////////////////////////////////////////////////////////\n\n      /**\n       * Initializes the functionality. Automatically triggered when created.\n       * Also, reset the functionality after a teardown\n       */\n\n    }, {\n      key: \"stop\",\n\n      /**\n       * Complete function teardown\n       * Will teardown/stop the whole functionality\n       * @param {boolean} [remove] - if elements should be removed.\n       * @param {boolean} [fromSelection] - if elements should also be added/removed to the selection.\n       * @param {boolean} [withCallback] - if elements should also be added/removed to the selection.\n       */\n      value: function stop() {\n        var remove = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var fromSelection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var withCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        if (withCallback) this.publish('callback', {\n          items: this.getSelection()\n        });\n        this.Interaction.stop();\n        this.Area.stop();\n        this.Drag.stop();\n        this.Selector.stop();\n        this.SelectorArea.stop(remove);\n        this.stores.KeyStore.stop();\n        this.stores.PointerStore.stop();\n        this.stores.ScrollStore.stop();\n        if (remove) this.SelectableSet.clear();\n        if (fromSelection) this.SelectedSet.clear();\n      }\n      /**\n       * Utility to override DragSelect internal functionality:\n       * Break will skip the selection or dragging functionality (until after the callback) but let everything continue to run.\n       * Useful utility to write your own functionality/move/dragNdrop based on DragSelect pointer positions.\n       */\n\n    }, {\n      key: \"addSelection\",\n\n      /**\n       * Adds several elements to the selection list also adds the specific classes and take into account all calculations.\n       * Does not clear the selection, in contrary to .setSelection. Can add multiple elements at once\n       * @param {DSInputElements} elements one or multiple elements\n       * @param {boolean} [triggerCallback] - if callback should be called\n       * @param {boolean} [dontAddToSelectables] - if element should not be added to the list of selectable elements\n       * @return {DSElements} all selected elements\n       */\n      value: function addSelection(elements) {\n        var triggerCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var dontAddToSelectables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        this.SelectedSet.addAll(toArray(elements));\n        if (!dontAddToSelectables) this.addSelectables(elements);\n        if (triggerCallback) this.PubSub.publish('callback', {\n          items: this.getSelection()\n        });\n        return this.getSelection();\n      }\n      /**\n       * Removes specific elements from the selection\n       * Multiple elements can be given at once, in contrary to unselect\n       * @param {DSInputElements} elements one or multiple elements\n       * @param {boolean} [triggerCallback] - if callback should be called\n       * @param {boolean} [removeFromSelectables] - if element should be removed from the list of selectable elements\n       * @return {DSElements} all selected elements\n       */\n\n    }, {\n      key: \"removeSelection\",\n      value: function removeSelection(elements) {\n        var triggerCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var removeFromSelectables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        this.SelectedSet.deleteAll(toArray(elements));\n        if (removeFromSelectables) this.removeSelectables(elements);\n        if (triggerCallback) this.PubSub.publish('callback', {\n          items: this.getSelection()\n        });\n        return this.getSelection();\n      }\n      /**\n       * Toggles specific elements from the selection:\n       * If element is not in selection it will be added, if it is already selected, it will be removed.\n       * Multiple elements can be given at once.\n       * @param {DSInputElements} elements one or multiple elements\n       * @param {boolean} [triggerCallback] - if callback should be called\n       * @param {boolean} [alsoSelectables] - if element should not be added/removed to the list of selectable elements accordingly\n       * @return {DSElements} all selected elements\n       */\n\n    }, {\n      key: \"toggleSelection\",\n      value: function toggleSelection(elements) {\n        var _this2 = this;\n\n        var triggerCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var alsoSelectables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        toArray(elements).forEach(function (el) {\n          return _this2.SelectedSet.has(el) ? _this2.removeSelection(elements, triggerCallback, alsoSelectables) : _this2.addSelection(elements, triggerCallback, alsoSelectables);\n        });\n        if (triggerCallback) this.PubSub.publish('callback', {\n          items: this.getSelection()\n        });\n        return this.getSelection();\n      }\n      /**\n       * Sets the current selected elements and optionally run the callback\n       * By default, adds new elements also to the list of selectables\n       * @param {DSInputElements} elements – dom elements\n       * @param {boolean} [triggerCallback] - if callback should be called\n       * @param {boolean} [dontAddToSelectables] - if element should not be added to the list of selectable elements\n       * @return {DSElements}\n       */\n\n    }, {\n      key: \"setSelection\",\n      value: function setSelection(elements) {\n        var triggerCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var dontAddToSelectables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        this.clearSelection();\n        this.addSelection(elements, triggerCallback, dontAddToSelectables);\n        return this.getSelection();\n      }\n      /**\n       * Unselect / Deselect all current selected Nodes\n       * @param {boolean} [triggerCallback] - if callback should be called\n       * @return {DSElements} this.selected, should be empty\n       */\n\n    }, {\n      key: \"clearSelection\",\n      value: function clearSelection() {\n        var triggerCallback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        this.SelectedSet.clear();\n        if (triggerCallback) this.PubSub.publish('callback', {\n          items: this.getSelection()\n        });\n        return this.getSelection();\n      }\n      /**\n       * Add elements that can be selected. No node is added twice\n       * @param {DSInputElements} elements dom element(s)\n       * @param {boolean} [addToSelection] if elements should also be added to current selection\n       * @return {DSInputElements} the added element(s)\n       */\n\n    }, {\n      key: \"addSelectables\",\n      value: function addSelectables(elements) {\n        var addToSelection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var els = toArray(elements);\n        this.SelectableSet.addAll(els);\n        if (addToSelection) this.SelectedSet.addAll(els);\n        return elements;\n      }\n      /**\n       * Gets all nodes that can potentially be selected\n       * @return {DSElements} this.selectables\n       */\n\n    }, {\n      key: \"setSelectables\",\n\n      /**\n       * Sets all elements that can be selected.\n       * Removes all current selectables (& their respective classes).\n       * Adds the new set to the selectables set, thus replacing the original set.\n       * @param {DSInputElements} elements – dom element(s)\n       * @param {boolean} [removeFromSelection] if elements should also be removed from current selection\n       * @param {boolean} [addToSelection] if elements should also be added to current selection\n       * @return {DSInputElements} elements – the added element(s)\n       */\n      value: function setSelectables(elements) {\n        var removeFromSelection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var addToSelection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        this.removeSelectables(elements, removeFromSelection);\n        return this.addSelectables(elements, addToSelection);\n      }\n      /**\n       * Remove elements from the elements that can be selected.\n       * @param {DSInputElements} elements – dom element(s)\n       * @param {boolean} [removeFromSelection] if elements should also be removed from current selection\n       * @return {DSInputElements} the removed element(s)\n       */\n\n    }, {\n      key: \"removeSelectables\",\n      value: function removeSelectables(elements) {\n        var removeFromSelection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        this.SelectableSet.deleteAll(toArray(elements));\n        if (removeFromSelection) this.removeSelection(elements);\n        return elements;\n      }\n      /** The starting/initial position of the cursor/selector @return {Vect2} */\n\n    }, {\n      key: \"getCursorPositionDifference\",\n\n      /**\n       * Utility method that returns the cursor position difference between start and now\n       * @param {boolean} [usePreviousCursorDifference] if true, it will output the cursor position difference between the previous selection and now\n       * @param {boolean} [useAreaPositions] if true, it will use cursor positions relative to the area\n       * @return {Vect2}\n       * @deprecated\n       */\n      value: function getCursorPositionDifference() {\n        var usePreviousCursorDifference = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var useAreaPositions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        console.warn('[DragSelect] Using .getCursorPositionDifference is deprecated. Calculate yourself instead. i.e. `.getCurrentCursorPosition().x - .getInitialCursorPosition().x`');\n        var posA = useAreaPositions ? this.getCurrentCursorPositionArea() : this.getCurrentCursorPosition();\n        var posB = usePreviousCursorDifference ? useAreaPositions ? this.getPreviousCursorPositionArea() : this.getPreviousCursorPosition() : useAreaPositions ? this.getInitialCursorPositionArea() : this.getInitialCursorPosition();\n        return calc(posA, '-', posB);\n      }\n      /**\n       * Whether the user is currently drag n dropping elements (instead of selection)\n       * @return {boolean}\n       */\n\n    }]);\n\n    return DragSelect;\n  }();\n\n  return DragSelect;\n});","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/dragselect/dist/DragSelect.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","DragSelect","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","Function","bind","_isNativeFunction","fn","indexOf","_wrapNativeSuper","_cache","Map","undefined","has","get","set","Wrapper","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","_superPropBase","property","hasOwnProperty","_get","receiver","base","desc","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","Symbol","iterator","from","_arr","_n","_d","_e","_i","_s","next","done","err","minLen","n","slice","name","test","len","arr2","calc","_ref","operator","_ref2","x1","x","y1","y","x2","y2","calculations","rect2vect","rect","left","top","vect2rect","vect","dimension","right","bottom","width","height","num2vect","addModificationObservers","nodes","callback","modificationObserver","window","addEventListener","el","observe","childList","attributes","canScroll","area","scroll","getCurrentScroll","HTMLDocument","body","scrollTop","documentElement","createSelectorAreaElement","selectorAreaClass","node","document","createElement","style","position","overflow","pointerEvents","zIndex","classList","add","createSelectorElement","customStyles","selector","background","border","display","debounce","func","wait","timeout","_len","_key","later","clearTimeout","setTimeout","documentScroll","_document$body","_document$documentEle","_document$body2","_document$documentEle2","scrollLeft","getAreaRect","zoom","Document","innerWidth","innerHeight","getBoundingClientRect","clientWidth","clientHeight","getOverflowEdges","elementRect","containerRect","_ref$tolerance","tolerance","edges","getPointerPos","event","clientX","clientY","getSelectorPosition","scrollAmount","initialPointerPos","pointerPos","selectorPos","getComputedTranslatePositions","element","computed","getComputedStyle","transform","match","trim","_match$","values","split","parseInt","_match","_match$2","_values","getTranslatedPositions","_match$3","_split$","getTopLeftPosition","getStylePosition","useTranslate","handleElementOverflow","elementPos","useTransform","includes","setStylePosition","handleElementPositionAttribute","computedStyle","isPositioned","handleKeyboardDragPosDifference","shiftKey","keyboardDragSpeed","dragKeys","scrollDiff","scrollCallback","posDirection","increase","up","down","handleSelection","force","multiSelectionToggle","SelectedSet","hoverClassName","contains","handleUnSelection","PrevSelectedSet","inSelection","inPrevSelection","remove","isCollision","el1","el2","moveElement","newPos","removeModificationObservers","removeEventListener","disconnect","scrollElement","directions","multiplier","docEl","_element","scrollBot","scrollHeight","scrollRight","scrollWidth","prevTransform","concat","replace","subscriberAliases","subscribe","publish","Interaction","mapping","condition","data","_loop","_Object$entries$_i","_Object$entries","sub_name","pubs","filler","pub","items","elements","isDragging","entries","toArray","HTMLElement","SVGElement","updateElementStylePos","pos","Area","_this","PS","parentNodes","_modificationCallback","_modificationObserver","_computedStyle","_rect","_computedBorder","_parentNodes","reset","_node","PubSub","scroll_directions","scroll_multiplier","_zoom","item","MutationObserver","start","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","HTMLNode","traverse","toWatch","_toWatch$index","index","parent","parentNode","Drag","DS","draggability","keyboardDrag","_keyboardDrag","_dragKeysFlat","size","_draggability","isDraggingKeyboard","_elements","getSelection","handleZIndex","stores","KeyStore","currentValues","_keyboardDragSpeed","_scrollDiff","ScrollStore","_dragKeys","SelectorArea","_useTransform","_ref3","_ref4","_prevCursorPos","_prevScrollPos","evt","isKeyboard","_ref5","_cursorDiff","map","k","toLowerCase","stop","update","keyboardEnd","currentPointerVal","PointerStore","currentVal","cursorDiff","currentScrollVal","areaElement","immediateDrag","_areaElement","passive","type","preventDefault","_canInteract","isInteracting","isDragEvent","isMultiSelectKeyPressed","SelectableSet","_immediateDrag","clear","detail","_this$DS","_this$DS$stores","toggle","init","onClick","isKeyboardClick","button","isInside","isClicked","eventName","subscribers","id","splice","cb","_this$subscribers$","_this$subscribers$eve","_Set","_super","className","_initElements","_className","_hoverClassName","_onClick","_onPointer","_delete","Set","deleted","Selection","multiSelectToggling","_storePrevious","_handleInsideSelection","Selector","elPosCombo","select","unselect","il","_multiSelectToggling","_prevSelectedSet","_this$DS2","selectorClass","pPos","initialValArea","currentValArea","autoScrollSpeed","overflowTolerance","applyElements","method","methodName","computedBorder","stopAutoScroll","currentEdges","_scrollInterval","setInterval","handleAutoScroll","_overflowTolerance","_autoScrollSpeed","clearInterval","updatePos","startAutoScroll","initialVal","getPointerPosition","multiSelectKeys","multiSelectMode","control","shift","meta","keydown","keyup","_currentValues","_multiSelectMode","_multiSelectKeys","deprecatedKeys","ctrlKey","metaKey","newName","console","warn","_this2","some","_keyMapping","_normalizedEvent","_isMouseInteraction","lastVal","_lastTouch","touches","_initialValArea","_currentValArea","_lastValArea","_initialVal","_currentVal","_lastVal","_canScroll","zoomScroll","_ref$area","_ref$selectables","selectables","_ref$autoScrollSpeed","_ref$overflowToleranc","_ref$zoom","_ref$customStyles","_ref$multiSelectMode","_ref$multiSelectToggl","_ref$multiSelectKeys","_ref$selector","_ref$draggability","_ref$immediateDrag","_ref$keyboardDrag","_ref$keyboardDragSpee","_ref$useTransform","_ref$hoverClass","hoverClass","_ref$selectableClass","selectableClass","_ref$selectedClass","selectedClass","_ref$selectorClass","_ref$selectorAreaClas","onDragMove","onDragStartBegin","onDragStart","onElementSelect","onElementUnselect","lastValArea","unsubscribe","_callbacksTemp","assign","warnMessage","_ref6","_ref7","_ref8","fromSelection","withCallback","addSelection","triggerCallback","dontAddToSelectables","addAll","addSelectables","removeSelection","removeFromSelectables","deleteAll","removeSelectables","toggleSelection","alsoSelectables","setSelection","clearSelection","addToSelection","els","setSelectables","removeFromSelection","getCursorPositionDifference","usePreviousCursorDifference","useAreaPositions","posA","getCurrentCursorPositionArea","getCurrentCursorPosition","posB","getPreviousCursorPositionArea","getPreviousCursorPosition","getInitialCursorPositionArea","getInitialCursorPosition"],"mappings":"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","sourcesContent":["/***\n\n ~~~ Version 2.2.2 ~~~\n\n ******************************************\n\n    ____                   _____      __          __ \n   / __ \\_________ _____ _/ ___/___  / /__  _____/ /_\n  / / / / ___/ __ `/ __ `/\\__ \\/ _ \\/ / _ \\/ ___/ __/\n / /_/ / /  / /_/ / /_/ /___/ /  __/ /  __/ /__/ /_  \n/_____/_/   \\__,_/\\__, //____/\\___/_/\\___/\\___/\\__/  \n               /____/                              \n\n ******************************************\n \n {*} {*} STAR THIS PLUGIN ON GITHUB {*} {*}\n\n https://github.com/ThibaultJanBeyer/DragSelect\n Please give it a like, this is what makes me happy :-)\n Thank You\n\n {*} {*} STAR THIS PLUGIN ON GITHUB {*} {*}\n\n ******************************************\n ********* The MIT License (MIT) **********\n ******************************************\n Created 2017 by ThibaultJanBeyer\n web: http://www.thibaultjanbeyer.com/\n github: https://github.com/ThibaultJanBeyer/DragSelect\n\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DragSelect = factory());\n}(this, (function () { 'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _construct(Parent, args, Class) {\n    if (_isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n\n    return _construct.apply(null, arguments);\n  }\n\n  function _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n  }\n\n  function _wrapNativeSuper(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n    _wrapNativeSuper = function _wrapNativeSuper(Class) {\n      if (Class === null || !_isNativeFunction(Class)) return Class;\n\n      if (typeof Class !== \"function\") {\n        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n\n      if (typeof _cache !== \"undefined\") {\n        if (_cache.has(Class)) return _cache.get(Class);\n\n        _cache.set(Class, Wrapper);\n      }\n\n      function Wrapper() {\n        return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n      }\n\n      Wrapper.prototype = Object.create(Class.prototype, {\n        constructor: {\n          value: Wrapper,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      return _setPrototypeOf(Wrapper, Class);\n    };\n\n    return _wrapNativeSuper(Class);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n          result;\n\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor;\n\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n\n      return _possibleConstructorReturn(this, result);\n    };\n  }\n\n  function _superPropBase(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = _getPrototypeOf(object);\n      if (object === null) break;\n    }\n\n    return object;\n  }\n\n  function _get(target, property, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n      _get = Reflect.get;\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = _superPropBase(target, property);\n\n        if (!base) return;\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.get) {\n          return desc.get.call(receiver);\n        }\n\n        return desc.value;\n      };\n    }\n\n    return _get(target, property, receiver || target);\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  /**\n   * The Settings to be passed to the Class\n   * @typedef {Object} Settings\n   * @property {HTMLElement|SVGElement|HTMLDocument} [area=document] area in which you can drag. If not provided it will be the whole document\n   * @property {DSInputElements} [selectables=[]] the elements that can be selected\n   * @property {number} [autoScrollSpeed=5] Speed in which the area scrolls while selecting (if available). Unit is pixel per movement.\n   * @property {Vect2} [overflowTolerance={x:25,y:25}] Tolerance for autoScroll (how close one has to be near an edges for autoScroll to start)\n   * @property {number} [zoom=1] Zoom scale factor (in case of using CSS style transform: scale() which messes with real positions). Unit scale zoom.\n   * @property {boolean} [customStyles=false] if set to true, no styles (except for position absolute) will be applied by default\n   * @property {boolean} [multiSelectMode=false] Add newly selected elements to the selection instead of replacing them\n   * @property {boolean} [multiSelectToggling=true] Whether or not to toggle already active elements while multi-selecting\n   * @property {DSMultiSelectKeys} [multiSelectKeys=['Control', 'Shift', 'Meta']] Keys that allows switching to the multi-select mode (see the multiSelectMode option). Any key value is possible ([see MDN docs](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key)). Note that the best support is given for <kbd>Control</kbd>, <kbd>Shift</kbd> and <kbd>Meta</kbd>. Provide an empty array `[]` if you want to turn off the functionality.\n   * @property {HTMLElement} [selector=HTMLElement] the square that will draw the selection\n   * @property {boolean} [draggability=true] When a user is dragging on an already selected element, the selection is dragged.\n   * @property {boolean} [immediateDrag=true] Whether an element is draggable from the start or needs to be selected first\n   * @property {boolean} [keyboardDrag=true] Whether or not the user can drag with the keyboard (we don't recommend disabling it)\n   * @property {DSDragKeys} [dragKeys={up:['ArrowUp'],down:['ArrowDown'],left:['ArrowLeft'],righ:['ArrowRight']}] The keys available to drag element using the keyboard.\n   * @property {number} [keyboardDragSpeed=10] The speed at which elements are dragged using the keyboard. In pixels per keydown.\n   * @property {boolean} [useTransform=true] Whether to use hardware accelerated css transforms when dragging or top/left instead\n   * @property {string} [hoverClass=ds-hover] the class assigned to the mouse hovered items\n   * @property {string} [selectableClass=ds-selectable] the class assigned to the elements that can be selected\n   * @property {string} [selectedClass=ds-selected] the class assigned to the selected items\n   * @property {string} [selectorClass=ds-selector] the class assigned to the square selector helper\n   * @property {string} [selectorAreaClass=ds-selector-area] the class assigned to the square in which the selector resides. By default it's invisible\n   * @property {DSCallback} [callback] Deprecated: please use DragSelect.subscribe('callback', callback) instead\n   * @property {DSCallback} [onDragMove] Deprecated: please use DragSelect.subscribe('onDragMove', onDragMove) instead\n   * @property {DSCallback} [onDragStartBegin] Deprecated: please use DragSelect.subscribe('onDragStartBegin', onDragStartBegin) instead\n   * @property {DSCallback} [onDragStart] Deprecated: please use DragSelect.subscribe('onDragStart', onDragStart) instead\n   * @property {DSCallback} [onElementSelect] Deprecated: please use DragSelect.subscribe('onElementSelect', onElementSelect) instead\n   * @property {DSCallback} [onElementUnselect] Deprecated: please use DragSelect.subscribe('onElementUnselect', onElementUnselect) instead\n   */\n\n  /**\n   * The Object that is passed back to any callback method\n   * @typedef {Object} CallbackObject\n   * @property {Array<HTMLElement|SVGElement|any>} [items] The items currently selected\n   * @property {MouseEvent|TouchEvent|KeyboardEvent|Event} [event] The respective event object\n   * @property {HTMLElement|SVGElement|any} [item] The single item currently interacted with\n   * @property {boolean} [isDragging] Whether the interaction is a drag or a select\n   * @property {boolean} [isDraggingKeyboard] Whether or not the drag interaction is via keyboard\n   * @property {string} [key] Pressed key (lowercase)\n   * @property {Array.<'top'|'bottom'|'left'|'right'|undefined>} [scroll_directions]\n   * @property {number} [scroll_multiplier]\n   */\n\n  /**\n   * @typedef {function} DSCallback\n   * @param {CallbackObject} data\n   */\n\n  /** @typedef {{x: number, y: number}} Vect2 */\n\n  /** @typedef {{x:number,y:number,w:number,h:number,r:number,b:number}} DSElementPos */\n\n  /** @typedef {Array.<'top'|'bottom'|'left'|'right'|undefined>} DSEdges */\n\n  /** @typedef {HTMLElement|SVGElement|HTMLDocument} DSArea area within which you can drag */\n\n  /** @typedef {HTMLElement} DSSelectorArea area in which you can drag */\n\n  /** @typedef {Array.<HTMLElement|SVGElement> | HTMLElement | SVGElement} DSInputElements the elements that can be selected */\n\n  /** @typedef {Array.<HTMLElement|SVGElement>} DSElements the elements that can be selected */\n\n  /** @typedef {HTMLElement|SVGElement} DSElement a single element that can be selected */\n\n  /** @typedef {MouseEvent|TouchEvent} DSEvent en event from a touch or mouse interaction */\n\n  /** @typedef {Array.<'Shift'|'Control'|'Meta'|string>} DSMultiSelectKeys An array of keys that allows switching to the multi-select mode */\n\n  /** @typedef {'dragmove'|'autoscroll'|'dragstart'|'elementselect'|'elementunselect'|'callback'} DSEventNames */\n\n  /** @typedef {'Interaction:init'|'Interaction:start'|'Interaction:end'|'Interaction:update'|'Area:modified'|'Area:scroll'|'PointerStore:updated'|'Selected:added'|'Selected:removed'|'Selectable:click'|'Selectable:pointer'|'KeyStore:down'|'KeyStore:up'} DSInternalEventNames */\n\n  /** @typedef {'Interaction:init:pre'|'Interaction:start:pre'|'Interaction:end:pre'|'Interaction:update:pre'|'Area:modified:pre'|'Area:scroll:pre'|'PointerStore:updated:pre'|'Selected:added:pre'|'Selected:removed:pre'|'Selectable:click:pre'|'Selectable:pointer:pre'|'KeyStore:down:pre'|'KeyStore:up:pre'|'Drag:keyboardDrag:pre'} DSInternalEventNamesPre */\n\n  /** @typedef {DSEventNames|DSInternalEventNames} DSCallbackNames the name of the callback */\n\n  /** @typedef {{top:number,left:number,bottom:number,right:number,width:number,height:number}} DSBoundingRect */\n\n  /** @typedef {{up:string[],down:string[],left:string[],right:string[]}} DSDragKeys */\n\n  /**\n   * @callback DSModificationCallback\n   * @param {*} event\n   */\n\n  // @ts-check\n  /**\n   * @param {Vect2} v1\n   * @param {'+'|'-'|'*'|'/'} operator\n   * @param {Vect2} v2\n   * @return {Vect2}\n   */\n\n  var calc = function calc(_ref, operator, _ref2) {\n    var x1 = _ref.x,\n        y1 = _ref.y;\n    var x2 = _ref2.x,\n        y2 = _ref2.y;\n    var calculations = {\n      '+': {\n        x: x1 + x2,\n        y: y1 + y2\n      },\n      '-': {\n        x: x1 - x2,\n        y: y1 - y2\n      },\n      '*': {\n        x: x1 * x2,\n        y: y1 * y2\n      },\n      '/': {\n        x: x1 / x2,\n        y: y1 / y2\n      }\n    };\n    return calculations[operator];\n  };\n  /**\n   * @param {{left:number,top:number}} rect\n   * @returns {Vect2}\n   */\n\n  var rect2vect = function rect2vect(rect) {\n    return {\n      x: rect.left,\n      y: rect.top\n    };\n  };\n  /**\n   * @param {Vect2} vect\n   * @param {number} dimension\n   * @returns {DSBoundingRect}\n   */\n\n  var vect2rect = function vect2rect(vect) {\n    var dimension = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return {\n      left: vect.x,\n      top: vect.y,\n      right: vect.x,\n      bottom: vect.y,\n      width: dimension,\n      height: dimension\n    };\n  };\n  /**\n   * @param {number} n\n   * @returns {Vect2}\n   */\n\n  var num2vect = function num2vect(n) {\n    return {\n      x: n,\n      y: n\n    };\n  };\n\n  // @ts-check\n  /**\n   * Adds event-listeners to the selectorArea\n   * @param {DSArea[]} nodes\n   * @param {DSModificationCallback} callback\n   * @param {MutationObserver} modificationObserver\n   */\n\n  var addModificationObservers = (function (nodes, callback, modificationObserver) {\n    window.addEventListener('resize', callback);\n    window.addEventListener('scroll', callback);\n    nodes.forEach(function (el, i) {\n      modificationObserver.observe(el, {\n        childList: i !== 0,\n        attributes: true\n      });\n    });\n  });\n\n  // @ts-check\n  /**\n   * Checks whether the area can scroll or not\n   * @param {DSArea} area\n   * @return {boolean} scroll X/Y\n   */\n\n  var canScroll = (function (area) {\n    var scroll = getCurrentScroll(area);\n    if (scroll.x || scroll.y) return true;\n\n    if (area instanceof HTMLDocument) {\n      if (area.body) return !!(area.body.scrollTop = 1);else return !!(area.documentElement.scrollTop = 1);\n    }\n\n    return !!(area.scrollTop = 1);\n  });\n\n  // @ts-check\n  /**\n   * Creates the SelectorArea\n   * @param {string} selectorAreaClass\n   * @return {HTMLDivElement}\n   */\n\n  var createSelectorAreaElement = (function (selectorAreaClass) {\n    var node = document.createElement('div');\n    node.style.position = 'fixed';\n    node.style.overflow = 'hidden';\n    node.style.pointerEvents = 'none';\n    node.style.zIndex = '999999999999999999';\n    node.classList.add(selectorAreaClass);\n    return node;\n  });\n\n  // @ts-check\n  /**\n   * Create the selector node\n   * @param {boolean} customStyles\n   * @return {HTMLElement}\n   */\n\n  var createSelectorElement = (function (customStyles) {\n    var selector = document.createElement('div');\n    selector.style.position = 'absolute';\n\n    if (!customStyles) {\n      selector.style.background = 'rgba(0, 0, 255, 0.1)';\n      selector.style.border = '1px solid rgba(0, 0, 255, 0.45)';\n      selector.style.display = 'none';\n      selector.style.pointerEvents = 'none'; // fix for issue #8 (ie11+)\n    }\n\n    return selector;\n  });\n\n  // @ts-check\n  /**\n   * Returns a function, that, as long as it continues to be invoked, will not\n   * be triggered. The function will be called after it stops being called for\n   * `wait` milliseconds. All credits to [Trey Huffine]{@link https://levelup.gitconnected.com/debounce-in-javascript-improve-your-applications-performance-5b01855e086}\n   * @param {*} func\n   * @param {number} wait\n   * @returns {DSModificationCallback}\n   */\n\n  var debounce = (function (func, wait) {\n    var timeout; // This is the function that is returned and will be executed many times\n    // We spread (...args) to capture any number of parameters we want to pass\n\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // The callback function to be executed after\n      // the debounce time has elapsed\n      var later = function later() {\n        // null timeout to indicate the debounce ended\n        timeout = null; // Execute the callback\n\n        func.apply(void 0, args);\n      }; // This will reset the waiting every function execution.\n      // This is the step that prevents the function from\n      // being executed because it will never reach the\n      // inside of the previous setTimeout\n\n\n      clearTimeout(timeout); // Restart the debounce waiting period.\n      // setTimeout returns a truthy value (it differs in web vs Node)\n\n      timeout = setTimeout(later, wait);\n    };\n  });\n\n  // @ts-check\n  var documentScroll = (function () {\n    var _document$body, _document$documentEle, _document$body2, _document$documentEle2;\n\n    return {\n      y: ((_document$body = document.body) === null || _document$body === void 0 ? void 0 : _document$body.scrollTop) || ((_document$documentEle = document.documentElement) === null || _document$documentEle === void 0 ? void 0 : _document$documentEle.scrollTop) || 0,\n      x: ((_document$body2 = document.body) === null || _document$body2 === void 0 ? void 0 : _document$body2.scrollLeft) || ((_document$documentEle2 = document.documentElement) === null || _document$documentEle2 === void 0 ? void 0 : _document$documentEle2.scrollLeft) || 0\n    };\n  });\n\n  // @ts-check\n  /**\n   * Returns the top/left/bottom/right/width/height\n   * values of an area. If area is document then everything\n   * except the sizes will be nulled.\n   * @param {DSArea} area\n   * @param {number} zoom\n   * @returns {DSBoundingRect}\n   */\n\n  var getAreaRect = (function (area, zoom) {\n    if (area instanceof Document) return {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    var rect = area.getBoundingClientRect();\n    return {\n      top: rect.top,\n      left: rect.left,\n      bottom: rect.bottom,\n      right: rect.right,\n      width: (area.clientWidth || rect.width) * zoom,\n      height: (area.clientHeight || rect.height) * zoom\n    };\n  });\n\n  // @ts-check\n  /**\n   * @param {DSArea} [area]\n   * @return {Vect2} scroll X/Y\n   */\n\n  var getCurrentScroll = (function (area) {\n    if (!area || area instanceof Document) return documentScroll();\n    return {\n      x: area.scrollLeft >= 0 ? area.scrollLeft : documentScroll().x,\n      y: area.scrollTop >= 0 ? area.scrollTop : documentScroll().y\n    };\n  });\n\n  // @ts-check\n  /**\n   * Returns the edges that an element is overflowing\n   * @param {Object} p\n   * @param {DSBoundingRect} p.elementRect\n   * @param {DSBoundingRect} p.containerRect\n   * @param {Vect2} [p.tolerance]\n   * @returns {DSEdges}\n   */\n\n  var getOverflowEdges = (function (_ref) {\n    var elementRect = _ref.elementRect,\n        containerRect = _ref.containerRect,\n        _ref$tolerance = _ref.tolerance,\n        tolerance = _ref$tolerance === void 0 ? {\n      x: 0,\n      y: 0\n    } : _ref$tolerance;\n    var edges = [];\n    if (elementRect.top - tolerance.y < containerRect.top) edges.push('top');\n    if (elementRect.left - tolerance.x < containerRect.left) edges.push('left');\n    if (elementRect.bottom + tolerance.y > containerRect.bottom) edges.push('bottom');\n    if (elementRect.right + tolerance.y > containerRect.right) edges.push('right');\n    return (\n      /** @type {DSEdges} */\n      edges\n    );\n  });\n\n  // @ts-check\n  /**\n   * Returns cursor x, y position based on event object\n   * @param {Object} p\n   * @param {MouseEvent|Touch} p.event\n   * @return {Vect2} cursor X/Y position\n   */\n\n  var getPointerPos = (function (_ref) {\n    var event = _ref.event;\n    return {\n      x: event.clientX,\n      y: event.clientY\n    };\n  });\n\n  // @ts-check\n  /**\n   * Reliably returns the exact x,y,w,h positions of the selector element\n   * @param {{ scrollAmount:Vect2, initialPointerPos:Vect2, pointerPos:Vect2 }} p\n   * @returns {{left:number,top:number,width:number,height:number}}\n   */\n\n  var getSelectorPosition = (function (_ref) {\n    var scrollAmount = _ref.scrollAmount,\n        initialPointerPos = _ref.initialPointerPos,\n        pointerPos = _ref.pointerPos;\n\n    /** check for direction\n     *\n     * This is quite complicated, so also quite complicated to explain. Lemme’ try:\n     *\n     * Problem #1:\n     * Sadly in HTML we can not have negative sizes.\n     * so if we want to scale our element 10px to the right then it is easy,\n     * we just have to add +10px to the width. But if we want to scale the element\n     * -10px to the left then things become more complicated, we have to move\n     * the element -10px to the left on the x axis and also scale the element\n     * by +10px width to fake a negative sizing.\n     *\n     * One solution to this problem is using css-transforms scale() with\n     * transform-origin of top left. BUT we can’t use this since it will size\n     * everything, then when your element has a border for example, the border will\n     * get inanely huge. Also transforms are not widely supported in IE.\n     *\n     * Example #1:\n     * Unfortunately, things get even more complicated when we are inside a scroll-able\n     * DIV. Then, let’s say we scroll to the right by 10px and move the cursor right by 5px in our\n     * checks we have to subtract 10px from the initialcursor position in our check\n     * (since the initial position is moved to the left by 10px) so in our example:\n     * 1. pointerPos.x (5) > initialPointerPos.x (0) - scrollAmount.x (10) === 5 > -10 === true\n     * then set the x position to the cursors start position\n     * selectorPos.x = initialPointerPos.x (0) - scrollAmount.x (10) === 10 // 2.\n     * then we can calculate the elements width, which is\n     * the new cursor position minus the initial one plus the scroll amount, so in our example:\n     * 3. selectorPos.w = pointerPos.x (5) - initialPointerPos.x (0) + scrollAmount.x (10) === 15;\n     *\n     * let’s say after that movement we now scroll 20px to the left and move our cursor by 30px to the left:\n     * 1b. pointerPos.x (-30) > initialPointerPos.x (0) - scrollAmount.x (-20) === -30 < --20 === -30 < +20 === false;\n     * 2b. selectorPos.x = pointerPos.x (-30) === -30; move left position to cursor (for more info see Problem #1)\n     * 3b. selectorPos.w = initialPointerPos.x (0) - pointerPos.x (-30) - scrollAmount.x (-20) === 0--30--20 === 0+30+20 === 50;  // scale width to original left position (for more info see Problem #1)\n     *\n     * same thing has to be done for top/bottom\n     *\n     * I hope that makes sense. Try stuff out and play around with variables to get a hang of it.\n     */\n    var selectorPos = {}; // right\n\n    if (pointerPos.x > initialPointerPos.x - scrollAmount.x) {\n      // 1.\n      selectorPos.left = initialPointerPos.x - scrollAmount.x; // 2.\n\n      selectorPos.width = pointerPos.x - initialPointerPos.x + scrollAmount.x; // 3.\n      // left\n    } else {\n      // 1b.\n      selectorPos.left = pointerPos.x; // 2b.\n\n      selectorPos.width = initialPointerPos.x - pointerPos.x - scrollAmount.x; // 3b.\n    } // bottom\n\n\n    if (pointerPos.y > initialPointerPos.y - scrollAmount.y) {\n      selectorPos.top = initialPointerPos.y - scrollAmount.y;\n      selectorPos.height = pointerPos.y - initialPointerPos.y + scrollAmount.y; // top\n    } else {\n      selectorPos.top = pointerPos.y;\n      selectorPos.height = initialPointerPos.y - pointerPos.y - scrollAmount.y;\n    }\n\n    return selectorPos;\n  });\n\n  // @ts-check\n  /**\n   * @param {DSElement} element\n   * @return {Vect2}\n   */\n\n  var getComputedTranslatePositions = function getComputedTranslatePositions(element) {\n    var position = {\n      x: 0,\n      y: 0\n    };\n    var computed = window.getComputedStyle(element);\n    if (!computed.transform || computed.transform === 'none') return position;\n\n    if (computed.transform.indexOf('3d') >= 0) {\n      var match = computed.transform.trim().match(/matrix3d\\((.*?)\\)/);\n\n      if (match && match.length) {\n        var _match$;\n\n        var values = (_match$ = match[1]) === null || _match$ === void 0 ? void 0 : _match$.split(',');\n        position.x = parseInt(values[12]) || 0;\n        position.y = parseInt(values[13]) || 0;\n      }\n\n      return position;\n    } else {\n      var _match = computed.transform.trim().match(/matrix\\((.*?)\\)/);\n\n      if (_match && _match.length) {\n        var _match$2;\n\n        var _values = (_match$2 = _match[1]) === null || _match$2 === void 0 ? void 0 : _match$2.split(',');\n\n        position.x = parseInt(_values[4]) || 0;\n        position.y = parseInt(_values[5]) || 0;\n      }\n\n      return position;\n    }\n  };\n  /**\n   * @param {DSElement} element\n   * @return {Vect2}\n   */\n\n\n  var getTranslatedPositions = function getTranslatedPositions(element) {\n    var transform = element.style.transform;\n    if (!transform || transform.indexOf('translate') < 0) return getComputedTranslatePositions(element);\n    var position = {\n      x: 0,\n      y: 0\n    };\n    var match = transform.trim().match(/translate[3dD]*?\\(.*?\\)/);\n\n    if (match) {\n      var _match$3;\n\n      var split = (_match$3 = match[0]) === null || _match$3 === void 0 ? void 0 : _match$3.split('(');\n\n      if (split) {\n        var _split$;\n\n        var values = (_split$ = split[1]) === null || _split$ === void 0 ? void 0 : _split$.split(',');\n        position.x = parseInt(values[0]) || 0;\n        position.y = parseInt(values[1]) || 0;\n      }\n    }\n\n    if (!position.x && !position.x) return getComputedTranslatePositions(element);\n    return position;\n  };\n  /**\n   * @param {DSElement} element\n   * @return {Vect2}\n   */\n\n\n  var getTopLeftPosition = function getTopLeftPosition(element) {\n    var style = element.style;\n    var position = {\n      x: parseInt(style.left) || 0,\n      y: parseInt(style.top) || 0\n    }; // initial positions\n\n    if (!position.x && !position.x) {\n      var computed = window.getComputedStyle(element);\n      return {\n        x: parseInt(computed.left) || 0,\n        y: parseInt(computed.top) || 0\n      };\n    }\n\n    return position;\n  };\n  /**\n   * Returns the X and Y coordinates based on styles\n   * Can handle translate and top/left\n   * @param {DSElement} element\n   * @param {boolean} [useTranslate]\n   * @return {Vect2}\n   */\n\n\n  var getStylePosition = (function (element, useTranslate) {\n    if (useTranslate) return getTranslatedPositions(element);else return getTopLeftPosition(element);\n  });\n\n  // @ts-check\n  /**\n   * pushes element back the overflow amount\n   * (top - top gives overflow, then new position pushed back by overflow)\n   * @param {Object} p\n   * @param {DSElement} p.element\n   * @param {DSEdges} p.edges\n   * @param {DSBoundingRect} p.elementRect\n   * @param {DSBoundingRect} p.containerRect\n   * @param {Vect2} p.elementPos\n   * @param {boolean} p.useTransform\n   */\n\n  var handleElementOverflow = (function (_ref) {\n    var element = _ref.element,\n        edges = _ref.edges,\n        elementRect = _ref.elementRect,\n        containerRect = _ref.containerRect,\n        elementPos = _ref.elementPos,\n        useTransform = _ref.useTransform;\n\n    if (edges.includes('top')) {\n      setStylePosition(element, {\n        y: elementPos.y + containerRect.top - elementRect.top,\n        x: elementPos.x\n      }, useTransform);\n    }\n\n    if (edges.includes('left')) {\n      setStylePosition(element, {\n        y: elementPos.y,\n        x: elementPos.x + containerRect.left - elementRect.left\n      }, useTransform);\n    }\n\n    if (edges.includes('bottom')) {\n      setStylePosition(element, {\n        y: elementPos.y + containerRect.bottom - elementRect.bottom,\n        x: elementPos.x\n      }, useTransform);\n    }\n\n    if (edges.includes('right')) {\n      setStylePosition(element, {\n        y: elementPos.y,\n        x: elementPos.x + containerRect.right - elementRect.right\n      }, useTransform);\n    }\n  });\n\n  // @ts-check\n  /**\n   * Fix: some elements have to have a special position attribute for calculations\n   * @param {Object} p\n   * @param {CSSStyleDeclaration} p.computedStyle\n   * @param {DSArea} p.node\n   */\n\n  var handleElementPositionAttribute = (function (_ref) {\n    var computedStyle = _ref.computedStyle,\n        node = _ref.node;\n    var position = computedStyle.position;\n    var isPositioned = position === 'absolute' || position === 'relative' || position === 'fixed';\n    if (!(node instanceof HTMLDocument) && !isPositioned) node.style.position = 'relative';\n  });\n\n  // @ts-check\n  /**\n   * @typedef {function} ScrollCallback\n   * @property {Array.<'top'|'bottom'|'left'|'right'|undefined>} directions\n   * @property {number} multiplier\n   */\n\n  /**\n   * @param {Object} p\n   * @param {string} p.key the keyboard key that was pressed\n   * @param {boolean} p.shiftKey\n   * @param {boolean} p.canScroll\n   * @param {number} p.keyboardDragSpeed\n   * @param {number} p.zoom\n   * @param {ScrollCallback} p.scrollCallback\n   * @param {Vect2} p.scrollDiff\n   * @param {DSDragKeys} p.dragKeys\n   * @returns {Vect2}\n   */\n\n  var handleKeyboardDragPosDifference = (function (_ref) {\n    var shiftKey = _ref.shiftKey,\n        keyboardDragSpeed = _ref.keyboardDragSpeed,\n        zoom = _ref.zoom,\n        key = _ref.key,\n        dragKeys = _ref.dragKeys,\n        scrollDiff = _ref.scrollDiff,\n        canScroll = _ref.canScroll,\n        scrollCallback = _ref.scrollCallback;\n    var posDirection = {\n      x: 0,\n      y: 0\n    };\n    var increase = shiftKey ? keyboardDragSpeed * 4 * zoom : keyboardDragSpeed * zoom;\n\n    if (dragKeys.left.includes(key)) {\n      posDirection.x = scrollDiff.x || -increase;\n      if (!shiftKey && !scrollDiff.x && canScroll) scrollCallback(['left'], keyboardDragSpeed);\n    }\n\n    if (dragKeys.right.includes(key)) {\n      posDirection.x = scrollDiff.x || increase;\n      if (!shiftKey && !scrollDiff.x && canScroll) scrollCallback(['right'], keyboardDragSpeed);\n    }\n\n    if (dragKeys.up.includes(key)) {\n      posDirection.y = scrollDiff.y || -increase;\n      if (!shiftKey && !scrollDiff.y && canScroll) scrollCallback(['top'], keyboardDragSpeed);\n    }\n\n    if (dragKeys.down.includes(key)) {\n      posDirection.y = scrollDiff.y || increase;\n      if (!shiftKey && !scrollDiff.y && canScroll) scrollCallback(['bottom'], keyboardDragSpeed);\n    }\n\n    return posDirection;\n  });\n\n  // @ts-check\n  /**\n   * Logic when an element is selected\n   * @param {Object} p\n   * @param {DSElement} p.element\n   * @param {boolean} p.force\n   * @param {boolean} p.multiSelectionToggle\n   * @param {Set} p.SelectedSet\n   * @param {string} p.hoverClassName\n   */\n\n  var handleSelection = (function (_ref) {\n    var element = _ref.element,\n        force = _ref.force,\n        multiSelectionToggle = _ref.multiSelectionToggle,\n        SelectedSet = _ref.SelectedSet,\n        hoverClassName = _ref.hoverClassName;\n    if (element.classList.contains(hoverClassName) && !force) return;\n    if (!SelectedSet.has(element)) SelectedSet.add(element);else if (multiSelectionToggle) SelectedSet[\"delete\"](element);\n    element.classList.add(hoverClassName);\n  });\n\n  // @ts-check\n  /**\n   * Logic when an element is de-selected\n   * @param {Object} p\n   * @param {DSElement} p.element\n   * @param {boolean} p.force\n   * @param {Set} p.SelectedSet\n   * @param {Set} p.PrevSelectedSet\n   * @param {string} p.hoverClassName\n   */\n\n  var handleUnSelection = (function (_ref) {\n    var element = _ref.element,\n        force = _ref.force,\n        SelectedSet = _ref.SelectedSet,\n        PrevSelectedSet = _ref.PrevSelectedSet,\n        hoverClassName = _ref.hoverClassName;\n    if (!element.classList.contains(hoverClassName) && !force) return false;\n    var inSelection = SelectedSet.has(element);\n    var inPrevSelection = PrevSelectedSet.has(element);\n    /**\n     * Special for issue #9.\n     * if a multi-select-key is pressed, ds 'remembers' the last selection and reverts\n     * to that state if the selection is not kept, to mimic the natural OS behaviour\n     * = if item was selected and is not in selection anymore, reselect it\n     * = if item was not selected and is not in selection anymore, unselect it\n     */\n\n    if (inSelection && !inPrevSelection) SelectedSet[\"delete\"](element);else if (!inSelection && inPrevSelection) SelectedSet.add(element);\n    element.classList.remove(hoverClassName);\n  });\n\n  // @ts-check\n  /**\n   * Axis-Aligned Bounding Box Collision Detection.\n   * Imagine following Example:\n   *\n   *\n   *        b01\n   *     a01[1]a02\n   *        b02      b11\n   *              a11[2]a12\n   *                 b12\n   *\n   *\n   * to check if those two boxes collide we do this AABB calculation:\n   * 1. a01 < a12 (left border pos box1 smaller than right border pos box2)\n   * 2. a02 > a11 (right border pos box1 larger than left border pos box2)\n   * 3. b01 < b12 (top border pos box1 smaller than bottom border pos box2)\n   * 4. b02 > b11 (bottom border pos box1 larger than top border pos box2)\n   * {@link https://en.wikipedia.org/wiki/Minimum_bounding_box#Axis-aligned_minimum_bounding_box Wikipedia}\n   * {@link https://developer.mozilla.org/en-US/docs/Games/Techniques/2D_collision_detection MDN}\n   * @param {{left:number,right:number,top:number,bottom:number}} el1\n   * @param {{left:number,right:number,top:number,bottom:number}} el2\n   * @returns {boolean}\n   */\n\n  var isCollision = (function (el1, el2) {\n    if (el1.left < el2.right && // 1.\n    el1.right > el2.left && // 2.\n    el1.top < el2.bottom && // 3.\n    el1.bottom > el2.top // 4.\n    ) return true; // collision detected!\n    else return false;\n  });\n\n  // @ts-check\n  /**\n   * Moves the element in a posDirection\n   * @param {Object} p\n   * @param {DSElement} p.element\n   * @param {Vect2} p.posDirection\n   * @param {DSBoundingRect} p.containerRect\n   * @param {boolean} p.useTransform\n   */\n\n  var moveElement = (function (_ref) {\n    var element = _ref.element,\n        posDirection = _ref.posDirection,\n        containerRect = _ref.containerRect,\n        useTransform = _ref.useTransform;\n    var elementPos = getStylePosition(element, useTransform);\n    var newPos = calc(elementPos, '+', posDirection);\n    setStylePosition(element, newPos, useTransform);\n    var elementRect = element.getBoundingClientRect();\n    var edges = getOverflowEdges({\n      elementRect: elementRect,\n      containerRect: containerRect\n    });\n    handleElementOverflow({\n      element: element,\n      edges: edges,\n      elementRect: elementRect,\n      containerRect: containerRect,\n      elementPos: newPos,\n      useTransform: useTransform\n    });\n  });\n\n  // @ts-check\n  /**\n   * Removes event-listeners to the selectorArea\n   * @param {MutationObserver} modificationObserver\n   * @param {DSModificationCallback} callback\n   */\n\n  var removeModificationObservers = (function (modificationObserver, callback) {\n    window.removeEventListener('resize', callback);\n    window.removeEventListener('scroll', callback);\n    modificationObserver.disconnect();\n  });\n\n  // @ts-check\n  /**\n   * Scroll the element in the specified direction\n   * @param {DSArea} element\n   * @param {Array.<'top'|'bottom'|'left'|'right'|undefined>} directions\n   * @param {number} multiplier\n   */\n\n  var scrollElement = (function (element, directions, multiplier) {\n    if (!directions.length) return;\n    var docEl = document && document.documentElement && document.documentElement.scrollTop && document.documentElement;\n\n    var _element = element instanceof HTMLDocument ? docEl || document.body : element;\n\n    var scrollTop = directions.includes('top') && _element.scrollTop > 0;\n\n    var scrollBot = directions.includes('bottom') && _element.scrollTop < _element.scrollHeight;\n\n    var scrollLeft = directions.includes('left') && _element.scrollLeft > 0;\n\n    var scrollRight = directions.includes('right') && _element.scrollLeft < _element.scrollWidth;\n\n    if (scrollTop) _element.scrollTop -= 1 * multiplier;\n    if (scrollBot) _element.scrollTop += 1 * multiplier;\n    if (scrollLeft) _element.scrollLeft -= 1 * multiplier;\n    if (scrollRight) _element.scrollLeft += 1 * multiplier;\n  });\n\n  // @ts-check\n  /**\n   * Sets the style position to the X and Y coordinates\n   * Can handle translate and top/left\n   * @param {DSElement} element\n   * @param {Vect2} values\n   * @param {boolean} [useTranslate]\n   * @return {DSElement}\n   */\n\n  var setStylePosition = (function (element, values, useTranslate) {\n    if (useTranslate) {\n      var prevTransform = element.style.transform;\n      element.style.transform = \"translate3d(\".concat(values.x, \"px,\").concat(values.y, \"px,1px) \").concat(prevTransform.replace(/translate.*?\\)/g, ''));\n    } else {\n      element.style.left = \"\".concat(values.x, \"px\");\n      element.style.top = \"\".concat(values.y, \"px\");\n    }\n\n    return element;\n  });\n\n  /**\n   * @typedef {function} DSSubscribe\n   * @param {DSCallbackNames} eventName\n   * @param {DSCallback} callback\n   * @returns {number} event id, can be used to unsubscribe more efficiently\n   */\n\n  /**\n   * @typedef {function} DSPublish\n   * @param {DSCallbackNames} eventName\n   * @param {CallbackObject} data passed to the subscription method\n   */\n\n  /**\n   * Maps internal events to external ones\n   *\n   * @param {Object} p\n   * @param {DSSubscribe} p.subscribe\n   * @param {DSPublish} p.publish\n   * @param {Interaction} p.Interaction\n   * @param {SelectedSet} p.SelectedSet\n   */\n\n  var subscriberAliases = (function (_ref) {\n    var subscribe = _ref.subscribe,\n        publish = _ref.publish,\n        Interaction = _ref.Interaction,\n        SelectedSet = _ref.SelectedSet;\n    var mapping = {\n      'Selected:added': [{\n        name: 'elementselect'\n      }],\n      'Selected:removed': [{\n        name: 'elementunselect'\n      }],\n      'Area:scroll': [{\n        name: 'autoscroll'\n      }],\n      // scroll_directions, scroll_multiplier\n      'Interaction:start': [{\n        name: 'dragstart'\n      }],\n      // event, isDraggingKeyboard\n      'Interaction:update': [{\n        name: 'dragmove',\n        condition: function condition(data) {\n          return data.event;\n        }\n      }],\n      // event, isDraggingKeyboard\n      'Interaction:end': [{\n        name: 'callback'\n      }],\n      // event, isDraggingKeyboard\n      'Drag:keyboardDrag': [{\n        name: 'dragstart'\n      }, {\n        name: 'dragmove'\n      }] // event, isDraggingKeyboard\n\n    };\n\n    var _loop = function _loop() {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          sub_name = _Object$entries$_i[0],\n          pubs = _Object$entries$_i[1];\n\n      ['pre', false].forEach(function (filler) {\n        return subscribe(filler ? \"\".concat(sub_name, \":\").concat(filler) : sub_name, function (data) {\n          return pubs.forEach(function (pub) {\n            return (!pub.condition || pub.condition(data)) && publish(filler ? \"\".concat(filler).concat(pub.name) : pub.name, _objectSpread2({\n              items: SelectedSet.elements,\n              isDragging: Interaction.isDragging\n            }, data));\n          });\n        });\n      });\n    };\n\n    for (var _i = 0, _Object$entries = Object.entries(mapping); _i < _Object$entries.length; _i++) {\n      _loop();\n    }\n  });\n\n  /**\n   * Transforms any list or single item to an array so user doesn’t have to care.\n   * @param {DSInputElements} items a single item, a Node-list or any element group\n   * @return {DSElements}\n   */\n\n  var toArray = (function (items) {\n    if (!items) return [];\n    if (!Array.isArray(items) && (items instanceof HTMLElement || items instanceof SVGElement)) return [items];\n    return _toConsumableArray(items);\n  });\n\n  // @ts-check\n  /**\n   * Updates element style left, top, width, height values\n   * according to pos input object.\n   * @param {HTMLElement} element\n   * @param {{left:number,top:number,width:number,height:number}} pos\n   */\n\n  var updateElementStylePos = (function (element, pos) {\n    element.style.left = \"\".concat(pos.left, \"px\");\n    element.style.top = \"\".concat(pos.top, \"px\");\n    element.style.width = \"\".concat(pos.width, \"px\");\n    element.style.height = \"\".concat(pos.height, \"px\");\n  });\n\n  var Area = /*#__PURE__*/function () {\n    /**\n     * @type {DSModificationCallback}\n     * @private\n     */\n\n    /**\n     * @type {MutationObserver}\n     * @private\n     */\n\n    /**\n     * @type {number}\n     * @private\n     */\n\n    /**\n     * @type {DSArea}\n     * @private\n     */\n\n    /**\n     * @type {DSArea[]}\n     * @private\n     */\n\n    /**\n     * @type {CSSStyleDeclaration}\n     * @private\n     * */\n\n    /**\n     * @type {{top:number,bottom:number,left:number,right:number}}\n     * @private\n     * */\n\n    /**\n     * @type {DSBoundingRect}\n     * @private\n     * */\n\n    /**\n     * @constructor Area\n     * @param {Object} obj\n     * @param {DSArea} obj.area\n     * @param {PubSub} obj.PS\n     * @param {number} obj.zoom\n     * @ignore\n     */\n    function Area(_ref) {\n      var _this = this;\n\n      var area = _ref.area,\n          PS = _ref.PS,\n          zoom = _ref.zoom;\n\n      _classCallCheck(this, Area);\n\n      _defineProperty(this, \"_modificationCallback\", void 0);\n\n      _defineProperty(this, \"_modificationObserver\", void 0);\n\n      _defineProperty(this, \"_zoom\", void 0);\n\n      _defineProperty(this, \"_node\", void 0);\n\n      _defineProperty(this, \"_parentNodes\", void 0);\n\n      _defineProperty(this, \"_computedStyle\", void 0);\n\n      _defineProperty(this, \"_computedBorder\", void 0);\n\n      _defineProperty(this, \"_rect\", void 0);\n\n      _defineProperty(this, \"start\", function () {\n        addModificationObservers(_this.parentNodes, _this._modificationCallback, _this._modificationObserver);\n      });\n\n      _defineProperty(this, \"reset\", function () {\n        _this._computedStyle = undefined;\n        _this._rect = undefined;\n        _this._computedBorder = undefined;\n        _this._parentNodes = undefined;\n      });\n\n      _defineProperty(this, \"stop\", function () {\n        removeModificationObservers(_this._modificationObserver, _this._modificationCallback);\n\n        _this.reset();\n      });\n\n      _defineProperty(this, \"scroll\", function (directions, multiplier) {\n        scrollElement(_this._node, directions, multiplier);\n\n        _this.PubSub.publish('Area:scroll', {\n          scroll_directions: directions,\n          scroll_multiplier: multiplier\n        });\n      });\n\n      this._node = area;\n      this._zoom = zoom;\n      this.PubSub = PS;\n      handleElementPositionAttribute({\n        computedStyle: this.computedStyle,\n        node: this._node\n      });\n      this._modificationCallback = debounce(function (event) {\n        _this.reset();\n\n        _this.PubSub.publish('Area:modified', {\n          event: event,\n          item: _this\n        });\n      }, 60);\n      this._modificationObserver = new MutationObserver(this._modificationCallback); // first immediate debounce to update values after dom-update\n\n      setTimeout(function () {\n        _this.reset();\n\n        _this.PubSub.publish('Area:modified', {\n          event: event,\n          item: _this\n        });\n      });\n      this.PubSub.subscribe('Interaction:init', this.start);\n      this.PubSub.subscribe('Interaction:end', this.reset);\n    }\n\n    _createClass(Area, [{\n      key: \"HTMLNode\",\n      //////////////////////////////////////////////////////////////////////////////////////\n      // Node Getters\n      get: function get() {\n        return (\n          /** @type {DSArea} */\n          this._node\n        );\n      }\n      /**\n       * The computed border from the element (caches result)\n       * @type {{top:number,bottom:number,left:number,right:number}}\n       */\n\n    }, {\n      key: \"computedBorder\",\n      get: function get() {\n        if (this._computedBorder) return this._computedBorder;\n        return {\n          top: parseInt(this.computedStyle.borderTopWidth),\n          bottom: parseInt(this.computedStyle.borderBottomWidth),\n          left: parseInt(this.computedStyle.borderLeftWidth),\n          right: parseInt(this.computedStyle.borderRightWidth)\n        };\n      }\n      /**\n       * The computed styles from the element (caches result)\n       * @type {CSSStyleDeclaration}\n       */\n\n    }, {\n      key: \"computedStyle\",\n      get: function get() {\n        if (this._computedStyle) return this._computedStyle;\n        if (this.HTMLNode instanceof HTMLDocument) return this._computedStyle = window.getComputedStyle(this.HTMLNode.body || this.HTMLNode.documentElement);else return this._computedStyle = window.getComputedStyle(this.HTMLNode);\n      }\n      /**\n       * The element rect (caches result) (without scrollbar or borders)\n       * @type {DSBoundingRect}\n       */\n\n    }, {\n      key: \"rect\",\n      get: function get() {\n        if (this._rect) return this._rect;\n        return this._rect = getAreaRect(this.HTMLNode, this._zoom);\n      }\n    }, {\n      key: \"parentNodes\",\n      get: function get() {\n        if (this._parentNodes) return this._parentNodes;\n\n        var traverse = function traverse(toWatch) {\n          var _toWatch$index;\n\n          var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          var parent = (_toWatch$index = toWatch[index]) === null || _toWatch$index === void 0 ? void 0 : _toWatch$index.parentNode;\n\n          if (parent) {\n            toWatch.push(parent);\n            index++;\n            return traverse(toWatch, index);\n          } else {\n            return toWatch;\n          }\n        };\n\n        this._parentNodes = traverse([this.HTMLNode]);\n        return this._parentNodes;\n      }\n    }]);\n\n    return Area;\n  }();\n\n  var Drag = /*#__PURE__*/function () {\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    /**\n     * @type {Vect2}\n     * @private\n     */\n\n    /**\n     * @type {Vect2}\n     * @private\n     */\n\n    /**\n     * @type {DSElements}\n     * @private\n     */\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    /**\n     * @type {DSDragKeys}\n     * @private\n     */\n\n    /**\n     * @type {string[]}\n     * @private\n     */\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    /**\n     * @type {number}\n     * @private\n     */\n\n    /**\n     * @type {number}\n     * @private\n     */\n\n    /**\n     * @param {Object} p\n     * @param {DragSelect} p.DS\n     * @param {boolean} p.draggability\n     * @param {boolean} p.useTransform\n     * @param {DSDragKeys} p.dragKeys\n     * @param {boolean} p.keyboardDrag\n     * @param {number} p.keyboardDragSpeed\n     * @param {number} p.zoom\n     * @ignore\n     */\n    function Drag(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS,\n          dragKeys = _ref.dragKeys,\n          draggability = _ref.draggability,\n          keyboardDrag = _ref.keyboardDrag,\n          keyboardDragSpeed = _ref.keyboardDragSpeed,\n          useTransform = _ref.useTransform,\n          zoom = _ref.zoom;\n\n      _classCallCheck(this, Drag);\n\n      _defineProperty(this, \"_useTransform\", void 0);\n\n      _defineProperty(this, \"_prevCursorPos\", void 0);\n\n      _defineProperty(this, \"_prevScrollPos\", void 0);\n\n      _defineProperty(this, \"_elements\", []);\n\n      _defineProperty(this, \"_draggability\", void 0);\n\n      _defineProperty(this, \"_dragKeys\", void 0);\n\n      _defineProperty(this, \"_dragKeysFlat\", void 0);\n\n      _defineProperty(this, \"_keyboardDrag\", void 0);\n\n      _defineProperty(this, \"_keyboardDragSpeed\", void 0);\n\n      _defineProperty(this, \"_zoom\", void 0);\n\n      _defineProperty(this, \"keyboardDrag\", function (_ref2) {\n        var event = _ref2.event,\n            key = _ref2.key;\n        if (!_this._keyboardDrag || !_this._dragKeysFlat.includes(key) || !_this.DS.SelectedSet.size || !_this._draggability || _this.DS[\"continue\"]) return;\n\n        _this.DS.publish('Interaction:start', {\n          event: event,\n          isDragging: true,\n          isDraggingKeyboard: true\n        });\n\n        _this._elements = _this.DS.getSelection();\n\n        _this.handleZIndex(true);\n\n        var posDirection = handleKeyboardDragPosDifference({\n          shiftKey: _this.DS.stores.KeyStore.currentValues.includes('shift'),\n          keyboardDragSpeed: _this._keyboardDragSpeed,\n          zoom: _this._zoom,\n          key: key,\n          scrollCallback: _this.DS.Area.scroll,\n          scrollDiff: _this._scrollDiff,\n          canScroll: _this.DS.stores.ScrollStore.canScroll,\n          dragKeys: _this._dragKeys\n        });\n\n        _this._elements.forEach(function (element) {\n          return moveElement({\n            element: element,\n            posDirection: posDirection,\n            containerRect: _this.DS.SelectorArea.rect,\n            useTransform: _this._useTransform\n          });\n        });\n\n        _this.DS.publish('Interaction:update', {\n          event: event,\n          isDragging: true,\n          isDraggingKeyboard: true\n        });\n      });\n\n      _defineProperty(this, \"keyboardEnd\", function (_ref3) {\n        var event = _ref3.event,\n            key = _ref3.key;\n        if (!_this._keyboardDrag || !_this._dragKeysFlat.includes(key) || !_this.DS.SelectedSet.size || !_this._draggability) return;\n\n        _this.DS.publish('Interaction:end', {\n          event: event,\n          isDragging: _this._draggability,\n          isDraggingKeyboard: true\n        });\n      });\n\n      _defineProperty(this, \"start\", function (_ref4) {\n        var isDragging = _ref4.isDragging,\n            isDraggingKeyboard = _ref4.isDraggingKeyboard;\n        if (!isDragging || isDraggingKeyboard) return;\n        _this._prevCursorPos = null;\n        _this._prevScrollPos = null;\n        _this._elements = _this.DS.getSelection();\n\n        _this.handleZIndex(true);\n      });\n\n      _defineProperty(this, \"stop\", function (evt) {\n        if (evt !== null && evt !== void 0 && evt.isKeyboard) return;\n        _this._prevCursorPos = null;\n        _this._prevScrollPos = null;\n\n        _this.handleZIndex(false);\n\n        _this._elements = [];\n      });\n\n      _defineProperty(this, \"update\", function (_ref5) {\n        var isDragging = _ref5.isDragging,\n            isDraggingKeyboard = _ref5.isDraggingKeyboard;\n        if (!isDragging || !_this._elements.length || isDraggingKeyboard || _this.DS[\"continue\"]) return;\n        var posDirection = calc(_this._cursorDiff, '+', _this._scrollDiff);\n\n        _this._elements.forEach(function (element) {\n          return moveElement({\n            element: element,\n            posDirection: posDirection,\n            containerRect: _this.DS.SelectorArea.rect,\n            useTransform: _this._useTransform\n          });\n        });\n      });\n\n      _defineProperty(this, \"handleZIndex\", function (add) {\n        _this._elements.forEach(function (element) {\n          return element.style.zIndex = \"\".concat((parseInt(element.style.zIndex) || 0) + add ? 9999 : -9998);\n        });\n      });\n\n      this.DS = DS;\n      this._useTransform = useTransform;\n      this._keyboardDragSpeed = keyboardDragSpeed;\n      this._keyboardDrag = keyboardDrag;\n      this._zoom = zoom;\n      this._draggability = draggability;\n      this._dragKeys = {\n        up: dragKeys.up.map(function (k) {\n          return k.toLowerCase();\n        }),\n        down: dragKeys.down.map(function (k) {\n          return k.toLowerCase();\n        }),\n        left: dragKeys.left.map(function (k) {\n          return k.toLowerCase();\n        }),\n        right: dragKeys.right.map(function (k) {\n          return k.toLowerCase();\n        })\n      };\n      this._dragKeysFlat = [].concat(_toConsumableArray(this._dragKeys.up), _toConsumableArray(this._dragKeys.down), _toConsumableArray(this._dragKeys.left), _toConsumableArray(this._dragKeys.right));\n      this.DS.subscribe('Interaction:start', this.start);\n      this.DS.subscribe('Interaction:end', this.stop);\n      this.DS.subscribe('Interaction:update', this.update);\n      this.DS.subscribe('KeyStore:down', this.keyboardDrag);\n      this.DS.subscribe('KeyStore:up', this.keyboardEnd);\n    }\n\n    _createClass(Drag, [{\n      key: \"_cursorDiff\",\n      get: function get() {\n        var currentPointerVal = this.DS.stores.PointerStore.currentVal;\n        var cursorDiff = this._prevCursorPos ? calc(currentPointerVal, '-', this._prevCursorPos) : {\n          x: 0,\n          y: 0\n        };\n        this._prevCursorPos = currentPointerVal;\n        return cursorDiff;\n      }\n    }, {\n      key: \"_scrollDiff\",\n      get: function get() {\n        var currentScrollVal = this.DS.stores.ScrollStore.currentVal;\n        var scrollDiff = this._prevScrollPos ? calc(currentScrollVal, '-', this._prevScrollPos) : {\n          x: 0,\n          y: 0\n        };\n        this._prevScrollPos = currentScrollVal;\n        return scrollDiff;\n      }\n    }]);\n\n    return Drag;\n  }();\n\n  var Interaction = /*#__PURE__*/function () {\n    /**\n     * @type {DSArea}\n     * @private\n     * */\n\n    /**\n     * @type {boolean}\n     * @private\n     * */\n\n    /**\n     * @type {boolean}\n     * @private\n     * */\n\n    /** @type {boolean} */\n\n    /** @type {boolean} */\n\n    /**\n     * @constructor Interaction\n     * @param {Object} obj\n     * @param {DSArea} obj.areaElement\n     * @param {boolean} obj.draggability\n     * @param {boolean} obj.immediateDrag\n     * @param {DragSelect} obj.DS\n     * @ignore\n     */\n    function Interaction(_ref) {\n      var _this = this;\n\n      var areaElement = _ref.areaElement,\n          DS = _ref.DS,\n          draggability = _ref.draggability,\n          immediateDrag = _ref.immediateDrag;\n\n      _classCallCheck(this, Interaction);\n\n      _defineProperty(this, \"_areaElement\", void 0);\n\n      _defineProperty(this, \"_draggability\", void 0);\n\n      _defineProperty(this, \"_immediateDrag\", void 0);\n\n      _defineProperty(this, \"isInteracting\", void 0);\n\n      _defineProperty(this, \"isDragging\", void 0);\n\n      _defineProperty(this, \"init\", function () {\n        _this.stop();\n\n        _this._areaElement.addEventListener('mousedown', _this.start);\n\n        _this._areaElement.addEventListener('touchstart', _this.start, {\n          passive: false\n        });\n\n        _this.DS.publish('Interaction:init', {});\n      });\n\n      _defineProperty(this, \"start\", function (event) {\n        if (event.type === 'touchstart') event.preventDefault(); // Call preventDefault() to prevent double click issue, see https://github.com/ThibaultJanBeyer/DragSelect/pull/29 & https://developer.mozilla.org/vi/docs/Web/API/Touch_events/Supporting_both_TouchEvent_and_MouseEvent\n\n        if (!_this._canInteract(event)) return;\n        _this.isInteracting = true;\n        _this.isDragging = _this.isDragEvent(event);\n\n        _this.DS.publish('Interaction:start', {\n          event: event,\n          isDragging: _this.isDragging\n        });\n\n        document.addEventListener('mouseup', _this.reset);\n        document.addEventListener('touchend', _this.reset);\n      });\n\n      _defineProperty(this, \"isDragEvent\", function (event) {\n        if (!_this._draggability || _this.DS.stores.KeyStore.isMultiSelectKeyPressed(event) || !_this.DS.SelectableSet.has(event.target)) return false;\n\n        if (_this._immediateDrag) {\n          if (!_this.DS.SelectedSet.size) _this.DS.SelectedSet.add(\n          /** @type {DSElement} */\n          event.target);else if (!_this.DS.SelectedSet.has(event.target)) {\n            _this.DS.SelectedSet.clear();\n\n            _this.DS.SelectedSet.add(\n            /** @type {DSElement} */\n            event.target);\n          }\n        }\n\n        if (_this.DS.SelectedSet.has(event.target)) return true;\n        return false;\n      });\n\n      _defineProperty(this, \"onClick\", function (_ref2) {\n        var event = _ref2.event;\n        if (!_this._canInteract(event)) return;\n        if (event.detail > 0) return; // mouse interaction\n\n        var _this$DS = _this.DS,\n            _this$DS$stores = _this$DS.stores,\n            PointerStore = _this$DS$stores.PointerStore,\n            KeyStore = _this$DS$stores.KeyStore,\n            SelectableSet = _this$DS.SelectableSet,\n            SelectedSet = _this$DS.SelectedSet,\n            publish = _this$DS.publish;\n        PointerStore.start(event);\n        var node =\n        /** @type {any} */\n        event.target;\n        if (!SelectableSet.has(node)) return;\n        if (!KeyStore.isMultiSelectKeyPressed(event)) SelectedSet.clear();\n        SelectedSet.toggle(node);\n        publish('Interaction:end', {\n          event: event,\n          isDragging: _this.isDragging\n        }); // simulate mouse-up (that does not exist on keyboard)\n      });\n\n      _defineProperty(this, \"stop\", function () {\n        _this.isInteracting = false;\n        _this.isDragging = false;\n\n        _this._areaElement.removeEventListener('mousedown', _this.start);\n\n        _this._areaElement.removeEventListener('touchstart', _this.start, {\n          // @ts-ignore\n          passive: false\n        });\n\n        document.removeEventListener('mouseup', _this.reset);\n        document.removeEventListener('touchend', _this.reset);\n      });\n\n      _defineProperty(this, \"update\", function (_ref3) {\n        var event = _ref3.event,\n            scroll_directions = _ref3.scroll_directions,\n            scroll_multiplier = _ref3.scroll_multiplier;\n        if (_this.isInteracting) _this.DS.publish('Interaction:update', {\n          event: event,\n          scroll_directions: scroll_directions,\n          scroll_multiplier: scroll_multiplier,\n          isDragging: _this.isDragging\n        });\n      });\n\n      _defineProperty(this, \"reset\", function (event) {\n        var isDragging = _this.isDragging;\n\n        _this.stop();\n\n        _this.init();\n\n        _this.DS.publish('Interaction:end', {\n          event: event,\n          isDragging: isDragging\n        });\n      });\n\n      this._areaElement = areaElement;\n      this._draggability = draggability;\n      this._immediateDrag = immediateDrag;\n      this.DS = DS;\n      this.DS.subscribe('PointerStore:updated', this.update);\n      this.DS.subscribe('Selectable:click', this.onClick);\n      this.DS.subscribe('Selectable:pointer', function (_ref4) {\n        var event = _ref4.event;\n        return _this.start(event);\n      });\n      this.DS.subscribe('Area:scroll', this.update);\n    }\n\n    _createClass(Interaction, [{\n      key: \"_canInteract\",\n\n      /**\n       * @param {DSEvent} event\n       */\n      value: function _canInteract(event) {\n        var isKeyboardClick =\n        /** @type {MouseEvent} */\n        event.clientX === 0 &&\n        /** @type {MouseEvent} */\n        event.clientY === 0 &&\n        /** @type {MouseEvent} */\n        event.detail === 0 && event.target;\n        if (\n        /** @type {MouseEvent} */\n        event.button === 2 || // right-clicks\n        this.isInteracting || // fix double-click issues\n        event.target && !this.DS.SelectorArea.isInside(\n        /** @type {DSElement} */\n        event.target) || //fix outside elements issue\n        !isKeyboardClick && !this.DS.SelectorArea.isClicked(event) // make sure the mouse click is inside the area\n        ) return false;\n        return true;\n      }\n      /**\n       * @param {DSEvent} event\n       */\n\n    }]);\n\n    return Interaction;\n  }();\n\n  var PubSub = function PubSub() {\n    var _this = this;\n\n    _classCallCheck(this, PubSub);\n\n    _defineProperty(this, \"subscribers\", {});\n\n    _defineProperty(this, \"subscribe\", function (eventName, callback) {\n      if (!Array.isArray(_this.subscribers[eventName])) _this.subscribers[eventName] = [];\n\n      _this.subscribers[eventName].push(callback);\n\n      return _this.subscribers[eventName].length - 1;\n    });\n\n    _defineProperty(this, \"unsubscribe\", function (eventName, callback, id) {\n      if (id >= 0) _this.subscribers[eventName].splice(id, 1);else if (callback) _this.subscribers[eventName] = _this.subscribers[eventName].filter(function (cb) {\n        return cb !== callback;\n      });\n    });\n\n    _defineProperty(this, \"publish\", function (eventName, data) {\n      var _this$subscribers$, _this$subscribers$eve;\n\n      if (!Array.isArray(_this.subscribers[eventName])) return;\n      (_this$subscribers$ = _this.subscribers[\"\".concat(eventName, \":pre\")]) === null || _this$subscribers$ === void 0 ? void 0 : _this$subscribers$.forEach(function (callback) {\n        return callback(data);\n      });\n      (_this$subscribers$eve = _this.subscribers[eventName]) === null || _this$subscribers$eve === void 0 ? void 0 : _this$subscribers$eve.forEach(function (callback) {\n        return callback(data);\n      });\n    });\n  };\n\n  var SelectableSet = /*#__PURE__*/function (_Set) {\n    _inherits(SelectableSet, _Set);\n\n    var _super = _createSuper(SelectableSet);\n\n    /**\n     * @type {DSElements}\n     * @private\n     * */\n\n    /**\n     * @type {string}\n     * @private\n     * */\n\n    /**\n     * @type {string}\n     * @private\n     * */\n\n    /**\n     * @type {boolean}\n     * @private\n     * */\n\n    /**\n     * @type {boolean}\n     * @private\n     * */\n\n    /**\n     * @constructor SelectableSet\n     * @param {Object} p\n     * @param {DSInputElements} p.elements\n     * @param {DragSelect} p.DS\n     * @param {string} p.className\n     * @param {string} p.hoverClassName\n     * @param {boolean} p.useTransform\n     * @param {boolean} p.draggability\n     * @ignore\n     */\n    function SelectableSet(_ref) {\n      var _this;\n\n      var _elements = _ref.elements,\n          className = _ref.className,\n          hoverClassName = _ref.hoverClassName,\n          draggability = _ref.draggability,\n          useTransform = _ref.useTransform,\n          DS = _ref.DS;\n\n      _classCallCheck(this, SelectableSet);\n\n      _this = _super.call(this);\n\n      _defineProperty(_assertThisInitialized(_this), \"_initElements\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"_className\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"_hoverClassName\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"_useTransform\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"_draggability\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"init\", function () {\n        return _this._initElements.forEach(function (el) {\n          return _this.add(el);\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n        return _this.forEach(function (el) {\n          return _this[\"delete\"](el);\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_onClick\", function (event) {\n        return _this.DS.publish('Selectable:click', {\n          event: event\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_onPointer\", function (event) {\n        return _this.DS.publish('Selectable:pointer', {\n          event: event\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"addAll\", function (elements) {\n        return elements.forEach(function (el) {\n          return _this.add(el);\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"deleteAll\", function (elements) {\n        return elements.forEach(function (el) {\n          return _this[\"delete\"](el);\n        });\n      });\n\n      _this.DS = DS;\n      _this._initElements = toArray(_elements);\n      _this._className = className;\n      _this._hoverClassName = hoverClassName;\n      _this._useTransform = useTransform;\n      _this._draggability = draggability;\n\n      _this.DS.subscribe('Interaction:init', _this.init);\n\n      return _this;\n    }\n\n    _createClass(SelectableSet, [{\n      key: \"add\",\n\n      /** @param {DSElement} element */\n      value: function add(element) {\n        element.classList.add(this._className);\n        element.addEventListener('click', this._onClick);\n        element.addEventListener('mousedown', this._onPointer);\n        element.addEventListener('touchstart', this._onPointer, {\n          // @ts-ignore\n          passive: false\n        });\n        if (this._draggability && !this._useTransform) handleElementPositionAttribute({\n          computedStyle: window.getComputedStyle(element),\n          node: element\n        });\n        return _get(_getPrototypeOf(SelectableSet.prototype), \"add\", this).call(this, element);\n      }\n      /** @param {DSElement} element */\n\n    }, {\n      key: \"delete\",\n      value: function _delete(element) {\n        element.classList.remove(this._className);\n        element.classList.remove(this._hoverClassName);\n        element.removeEventListener('click', this._onClick);\n        element.removeEventListener('mousedown', this._onPointer);\n        element.removeEventListener('touchstart', this._onPointer, {\n          // @ts-ignore\n          passive: false\n        });\n        return _get(_getPrototypeOf(SelectableSet.prototype), \"delete\", this).call(this, element);\n      }\n    }, {\n      key: \"elements\",\n\n      /** @return {DSElements} */\n      get: function get() {\n        return Array.from(this.values());\n      }\n    }]);\n\n    return SelectableSet;\n  }( /*#__PURE__*/_wrapNativeSuper(Set));\n\n  var SelectedSet = /*#__PURE__*/function (_Set) {\n    _inherits(SelectedSet, _Set);\n\n    var _super = _createSuper(SelectedSet);\n\n    /**\n     * @type {string}\n     * @private\n     * */\n\n    /**\n     * @constructor SelectableSet\n     * @param {Object} p\n     * @param {DragSelect} p.DS\n     * @param {string} p.className\n     * @ignore\n     */\n    function SelectedSet(_ref) {\n      var _this;\n\n      var className = _ref.className,\n          DS = _ref.DS;\n\n      _classCallCheck(this, SelectedSet);\n\n      _this = _super.call(this);\n\n      _defineProperty(_assertThisInitialized(_this), \"_className\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n        return _this.forEach(function (el) {\n          return _this[\"delete\"](el);\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"addAll\", function (elements) {\n        return elements.forEach(function (el) {\n          return _this.add(el);\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"deleteAll\", function (elements) {\n        return elements.forEach(function (el) {\n          return _this[\"delete\"](el);\n        });\n      });\n\n      _this.DS = DS;\n      _this._className = className;\n      return _this;\n    }\n    /** @param {DSElement} element */\n\n\n    _createClass(SelectedSet, [{\n      key: \"add\",\n      value: function add(element) {\n        if (_get(_getPrototypeOf(SelectedSet.prototype), \"has\", this).call(this, element)) return;\n\n        _get(_getPrototypeOf(SelectedSet.prototype), \"add\", this).call(this, element);\n\n        element.classList.add(this._className);\n        this.DS.publish('Selected:added', {\n          items: this.elements,\n          item: element\n        });\n        element.style.zIndex = \"\".concat((parseInt(element.style.zIndex) || 0) + 1);\n        return this;\n      }\n      /** @param {DSElement} element */\n\n    }, {\n      key: \"delete\",\n      value: function _delete(element) {\n        if (!_get(_getPrototypeOf(SelectedSet.prototype), \"has\", this).call(this, element)) return;\n\n        var deleted = _get(_getPrototypeOf(SelectedSet.prototype), \"delete\", this).call(this, element);\n\n        element.classList.remove(this._className);\n        this.DS.publish('Selected:removed', {\n          items: this.elements,\n          item: element\n        });\n        element.style.zIndex = \"\".concat((parseInt(element.style.zIndex) || 0) - 1);\n        return deleted;\n      }\n    }, {\n      key: \"toggle\",\n\n      /**\n       * Adds/Removes an element. If it is already selected = remove, if not = add.\n       * @param {DSElement} element\n       * @return {DSElement}\n       */\n      value: function toggle(element) {\n        if (this.has(element)) this[\"delete\"](element);else this.add(element);\n        return element;\n      }\n      /** @param {DSElements} elements */\n\n    }, {\n      key: \"elements\",\n\n      /** @return {DSElements} */\n      get: function get() {\n        return Array.from(this.values());\n      }\n    }]);\n\n    return SelectedSet;\n  }( /*#__PURE__*/_wrapNativeSuper(Set));\n\n  var Selection = /*#__PURE__*/function () {\n    /**\n     * @type {Set}\n     * @private\n     * */\n\n    /**\n     * @type {string}\n     * @private\n     * */\n\n    /**\n     * @type {boolean}\n     * @private\n     * */\n\n    /**\n     * @constructor Selection\n     * @param {{ DS:DragSelect, hoverClassName:string, multiSelectToggling:boolean }} p\n     * @ignore\n     */\n    function Selection(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS,\n          hoverClassName = _ref.hoverClassName,\n          multiSelectToggling = _ref.multiSelectToggling;\n\n      _classCallCheck(this, Selection);\n\n      _defineProperty(this, \"_prevSelectedSet\", void 0);\n\n      _defineProperty(this, \"_hoverClassName\", void 0);\n\n      _defineProperty(this, \"_multiSelectToggling\", void 0);\n\n      _defineProperty(this, \"start\", function (_ref2) {\n        var event = _ref2.event,\n            isDragging = _ref2.isDragging;\n        if (isDragging) return;\n\n        _this._storePrevious(event);\n\n        _this._handleInsideSelection(true, event);\n      });\n\n      _defineProperty(this, \"update\", function (_ref3) {\n        var isDragging = _ref3.isDragging;\n        if (isDragging || _this.DS[\"continue\"]) return;\n\n        _this._handleInsideSelection();\n      });\n\n      _defineProperty(this, \"_handleInsideSelection\", function (force, event) {\n        var _this$DS = _this.DS,\n            SelectableSet = _this$DS.SelectableSet,\n            SelectorArea = _this$DS.SelectorArea,\n            Selector = _this$DS.Selector;\n        /** @type {any} */\n\n        var elPosCombo = SelectableSet.elements.map(function (element) {\n          return [element, element.getBoundingClientRect()];\n        });\n        var select = [];\n        var unselect = [];\n\n        for (var i = 0, il = elPosCombo.length; i < il; i++) {\n          if (!SelectorArea.isInside(elPosCombo[i][0], elPosCombo[i][1])) continue;\n          if (isCollision(elPosCombo[i][1], Selector.rect)) select.push(elPosCombo[i][0]);else unselect.push(elPosCombo[i][0]);\n        }\n\n        var multiSelectionToggle = _this.DS.stores.KeyStore.isMultiSelectKeyPressed(event) && _this._multiSelectToggling;\n\n        select.forEach(function (element) {\n          return handleSelection({\n            element: element,\n            force: force,\n            multiSelectionToggle: multiSelectionToggle,\n            SelectedSet: _this.DS.SelectedSet,\n            hoverClassName: _this._hoverClassName\n          });\n        });\n        unselect.forEach(function (element) {\n          return handleUnSelection({\n            element: element,\n            force: force,\n            SelectedSet: _this.DS.SelectedSet,\n            hoverClassName: _this._hoverClassName,\n            PrevSelectedSet: _this._prevSelectedSet\n          });\n        });\n      });\n\n      this._hoverClassName = hoverClassName;\n      this._multiSelectToggling = multiSelectToggling;\n      this.DS = DS;\n      this.DS.subscribe('Interaction:start', this.start);\n      this.DS.subscribe('Interaction:update', this.update);\n    }\n    /**\n     * Stores the previous selection (solves #9)\n     * @param {DSEvent} event\n     * @private\n     * */\n\n\n    _createClass(Selection, [{\n      key: \"_storePrevious\",\n      value: function _storePrevious(event) {\n        var _this$DS2 = this.DS,\n            KeyStore = _this$DS2.stores.KeyStore,\n            SelectedSet = _this$DS2.SelectedSet;\n        if (KeyStore.isMultiSelectKeyPressed(event)) this._prevSelectedSet = new Set(SelectedSet);else this._prevSelectedSet = new Set();\n      }\n      /** @param {{event:DSEvent,isDragging:boolean}} event */\n\n    }]);\n\n    return Selection;\n  }();\n\n  var Selector = /*#__PURE__*/function () {\n    /**\n     * @type {DSBoundingRect}\n     * @private\n     */\n\n    /**\n     * @constructor Selector\n     * @param {Object} p\n     * @param {DragSelect} p.DS\n     * @param {HTMLElement} p.selector\n     * @param {string} p.selectorClass\n     * @param {boolean} p.customStyles\n     * @ignore\n     */\n    function Selector(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS,\n          selector = _ref.selector,\n          selectorClass = _ref.selectorClass,\n          customStyles = _ref.customStyles;\n\n      _classCallCheck(this, Selector);\n\n      _defineProperty(this, \"_rect\", void 0);\n\n      _defineProperty(this, \"start\", function (_ref2) {\n        var isDragging = _ref2.isDragging;\n        if (isDragging) return;\n        var PointerStore = _this.DS.stores.PointerStore;\n        var pPos = PointerStore.initialValArea;\n        updateElementStylePos(_this.HTMLNode, vect2rect(pPos, 1));\n        _this.HTMLNode.style.display = 'block';\n        _this._rect = null;\n      });\n\n      _defineProperty(this, \"stop\", function () {\n        _this.HTMLNode.style.width = '0';\n        _this.HTMLNode.style.height = '0';\n        _this.HTMLNode.style.display = 'none';\n      });\n\n      _defineProperty(this, \"update\", function (_ref3) {\n        var isDragging = _ref3.isDragging;\n        if (isDragging || _this.DS[\"continue\"]) return;\n        var _this$DS$stores = _this.DS.stores,\n            ScrollStore = _this$DS$stores.ScrollStore,\n            PointerStore = _this$DS$stores.PointerStore;\n        var pos = getSelectorPosition({\n          scrollAmount: ScrollStore.scrollAmount,\n          initialPointerPos: PointerStore.initialValArea,\n          pointerPos: PointerStore.currentValArea\n        });\n        updateElementStylePos(_this.HTMLNode, pos);\n        _this._rect = null;\n      });\n\n      this.DS = DS;\n      this.HTMLNode = selector || createSelectorElement(customStyles);\n      this.HTMLNode.classList.add(selectorClass);\n      this.DS.subscribe('Interaction:start', this.start);\n      this.DS.subscribe('Interaction:update', this.update);\n      this.DS.subscribe('Interaction:end', this.stop);\n    }\n\n    _createClass(Selector, [{\n      key: \"rect\",\n      get: function get() {\n        if (this._rect) return this._rect;\n        return this._rect = this.HTMLNode.getBoundingClientRect();\n      }\n    }]);\n\n    return Selector;\n  }();\n\n  var SelectorArea = /*#__PURE__*/function () {\n    /**\n     * @type {number}\n     * @private\n     * */\n\n    /**\n     * @type {*}\n     * @private\n     * */\n\n    /**\n     * @type {DSBoundingRect}\n     * @private\n     */\n\n    /**\n     * @type {DSEdges}\n     * @private\n     */\n\n    /**\n     * @type {Vect2}\n     * @private\n     */\n\n    /**\n     * @class SelectorArea\n     * @constructor SelectorArea\n     * @param {{ DS:DragSelect, selectorAreaClass:string, autoScrollSpeed:number, overflowTolerance:Vect2}} obj\n     * @ignore\n     */\n    function SelectorArea(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS,\n          selectorAreaClass = _ref.selectorAreaClass,\n          autoScrollSpeed = _ref.autoScrollSpeed,\n          overflowTolerance = _ref.overflowTolerance;\n\n      _classCallCheck(this, SelectorArea);\n\n      _defineProperty(this, \"_autoScrollSpeed\", void 0);\n\n      _defineProperty(this, \"_scrollInterval\", void 0);\n\n      _defineProperty(this, \"_rect\", void 0);\n\n      _defineProperty(this, \"currentEdges\", []);\n\n      _defineProperty(this, \"_overflowTolerance\", void 0);\n\n      _defineProperty(this, \"start\", function () {\n        return _this.applyElements('append');\n      });\n\n      _defineProperty(this, \"applyElements\", function () {\n        var method = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'append';\n        var docEl = document.body ? 'body' : 'documentElement';\n        var methodName = \"\".concat(method, \"Child\");\n\n        _this.HTMLNode[methodName](_this.DS.Selector.HTMLNode);\n\n        document[docEl][methodName](_this.HTMLNode);\n      });\n\n      _defineProperty(this, \"updatePos\", function () {\n        _this._rect = null;\n        var rect = _this.DS.Area.rect;\n        var border = _this.DS.Area.computedBorder;\n        var style = _this.HTMLNode.style;\n        var top = \"\".concat(rect.top + border.top, \"px\");\n        var left = \"\".concat(rect.left + border.left, \"px\");\n        var width = \"\".concat(rect.width, \"px\");\n        var height = \"\".concat(rect.height, \"px\");\n        if (style.top !== top) style.top = top;\n        if (style.left !== left) style.left = left;\n        if (style.width !== width) style.width = width;\n        if (style.height !== height) style.height = height;\n      });\n\n      _defineProperty(this, \"stop\", function (remove) {\n        _this.stopAutoScroll();\n\n        if (remove) _this.applyElements('remove');\n      });\n\n      _defineProperty(this, \"startAutoScroll\", function () {\n        _this.currentEdges = [];\n        _this._scrollInterval = setInterval(function () {\n          return _this.handleAutoScroll();\n        }, 16);\n      });\n\n      _defineProperty(this, \"handleAutoScroll\", function () {\n        if (_this.DS[\"continue\"]) return;\n        var _this$DS = _this.DS,\n            PointerStore = _this$DS.stores.PointerStore,\n            Area = _this$DS.Area;\n        _this.currentEdges = getOverflowEdges({\n          elementRect: vect2rect(PointerStore.currentVal),\n          containerRect: _this.rect,\n          tolerance: _this._overflowTolerance\n        });\n        if (_this.currentEdges.length) Area.scroll(_this.currentEdges, _this._autoScrollSpeed);\n      });\n\n      _defineProperty(this, \"stopAutoScroll\", function () {\n        _this.currentEdges = [];\n        clearInterval(_this._scrollInterval);\n      });\n\n      _defineProperty(this, \"isInside\", function (element, elementRect) {\n        if (_this.DS.Area.HTMLNode.contains(element) && _this.DS.stores.ScrollStore.canScroll) return true;\n        return isCollision(_this.rect, elementRect || element.getBoundingClientRect());\n      });\n\n      this._autoScrollSpeed = autoScrollSpeed;\n      this._overflowTolerance = overflowTolerance;\n      this.DS = DS;\n      this.HTMLNode = createSelectorAreaElement(selectorAreaClass);\n      this.DS.subscribe('Area:modified', this.updatePos);\n      this.DS.subscribe('Interaction:init', this.start);\n      this.DS.subscribe('Interaction:start', this.startAutoScroll);\n      this.DS.subscribe('Interaction:end', function () {\n        _this.updatePos();\n\n        _this.stopAutoScroll();\n      });\n    }\n\n    _createClass(SelectorArea, [{\n      key: \"isClicked\",\n\n      /**\n       * checks if the click was triggered on the area.\n       * @param {DSEvent} [event]\n       * @returns {boolean}\n       */\n      value: function isClicked(event) {\n        var PointerStore = this.DS.stores.PointerStore;\n        var initialVal = event ? PointerStore.getPointerPosition(event) : PointerStore.initialVal;\n        return isCollision({\n          left: initialVal.x,\n          top: initialVal.y,\n          right: initialVal.x,\n          bottom: initialVal.y\n        }, this.rect);\n      }\n    }, {\n      key: \"rect\",\n      get: function get() {\n        if (this._rect) return this._rect;\n        return this._rect = this.HTMLNode.getBoundingClientRect();\n      }\n    }]);\n\n    return SelectorArea;\n  }();\n\n  var KeyStore = /*#__PURE__*/function () {\n    /**\n     * @type {boolean}\n     * @private\n     * */\n\n    /**\n     * @type {DSMultiSelectKeys}\n     * @private\n     * */\n\n    /**\n     * @type {Set<string>}\n     * @private\n     * */\n\n    /**\n     * @type {{control:string,shift:string,meta:string}}\n     * @private\n     * */\n\n    /**\n     * @class KeyStore\n     * @constructor KeyStore\n     * @param {{DS:DragSelect,multiSelectKeys:DSMultiSelectKeys,multiSelectMode:boolean}} p\n     * @ignore\n     */\n    function KeyStore(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS,\n          multiSelectKeys = _ref.multiSelectKeys,\n          multiSelectMode = _ref.multiSelectMode;\n\n      _classCallCheck(this, KeyStore);\n\n      _defineProperty(this, \"_multiSelectMode\", void 0);\n\n      _defineProperty(this, \"_multiSelectKeys\", void 0);\n\n      _defineProperty(this, \"_currentValues\", new Set());\n\n      _defineProperty(this, \"_keyMapping\", {\n        control: 'ctrlKey',\n        shift: 'shiftKey',\n        meta: 'metaKey'\n      });\n\n      _defineProperty(this, \"init\", function () {\n        document.addEventListener('keydown', _this.keydown);\n        document.addEventListener('keyup', _this.keyup);\n        window.addEventListener('blur', _this.reset);\n      });\n\n      _defineProperty(this, \"keydown\", function (event) {\n        var key = event.key.toLowerCase();\n\n        _this._currentValues.add(key);\n\n        _this.DS.publish('KeyStore:down', {\n          event: event,\n          key: key\n        });\n      });\n\n      _defineProperty(this, \"keyup\", function (event) {\n        var key = event.key.toLowerCase();\n\n        _this._currentValues[\"delete\"](key);\n\n        _this.DS.publish('KeyStore:up', {\n          event: event,\n          key: key\n        });\n      });\n\n      _defineProperty(this, \"stop\", function () {\n        document.removeEventListener('keydown', _this.keydown);\n        document.removeEventListener('keyup', _this.reset);\n        window.removeEventListener('blur', _this.reset);\n\n        _this.reset();\n      });\n\n      _defineProperty(this, \"reset\", function () {\n        return _this._currentValues.clear();\n      });\n\n      this.DS = DS;\n      this._multiSelectMode = multiSelectMode; // @TODO: remove after deprecation\n\n      this._multiSelectKeys = multiSelectKeys.map(function (key) {\n        var deprecatedKeys = {\n          ctrlKey: 'Control',\n          shiftKey: 'Shift',\n          metaKey: 'Meta'\n        };\n        /** @type {string} */\n\n        var newName = deprecatedKeys[key];\n\n        if (newName) {\n          console.warn(\"[DragSelect] \".concat(key, \" is deprecated. Use \\\"\").concat(newName, \"\\\" instead. Act Now!. See docs for more info\"));\n          return newName.toLowerCase();\n        }\n\n        return key.toLowerCase();\n      });\n      this.DS.subscribe('Interaction:init', this.init);\n    }\n\n    _createClass(KeyStore, [{\n      key: \"isMultiSelectKeyPressed\",\n\n      /** @param {KeyboardEvent|MouseEvent|TouchEvent} [event] */\n      value: function isMultiSelectKeyPressed(event) {\n        var _this2 = this;\n\n        if (this._multiSelectMode) return true;\n        if (this.currentValues.some(function (key) {\n          return _this2._multiSelectKeys.includes(key);\n        })) return true;\n        if (event && this._multiSelectKeys.some(function (key) {\n          return event[_this2._keyMapping[key]];\n        })) return true;\n        return false;\n      }\n    }, {\n      key: \"currentValues\",\n      get: function get() {\n        return Array.from(this._currentValues.values());\n      }\n    }]);\n\n    return KeyStore;\n  }();\n\n  var PointerStore = /*#__PURE__*/function () {\n    /** @type {boolean} */\n    // Pointer Positions within Area\n\n    /**\n     * @type {Vect2}\n     * @private\n     * */\n\n    /**\n     * @type {Vect2}\n     * @private\n     * */\n\n    /**\n     * @type {Vect2}\n     * @private\n     * */\n    // General Pointer Position\n\n    /**\n     * @type {Vect2}\n     * @private\n     * */\n\n    /**\n     * @type {Vect2}\n     * @private\n     * */\n\n    /**\n     * @type {Vect2}\n     * @private\n     * */\n\n    /**\n     * @type {TouchEvent}\n     * @private\n     * */\n\n    /**\n     * @class PointerStore\n     * @constructor PointerStore\n     * @param {{DS:DragSelect}} p\n     * @ignore\n     */\n    function PointerStore(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS;\n\n      _classCallCheck(this, PointerStore);\n\n      _defineProperty(this, \"_isMouseInteraction\", false);\n\n      _defineProperty(this, \"_initialValArea\", void 0);\n\n      _defineProperty(this, \"_currentValArea\", void 0);\n\n      _defineProperty(this, \"_lastValArea\", void 0);\n\n      _defineProperty(this, \"_initialVal\", void 0);\n\n      _defineProperty(this, \"_currentVal\", void 0);\n\n      _defineProperty(this, \"_lastVal\", void 0);\n\n      _defineProperty(this, \"_lastTouch\", void 0);\n\n      _defineProperty(this, \"init\", function () {\n        document.addEventListener('mousemove', _this.update);\n        document.addEventListener('touchmove', _this.update, {\n          // @ts-ignore\n          passive: false\n        });\n      });\n\n      _defineProperty(this, \"getPointerPosition\", function (event) {\n        return getPointerPos({\n          event: _this._normalizedEvent(event)\n        });\n      });\n\n      _defineProperty(this, \"update\", function (event) {\n        if (!event) return;\n        _this.currentVal = _this.getPointerPosition(event);\n        if (!_this._isMouseInteraction) return;\n\n        _this.DS.publish('PointerStore:updated', {\n          event: event\n        });\n      });\n\n      _defineProperty(this, \"stop\", function () {\n        document.removeEventListener('mousemove', _this.update);\n        document.removeEventListener('touchmove', _this.update, {\n          // @ts-ignore\n          passive: false\n        }); // debounce in order \"onClick\" to work\n\n        setTimeout(function () {\n          return _this._isMouseInteraction = false;\n        }, 100);\n      });\n\n      _defineProperty(this, \"reset\", function (event) {\n        if (!event) return;\n        _this.currentVal = _this.lastVal = _this.getPointerPosition(event);\n\n        _this.stop();\n\n        _this.init();\n      });\n\n      this.DS = DS;\n      this.DS.subscribe('Interaction:init', this.init);\n      this.DS.subscribe('Interaction:start', function (_ref2) {\n        var event = _ref2.event;\n        return _this.start(event);\n      });\n      this.DS.subscribe('Interaction:end', function (_ref3) {\n        var event = _ref3.event;\n        return _this.reset(event);\n      });\n    }\n\n    _createClass(PointerStore, [{\n      key: \"start\",\n\n      /** @param {DSEvent} [event] */\n      value: function start(event) {\n        if (!event) return;\n        this._isMouseInteraction = true;\n        this.currentVal = this.initialVal = this.getPointerPosition(event);\n      }\n      /** @param {DSEvent} event */\n\n    }, {\n      key: \"_normalizedEvent\",\n\n      /**\n       * @param {DSEvent} event\n       * @return {MouseEvent|Touch}\n       * @private\n       */\n      value: function _normalizedEvent(event) {\n        // touchend has not touches. so we take the last touch if a touchevent, we need to store the positions\n        if ('touches' in event && event.type !== 'touchend') this._lastTouch = event; // if a touchevent, return the last touch rather than the regular event\n        // we need .touches[0] from that event instead\n\n        return 'touches' in event ? this._lastTouch.touches[0] : event;\n      }\n      /** First recorded pointer position within the area */\n\n    }, {\n      key: \"initialValArea\",\n      get: function get() {\n        if (!this._initialValArea) return {\n          x: 0,\n          y: 0\n        };\n        return this._initialValArea;\n      }\n      /** Current pointer position within the area */\n\n    }, {\n      key: \"currentValArea\",\n      get: function get() {\n        if (!this._currentValArea) return {\n          x: 0,\n          y: 0\n        };\n        return this._currentValArea;\n      }\n      /** Last recorded pointer position within the area */\n\n    }, {\n      key: \"lastValArea\",\n      get: function get() {\n        if (!this._lastValArea) return {\n          x: 0,\n          y: 0\n        };\n        return this._lastValArea;\n      }\n      /** First recorded pointer position */\n\n    }, {\n      key: \"initialVal\",\n      get: function get() {\n        if (!this._initialVal) return {\n          x: 0,\n          y: 0\n        };\n        return this._initialVal;\n      }\n      /** Current pointer position */\n      ,\n      set: function set(value) {\n        this._initialVal = value;\n        this._initialValArea = value && calc(value, '-', calc(rect2vect(this.DS.Area.rect), '+', rect2vect(this.DS.Area.computedBorder)));\n      }\n    }, {\n      key: \"currentVal\",\n      get: function get() {\n        if (!this._currentVal) return {\n          x: 0,\n          y: 0\n        };\n        return this._currentVal;\n      }\n      /** Last recorded pointer position */\n      ,\n      set: function set(value) {\n        this._currentVal = value;\n        this._currentValArea = value && calc(value, '-', calc(rect2vect(this.DS.Area.rect), '+', rect2vect(this.DS.Area.computedBorder)));\n      }\n    }, {\n      key: \"lastVal\",\n      get: function get() {\n        if (!this._lastVal) return {\n          x: 0,\n          y: 0\n        };\n        return this._lastVal;\n      },\n      set: function set(value) {\n        this._lastVal = value;\n        this._lastValArea = value && calc(value, '-', calc(rect2vect(this.DS.Area.rect), '+', rect2vect(this.DS.Area.computedBorder)));\n      }\n    }]);\n\n    return PointerStore;\n  }();\n\n  var ScrollStore = /*#__PURE__*/function () {\n    /**\n     * @type {Vect2}\n     * @private */\n\n    /**\n     * @type {Vect2}\n     * @private */\n\n    /**\n     * @type {DSArea}\n     * @private */\n\n    /**\n     * @type {boolean}\n     * @private */\n\n    /**\n     * @class ScrollStore\n     * @constructor ScrollStore\n     * @param {{ DS:DragSelect, areaElement: DSArea, zoom:number }} p\n     * @ignore\n     */\n    function ScrollStore(_ref) {\n      var _this = this;\n\n      var DS = _ref.DS,\n          areaElement = _ref.areaElement,\n          zoom = _ref.zoom;\n\n      _classCallCheck(this, ScrollStore);\n\n      _defineProperty(this, \"_initialVal\", void 0);\n\n      _defineProperty(this, \"_currentVal\", void 0);\n\n      _defineProperty(this, \"_areaElement\", void 0);\n\n      _defineProperty(this, \"_canScroll\", void 0);\n\n      _defineProperty(this, \"init\", function () {\n        return _this._areaElement.addEventListener('scroll', _this.update);\n      });\n\n      _defineProperty(this, \"start\", function () {\n        _this._currentVal = _this._initialVal = getCurrentScroll(_this._areaElement);\n\n        _this._areaElement.addEventListener('scroll', _this.update);\n      });\n\n      _defineProperty(this, \"update\", function () {\n        return _this._currentVal = getCurrentScroll(_this._areaElement);\n      });\n\n      _defineProperty(this, \"stop\", function () {\n        _this._areaElement.removeEventListener('scroll', _this.update);\n\n        _this._initialVal = {\n          x: 0,\n          y: 0\n        };\n        _this._canScroll = null;\n      });\n\n      _defineProperty(this, \"reset\", function () {\n        _this.stop();\n\n        _this.start();\n      });\n\n      this._areaElement = areaElement;\n      this.DS = DS;\n      this.zoom = zoom;\n      this.DS.subscribe('Interaction:init', this.init);\n      this.DS.subscribe('Interaction:start', function () {\n        return _this.start();\n      });\n      this.DS.subscribe('Interaction:end', function () {\n        return _this.reset();\n      });\n    }\n\n    _createClass(ScrollStore, [{\n      key: \"canScroll\",\n      get: function get() {\n        if (typeof this._canScroll === 'boolean') return this._canScroll;\n        return this._canScroll = canScroll(this._areaElement);\n      }\n    }, {\n      key: \"scrollAmount\",\n      get: function get() {\n        var scrollDiff = calc(this.currentVal, '-', this.initialVal); // if area is zoomed, the scroll values are skewed, we need to fix that manually :(\n\n        var zoom = num2vect(this.zoom);\n        var zoomScroll = calc(calc(scrollDiff, '*', zoom), '-', scrollDiff);\n        return {\n          x: scrollDiff.x + zoomScroll.x,\n          y: scrollDiff.y + zoomScroll.y\n        };\n      }\n    }, {\n      key: \"initialVal\",\n      get: function get() {\n        if (!this._initialVal) return {\n          x: 0,\n          y: 0\n        };\n        return this._initialVal;\n      }\n    }, {\n      key: \"currentVal\",\n      get: function get() {\n        if (!this._currentVal) this._currentVal = getCurrentScroll(this._areaElement);\n        return this._currentVal;\n      }\n    }]);\n\n    return ScrollStore;\n  }();\n\n  //////////////////////////////////////////////////////////////////////////////////////\n\n  var DragSelect = /*#__PURE__*/function () {\n    /**\n     * used to skip all current Selection and dragNdrop functionality\n     * @type {boolean}\n     */\n\n    /**\n     * @class DragSelect\n     * @constructor DragSelect\n     * @param {Settings} settings\n     */\n    function DragSelect(_ref) {\n      var _this = this;\n\n      var _ref$area = _ref.area,\n          area = _ref$area === void 0 ? document : _ref$area,\n          _ref$selectables = _ref.selectables,\n          selectables = _ref$selectables === void 0 ? [] : _ref$selectables,\n          _ref$autoScrollSpeed = _ref.autoScrollSpeed,\n          autoScrollSpeed = _ref$autoScrollSpeed === void 0 ? 5 : _ref$autoScrollSpeed,\n          _ref$overflowToleranc = _ref.overflowTolerance,\n          overflowTolerance = _ref$overflowToleranc === void 0 ? {\n        x: 25,\n        y: 25\n      } : _ref$overflowToleranc,\n          _ref$zoom = _ref.zoom,\n          zoom = _ref$zoom === void 0 ? 1 : _ref$zoom,\n          _ref$customStyles = _ref.customStyles,\n          customStyles = _ref$customStyles === void 0 ? false : _ref$customStyles,\n          _ref$multiSelectMode = _ref.multiSelectMode,\n          multiSelectMode = _ref$multiSelectMode === void 0 ? false : _ref$multiSelectMode,\n          _ref$multiSelectToggl = _ref.multiSelectToggling,\n          multiSelectToggling = _ref$multiSelectToggl === void 0 ? true : _ref$multiSelectToggl,\n          _ref$multiSelectKeys = _ref.multiSelectKeys,\n          multiSelectKeys = _ref$multiSelectKeys === void 0 ? ['Control', 'Shift', 'Meta'] : _ref$multiSelectKeys,\n          _ref$selector = _ref.selector,\n          selector = _ref$selector === void 0 ? undefined : _ref$selector,\n          _ref$draggability = _ref.draggability,\n          draggability = _ref$draggability === void 0 ? true : _ref$draggability,\n          _ref$immediateDrag = _ref.immediateDrag,\n          immediateDrag = _ref$immediateDrag === void 0 ? true : _ref$immediateDrag,\n          _ref$keyboardDrag = _ref.keyboardDrag,\n          keyboardDrag = _ref$keyboardDrag === void 0 ? true : _ref$keyboardDrag,\n          dragKeys = _ref.dragKeys,\n          _ref$keyboardDragSpee = _ref.keyboardDragSpeed,\n          keyboardDragSpeed = _ref$keyboardDragSpee === void 0 ? 10 : _ref$keyboardDragSpee,\n          _ref$useTransform = _ref.useTransform,\n          useTransform = _ref$useTransform === void 0 ? true : _ref$useTransform,\n          _ref$hoverClass = _ref.hoverClass,\n          hoverClass = _ref$hoverClass === void 0 ? 'ds-hover' : _ref$hoverClass,\n          _ref$selectableClass = _ref.selectableClass,\n          selectableClass = _ref$selectableClass === void 0 ? 'ds-selectable' : _ref$selectableClass,\n          _ref$selectedClass = _ref.selectedClass,\n          selectedClass = _ref$selectedClass === void 0 ? 'ds-selected' : _ref$selectedClass,\n          _ref$selectorClass = _ref.selectorClass,\n          selectorClass = _ref$selectorClass === void 0 ? 'ds-selector' : _ref$selectorClass,\n          _ref$selectorAreaClas = _ref.selectorAreaClass,\n          selectorAreaClass = _ref$selectorAreaClas === void 0 ? 'ds-selector-area' : _ref$selectorAreaClas,\n          callback = _ref.callback,\n          onDragMove = _ref.onDragMove,\n          onDragStartBegin = _ref.onDragStartBegin,\n          onDragStart = _ref.onDragStart,\n          onElementSelect = _ref.onElementSelect,\n          onElementUnselect = _ref.onElementUnselect;\n\n      _classCallCheck(this, DragSelect);\n\n      _defineProperty(this, \"continue\", false);\n\n      _defineProperty(this, \"start\", function () {\n        return _this.Interaction.init();\n      });\n\n      _defineProperty(this, \"break\", function () {\n        return _this[\"continue\"] = true;\n      });\n\n      _defineProperty(this, \"getSelection\", function () {\n        return _this.SelectedSet.elements;\n      });\n\n      _defineProperty(this, \"getSelectables\", function () {\n        return _this.SelectableSet.elements;\n      });\n\n      _defineProperty(this, \"getInitialCursorPosition\", function () {\n        return _this.stores.PointerStore.initialVal;\n      });\n\n      _defineProperty(this, \"getCurrentCursorPosition\", function () {\n        return _this.stores.PointerStore.currentVal;\n      });\n\n      _defineProperty(this, \"getPreviousCursorPosition\", function () {\n        return _this.stores.PointerStore.lastVal;\n      });\n\n      _defineProperty(this, \"getInitialCursorPositionArea\", function () {\n        return _this.stores.PointerStore.initialValArea;\n      });\n\n      _defineProperty(this, \"getCurrentCursorPositionArea\", function () {\n        return _this.stores.PointerStore.currentValArea;\n      });\n\n      _defineProperty(this, \"getPreviousCursorPositionArea\", function () {\n        return _this.stores.PointerStore.lastValArea;\n      });\n\n      _defineProperty(this, \"isMultiSelect\", function (event) {\n        return _this.stores.KeyStore.isMultiSelectKeyPressed(event);\n      });\n\n      _defineProperty(this, \"isDragging\", function () {\n        return _this.Interaction.isDragging;\n      });\n\n      this.PubSub = new PubSub();\n      this.subscribe = this.PubSub.subscribe;\n      this.unsubscribe = this.PubSub.unsubscribe;\n      this.publish = this.PubSub.publish;\n\n      this._callbacksTemp({\n        callback: callback,\n        onDragMove: onDragMove,\n        onDragStart: onDragStart,\n        onDragStartBegin: onDragStartBegin,\n        onElementSelect: onElementSelect,\n        onElementUnselect: onElementUnselect\n      });\n\n      this.stores = {\n        PointerStore: new PointerStore({\n          DS: this\n        }),\n        ScrollStore: new ScrollStore({\n          DS: this,\n          areaElement: area,\n          zoom: zoom\n        }),\n        KeyStore: new KeyStore({\n          DS: this,\n          multiSelectKeys: multiSelectKeys,\n          multiSelectMode: multiSelectMode\n        })\n      };\n      this.Area = new Area({\n        area: area,\n        PS: this.PubSub,\n        zoom: zoom\n      });\n      this.Selector = new Selector({\n        DS: this,\n        selector: selector,\n        selectorClass: selectorClass,\n        customStyles: customStyles\n      });\n      this.SelectorArea = new SelectorArea({\n        DS: this,\n        selectorAreaClass: selectorAreaClass,\n        autoScrollSpeed: autoScrollSpeed,\n        overflowTolerance: overflowTolerance\n      });\n      this.SelectableSet = new SelectableSet({\n        elements: selectables,\n        DS: this,\n        className: selectableClass,\n        hoverClassName: hoverClass,\n        useTransform: useTransform,\n        draggability: draggability\n      });\n      this.SelectedSet = new SelectedSet({\n        DS: this,\n        className: selectedClass\n      });\n      this.Selection = new Selection({\n        DS: this,\n        hoverClassName: hoverClass,\n        multiSelectToggling: multiSelectToggling\n      });\n      this.Drag = new Drag({\n        DS: this,\n        draggability: draggability,\n        useTransform: useTransform,\n        keyboardDrag: keyboardDrag,\n        dragKeys: Object.assign({\n          up: ['ArrowUp'],\n          down: ['ArrowDown'],\n          left: ['ArrowLeft'],\n          right: ['ArrowRight']\n        }, dragKeys),\n        zoom: zoom,\n        keyboardDragSpeed: keyboardDragSpeed\n      });\n      this.Interaction = new Interaction({\n        areaElement: area,\n        DS: this,\n        draggability: draggability,\n        immediateDrag: immediateDrag\n      }); // Subscriber Aliases\n\n      subscriberAliases({\n        subscribe: this.subscribe,\n        publish: this.publish,\n        SelectedSet: this.SelectedSet,\n        Interaction: this.Interaction\n      });\n      this.subscribe('Interaction:end', function () {\n        return _this[\"continue\"] = false;\n      });\n      this.start();\n    } // @TODO: remove after deprecation\n\n\n    _createClass(DragSelect, [{\n      key: \"_callbacksTemp\",\n      value: function _callbacksTemp(_ref2) {\n        var callback = _ref2.callback,\n            onDragMove = _ref2.onDragMove,\n            onDragStart = _ref2.onDragStart,\n            onDragStartBegin = _ref2.onDragStartBegin,\n            onElementSelect = _ref2.onElementSelect,\n            onElementUnselect = _ref2.onElementUnselect;\n\n        var warnMessage = function warnMessage(name, newName) {\n          return console.warn(\"[DragSelect] \".concat(name, \" is deprecated. Use DragSelect.subscribe(\\\"\").concat(newName, \"\\\", (callbackObject) => {}) instead. Act Now! See docs for more info\"));\n        };\n\n        if (callback) {\n          warnMessage('callback', 'callback');\n          this.subscribe('callback', function (_ref3) {\n            var items = _ref3.items,\n                item = _ref3.item,\n                event = _ref3.event;\n            return callback(items, event);\n          });\n        }\n\n        if (onDragMove) {\n          warnMessage('onDragMove', 'dragmove');\n          this.subscribe('dragmove', function (_ref4) {\n            var items = _ref4.items,\n                item = _ref4.item,\n                event = _ref4.event;\n            return onDragMove(event);\n          });\n        }\n\n        if (onDragStart) {\n          warnMessage('onDragStart', 'dragstart');\n          this.subscribe('dragstart', function (_ref5) {\n            var items = _ref5.items,\n                item = _ref5.item,\n                event = _ref5.event;\n            return onDragStart(event);\n          });\n        }\n\n        if (onDragStartBegin) {\n          warnMessage('onDragStartBegin', 'dragstart');\n          this.subscribe('dragstart', function (_ref6) {\n            var items = _ref6.items,\n                item = _ref6.item,\n                event = _ref6.event;\n            return onDragStartBegin(event);\n          });\n        }\n\n        if (onElementSelect) {\n          warnMessage('onElementSelect', 'elementselect');\n          this.subscribe('elementselect', function (_ref7) {\n            var items = _ref7.items,\n                item = _ref7.item,\n                event = _ref7.event;\n            return onElementSelect(item, event);\n          });\n        }\n\n        if (onElementUnselect) {\n          warnMessage('onElementUnselect', 'elementunselect');\n          this.subscribe('elementunselect', function (_ref8) {\n            var items = _ref8.items,\n                item = _ref8.item,\n                event = _ref8.event;\n            return onElementUnselect(item, event);\n          });\n        }\n      } // Useful methods for the user\n      //////////////////////////////////////////////////////////////////////////////////////\n\n      /**\n       * Initializes the functionality. Automatically triggered when created.\n       * Also, reset the functionality after a teardown\n       */\n\n    }, {\n      key: \"stop\",\n\n      /**\n       * Complete function teardown\n       * Will teardown/stop the whole functionality\n       * @param {boolean} [remove] - if elements should be removed.\n       * @param {boolean} [fromSelection] - if elements should also be added/removed to the selection.\n       * @param {boolean} [withCallback] - if elements should also be added/removed to the selection.\n       */\n      value: function stop() {\n        var remove = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var fromSelection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var withCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        if (withCallback) this.publish('callback', {\n          items: this.getSelection()\n        });\n        this.Interaction.stop();\n        this.Area.stop();\n        this.Drag.stop();\n        this.Selector.stop();\n        this.SelectorArea.stop(remove);\n        this.stores.KeyStore.stop();\n        this.stores.PointerStore.stop();\n        this.stores.ScrollStore.stop();\n        if (remove) this.SelectableSet.clear();\n        if (fromSelection) this.SelectedSet.clear();\n      }\n      /**\n       * Utility to override DragSelect internal functionality:\n       * Break will skip the selection or dragging functionality (until after the callback) but let everything continue to run.\n       * Useful utility to write your own functionality/move/dragNdrop based on DragSelect pointer positions.\n       */\n\n    }, {\n      key: \"addSelection\",\n\n      /**\n       * Adds several elements to the selection list also adds the specific classes and take into account all calculations.\n       * Does not clear the selection, in contrary to .setSelection. Can add multiple elements at once\n       * @param {DSInputElements} elements one or multiple elements\n       * @param {boolean} [triggerCallback] - if callback should be called\n       * @param {boolean} [dontAddToSelectables] - if element should not be added to the list of selectable elements\n       * @return {DSElements} all selected elements\n       */\n      value: function addSelection(elements) {\n        var triggerCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var dontAddToSelectables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        this.SelectedSet.addAll(toArray(elements));\n        if (!dontAddToSelectables) this.addSelectables(elements);\n        if (triggerCallback) this.PubSub.publish('callback', {\n          items: this.getSelection()\n        });\n        return this.getSelection();\n      }\n      /**\n       * Removes specific elements from the selection\n       * Multiple elements can be given at once, in contrary to unselect\n       * @param {DSInputElements} elements one or multiple elements\n       * @param {boolean} [triggerCallback] - if callback should be called\n       * @param {boolean} [removeFromSelectables] - if element should be removed from the list of selectable elements\n       * @return {DSElements} all selected elements\n       */\n\n    }, {\n      key: \"removeSelection\",\n      value: function removeSelection(elements) {\n        var triggerCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var removeFromSelectables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        this.SelectedSet.deleteAll(toArray(elements));\n        if (removeFromSelectables) this.removeSelectables(elements);\n        if (triggerCallback) this.PubSub.publish('callback', {\n          items: this.getSelection()\n        });\n        return this.getSelection();\n      }\n      /**\n       * Toggles specific elements from the selection:\n       * If element is not in selection it will be added, if it is already selected, it will be removed.\n       * Multiple elements can be given at once.\n       * @param {DSInputElements} elements one or multiple elements\n       * @param {boolean} [triggerCallback] - if callback should be called\n       * @param {boolean} [alsoSelectables] - if element should not be added/removed to the list of selectable elements accordingly\n       * @return {DSElements} all selected elements\n       */\n\n    }, {\n      key: \"toggleSelection\",\n      value: function toggleSelection(elements) {\n        var _this2 = this;\n\n        var triggerCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var alsoSelectables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        toArray(elements).forEach(function (el) {\n          return _this2.SelectedSet.has(el) ? _this2.removeSelection(elements, triggerCallback, alsoSelectables) : _this2.addSelection(elements, triggerCallback, alsoSelectables);\n        });\n        if (triggerCallback) this.PubSub.publish('callback', {\n          items: this.getSelection()\n        });\n        return this.getSelection();\n      }\n      /**\n       * Sets the current selected elements and optionally run the callback\n       * By default, adds new elements also to the list of selectables\n       * @param {DSInputElements} elements – dom elements\n       * @param {boolean} [triggerCallback] - if callback should be called\n       * @param {boolean} [dontAddToSelectables] - if element should not be added to the list of selectable elements\n       * @return {DSElements}\n       */\n\n    }, {\n      key: \"setSelection\",\n      value: function setSelection(elements) {\n        var triggerCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var dontAddToSelectables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        this.clearSelection();\n        this.addSelection(elements, triggerCallback, dontAddToSelectables);\n        return this.getSelection();\n      }\n      /**\n       * Unselect / Deselect all current selected Nodes\n       * @param {boolean} [triggerCallback] - if callback should be called\n       * @return {DSElements} this.selected, should be empty\n       */\n\n    }, {\n      key: \"clearSelection\",\n      value: function clearSelection() {\n        var triggerCallback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        this.SelectedSet.clear();\n        if (triggerCallback) this.PubSub.publish('callback', {\n          items: this.getSelection()\n        });\n        return this.getSelection();\n      }\n      /**\n       * Add elements that can be selected. No node is added twice\n       * @param {DSInputElements} elements dom element(s)\n       * @param {boolean} [addToSelection] if elements should also be added to current selection\n       * @return {DSInputElements} the added element(s)\n       */\n\n    }, {\n      key: \"addSelectables\",\n      value: function addSelectables(elements) {\n        var addToSelection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var els = toArray(elements);\n        this.SelectableSet.addAll(els);\n        if (addToSelection) this.SelectedSet.addAll(els);\n        return elements;\n      }\n      /**\n       * Gets all nodes that can potentially be selected\n       * @return {DSElements} this.selectables\n       */\n\n    }, {\n      key: \"setSelectables\",\n\n      /**\n       * Sets all elements that can be selected.\n       * Removes all current selectables (& their respective classes).\n       * Adds the new set to the selectables set, thus replacing the original set.\n       * @param {DSInputElements} elements – dom element(s)\n       * @param {boolean} [removeFromSelection] if elements should also be removed from current selection\n       * @param {boolean} [addToSelection] if elements should also be added to current selection\n       * @return {DSInputElements} elements – the added element(s)\n       */\n      value: function setSelectables(elements) {\n        var removeFromSelection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var addToSelection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        this.removeSelectables(elements, removeFromSelection);\n        return this.addSelectables(elements, addToSelection);\n      }\n      /**\n       * Remove elements from the elements that can be selected.\n       * @param {DSInputElements} elements – dom element(s)\n       * @param {boolean} [removeFromSelection] if elements should also be removed from current selection\n       * @return {DSInputElements} the removed element(s)\n       */\n\n    }, {\n      key: \"removeSelectables\",\n      value: function removeSelectables(elements) {\n        var removeFromSelection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        this.SelectableSet.deleteAll(toArray(elements));\n        if (removeFromSelection) this.removeSelection(elements);\n        return elements;\n      }\n      /** The starting/initial position of the cursor/selector @return {Vect2} */\n\n    }, {\n      key: \"getCursorPositionDifference\",\n\n      /**\n       * Utility method that returns the cursor position difference between start and now\n       * @param {boolean} [usePreviousCursorDifference] if true, it will output the cursor position difference between the previous selection and now\n       * @param {boolean} [useAreaPositions] if true, it will use cursor positions relative to the area\n       * @return {Vect2}\n       * @deprecated\n       */\n      value: function getCursorPositionDifference() {\n        var usePreviousCursorDifference = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var useAreaPositions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        console.warn('[DragSelect] Using .getCursorPositionDifference is deprecated. Calculate yourself instead. i.e. `.getCurrentCursorPosition().x - .getInitialCursorPosition().x`');\n        var posA = useAreaPositions ? this.getCurrentCursorPositionArea() : this.getCurrentCursorPosition();\n        var posB = usePreviousCursorDifference ? useAreaPositions ? this.getPreviousCursorPositionArea() : this.getPreviousCursorPosition() : useAreaPositions ? this.getInitialCursorPositionArea() : this.getInitialCursorPosition();\n        return calc(posA, '-', posB);\n      }\n      /**\n       * Whether the user is currently drag n dropping elements (instead of selection)\n       * @return {boolean}\n       */\n\n    }]);\n\n    return DragSelect;\n  }();\n\n  return DragSelect;\n\n})));\n"]},"metadata":{},"sourceType":"script"}