{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActorRdfResolveHypermediaSparql = void 0;\n\nconst bus_rdf_resolve_hypermedia_1 = require(\"@comunica/bus-rdf-resolve-hypermedia\");\n\nconst RdfSourceSparql_1 = require(\"./RdfSourceSparql\");\n/**\n * A comunica SPARQL RDF Resolve Hypermedia Actor.\n */\n\n\nclass ActorRdfResolveHypermediaSparql extends bus_rdf_resolve_hypermedia_1.ActorRdfResolveHypermedia {\n  constructor(args) {\n    super(args, 'sparql');\n  }\n\n  async testMetadata(action) {\n    if (!action.forceSourceType && !action.metadata.sparqlService && !(this.checkUrlSuffix && action.url.endsWith('/sparql'))) {\n      throw new Error(`Actor ${this.name} could not detect a SPARQL service description or URL ending on /sparql.`);\n    }\n\n    return {\n      filterFactor: 1\n    };\n  }\n\n  async run(action) {\n    this.logInfo(action.context, `Identified as sparql source: ${action.url}`);\n    const source = new RdfSourceSparql_1.RdfSourceSparql(action.metadata.sparqlService || action.url, action.context, this.mediatorHttp, this.forceHttpGet);\n    return {\n      source\n    };\n  }\n\n}\n\nexports.ActorRdfResolveHypermediaSparql = ActorRdfResolveHypermediaSparql;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@comunica/actor-rdf-resolve-hypermedia-sparql/lib/ActorRdfResolveHypermediaSparql.js"],"names":["Object","defineProperty","exports","value","ActorRdfResolveHypermediaSparql","bus_rdf_resolve_hypermedia_1","require","RdfSourceSparql_1","ActorRdfResolveHypermedia","constructor","args","testMetadata","action","forceSourceType","metadata","sparqlService","checkUrlSuffix","url","endsWith","Error","name","filterFactor","run","logInfo","context","source","RdfSourceSparql","mediatorHttp","forceHttpGet"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,+BAAR,GAA0C,KAAK,CAA/C;;AACA,MAAMC,4BAA4B,GAAGC,OAAO,CAAC,sCAAD,CAA5C;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,mBAAD,CAAjC;AACA;AACA;AACA;;;AACA,MAAMF,+BAAN,SAA8CC,4BAA4B,CAACG,yBAA3E,CAAqG;AACjGC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN,EAAY,QAAZ;AACH;;AACiB,QAAZC,YAAY,CAACC,MAAD,EAAS;AACvB,QAAI,CAACA,MAAM,CAACC,eAAR,IAA2B,CAACD,MAAM,CAACE,QAAP,CAAgBC,aAA5C,IACA,EAAE,KAAKC,cAAL,IAAuBJ,MAAM,CAACK,GAAP,CAAWC,QAAX,CAAoB,SAApB,CAAzB,CADJ,EAC8D;AAC1D,YAAM,IAAIC,KAAJ,CAAW,SAAQ,KAAKC,IAAK,0EAA7B,CAAN;AACH;;AACD,WAAO;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAP;AACH;;AACQ,QAAHC,GAAG,CAACV,MAAD,EAAS;AACd,SAAKW,OAAL,CAAaX,MAAM,CAACY,OAApB,EAA8B,gCAA+BZ,MAAM,CAACK,GAAI,EAAxE;AACA,UAAMQ,MAAM,GAAG,IAAIlB,iBAAiB,CAACmB,eAAtB,CAAsCd,MAAM,CAACE,QAAP,CAAgBC,aAAhB,IAAiCH,MAAM,CAACK,GAA9E,EAAmFL,MAAM,CAACY,OAA1F,EAAmG,KAAKG,YAAxG,EAAsH,KAAKC,YAA3H,CAAf;AACA,WAAO;AAAEH,MAAAA;AAAF,KAAP;AACH;;AAfgG;;AAiBrGvB,OAAO,CAACE,+BAAR,GAA0CA,+BAA1C","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActorRdfResolveHypermediaSparql = void 0;\nconst bus_rdf_resolve_hypermedia_1 = require(\"@comunica/bus-rdf-resolve-hypermedia\");\nconst RdfSourceSparql_1 = require(\"./RdfSourceSparql\");\n/**\n * A comunica SPARQL RDF Resolve Hypermedia Actor.\n */\nclass ActorRdfResolveHypermediaSparql extends bus_rdf_resolve_hypermedia_1.ActorRdfResolveHypermedia {\n    constructor(args) {\n        super(args, 'sparql');\n    }\n    async testMetadata(action) {\n        if (!action.forceSourceType && !action.metadata.sparqlService &&\n            !(this.checkUrlSuffix && action.url.endsWith('/sparql'))) {\n            throw new Error(`Actor ${this.name} could not detect a SPARQL service description or URL ending on /sparql.`);\n        }\n        return { filterFactor: 1 };\n    }\n    async run(action) {\n        this.logInfo(action.context, `Identified as sparql source: ${action.url}`);\n        const source = new RdfSourceSparql_1.RdfSourceSparql(action.metadata.sparqlService || action.url, action.context, this.mediatorHttp, this.forceHttpGet);\n        return { source };\n    }\n}\nexports.ActorRdfResolveHypermediaSparql = ActorRdfResolveHypermediaSparql;\n//# sourceMappingURL=ActorRdfResolveHypermediaSparql.js.map"]},"metadata":{},"sourceType":"script"}