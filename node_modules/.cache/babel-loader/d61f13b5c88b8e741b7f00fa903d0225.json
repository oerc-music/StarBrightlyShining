{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.storeStream = void 0;\n\nconst n3_1 = require(\"n3\");\n/**\n * Import all quads in the given stream into a new RDF store.\n *\n * The whole stream will be consumed for this,\n * and the promise will resolve once the stream's end event is emitted.\n *\n * @param {Stream<Q extends BaseQuad>} stream An RDF stream containing the quads to import into the store.\n * @return {Promise<Store<Q extends BaseQuad>>} A promise resolving to an RDF store.\n */\n\n\nfunction storeStream(stream) {\n  const store = new n3_1.Store();\n  return new Promise((resolve, reject) => store.import(stream).on('error', reject).once('end', () => resolve(store)));\n}\n\nexports.storeStream = storeStream;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/rdf-store-stream/index.js"],"names":["Object","defineProperty","exports","value","storeStream","n3_1","require","stream","store","Store","Promise","resolve","reject","import","on","once"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,IAAD,CAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,WAAT,CAAqBG,MAArB,EAA6B;AACzB,QAAMC,KAAK,GAAG,IAAIH,IAAI,CAACI,KAAT,EAAd;AACA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqBJ,KAAK,CAACK,MAAN,CAAaN,MAAb,EACnCO,EADmC,CAChC,OADgC,EACvBF,MADuB,EAEnCG,IAFmC,CAE9B,KAF8B,EAEvB,MAAMJ,OAAO,CAACH,KAAD,CAFU,CAAjC,CAAP;AAGH;;AACDN,OAAO,CAACE,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeStream = void 0;\nconst n3_1 = require(\"n3\");\n/**\n * Import all quads in the given stream into a new RDF store.\n *\n * The whole stream will be consumed for this,\n * and the promise will resolve once the stream's end event is emitted.\n *\n * @param {Stream<Q extends BaseQuad>} stream An RDF stream containing the quads to import into the store.\n * @return {Promise<Store<Q extends BaseQuad>>} A promise resolving to an RDF store.\n */\nfunction storeStream(stream) {\n    const store = new n3_1.Store();\n    return new Promise((resolve, reject) => store.import(stream)\n        .on('error', reject)\n        .once('end', () => resolve(store)));\n}\nexports.storeStream = storeStream;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}