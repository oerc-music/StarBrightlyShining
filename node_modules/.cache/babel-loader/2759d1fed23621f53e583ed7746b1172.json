{"ast":null,"code":"import { Util as ContextUtil } from 'jsonld-context-parser';\nimport { namedNode } from '@rdfjs/data-model';\nimport AbstractPathResolver from './AbstractPathResolver';\n/**\n * Resolves property names of a path\n * to their corresponding IRIs through a JSON-LD context.\n */\n\nexport default class JSONLDResolver extends AbstractPathResolver {\n  /**\n   * Expands a JSON property key into a full IRI.\n   */\n  async lookupProperty(property) {\n    const context = await this._context;\n    const expandedProperty = context.expandTerm(property, true);\n    if (!ContextUtil.isValidIri(expandedProperty)) throw new Error(`The JSON-LD context cannot expand the '${property}' property`);\n    return namedNode(expandedProperty);\n  }\n\n}","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/ldflex/module/JSONLDResolver.js"],"names":["Util","ContextUtil","namedNode","AbstractPathResolver","JSONLDResolver","lookupProperty","property","context","_context","expandedProperty","expandTerm","isValidIri","Error"],"mappings":"AAAA,SAASA,IAAI,IAAIC,WAAjB,QAAoC,uBAApC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA;AACA;AACA;AACA;;AAEA,eAAe,MAAMC,cAAN,SAA6BD,oBAA7B,CAAkD;AAC/D;AACF;AACA;AACsB,QAAdE,cAAc,CAACC,QAAD,EAAW;AAC7B,UAAMC,OAAO,GAAG,MAAM,KAAKC,QAA3B;AACA,UAAMC,gBAAgB,GAAGF,OAAO,CAACG,UAAR,CAAmBJ,QAAnB,EAA6B,IAA7B,CAAzB;AACA,QAAI,CAACL,WAAW,CAACU,UAAZ,CAAuBF,gBAAvB,CAAL,EAA+C,MAAM,IAAIG,KAAJ,CAAW,0CAAyCN,QAAS,YAA7D,CAAN;AAC/C,WAAOJ,SAAS,CAACO,gBAAD,CAAhB;AACD;;AAT8D","sourcesContent":["import { Util as ContextUtil } from 'jsonld-context-parser';\nimport { namedNode } from '@rdfjs/data-model';\nimport AbstractPathResolver from './AbstractPathResolver';\n/**\n * Resolves property names of a path\n * to their corresponding IRIs through a JSON-LD context.\n */\n\nexport default class JSONLDResolver extends AbstractPathResolver {\n  /**\n   * Expands a JSON property key into a full IRI.\n   */\n  async lookupProperty(property) {\n    const context = await this._context;\n    const expandedProperty = context.expandTerm(property, true);\n    if (!ContextUtil.isValidIri(expandedProperty)) throw new Error(`The JSON-LD context cannot expand the '${property}' property`);\n    return namedNode(expandedProperty);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}