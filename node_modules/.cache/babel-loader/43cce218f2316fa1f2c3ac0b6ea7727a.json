{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KEY_CONTEXT_AUTH = exports.KEY_CONTEXT_INCLUDE_CREDENTIALS = exports.ActorHttp = void 0;\n\nconst context_entries_1 = require(\"@comunica/context-entries\");\n\nconst core_1 = require(\"@comunica/core\");\n\nconst isStream = require('is-stream');\n\nconst toNodeReadable = require('web-streams-node').toNodeReadable;\n\nconst toWebReadableStream = require('web-streams-node').toWebReadableStream;\n/**\n * A base actor for listening to HTTP events.\n *\n * Actor types:\n * * Input:  IActionHttp:      The HTTP request.\n * * Test:   IActorHttpTest:   An estimate for the response time.\n * * Output: IActorHttpOutput: The HTTP response.\n *\n * @see IActionHttp\n * @see IActorHttpTest\n * @see IActorHttpOutput\n */\n\n\nclass ActorHttp extends core_1.Actor {\n  constructor(args) {\n    super(args);\n  }\n  /**\n   * Converts WhatWG streams to Node streams if required.\n   * Returns the input in case the stream already is a Node stream.\n   * @param {ReadableStream} body\n   * @returns {NodeJS.ReadableStream}\n   */\n\n\n  static toNodeReadable(body) {\n    return isStream(body) ? body : toNodeReadable(body);\n  }\n  /**\n   * Converts Node streams to WhatWG streams.\n   * @param {NodeJS.ReadableStream} body\n   * @returns {ReadableStream}\n   */\n\n\n  static toWebReadableStream(body) {\n    return toWebReadableStream(body);\n  }\n  /**\n   * Convert the given headers object into a raw hash.\n   * @param headers A headers object.\n   */\n\n\n  static headersToHash(headers) {\n    const hash = {};\n    headers.forEach((value, key) => {\n      hash[key] = value;\n    });\n    return hash;\n  }\n\n}\n\nexports.ActorHttp = ActorHttp;\n/**\n * @type {string} Context entry for the include credentials flags.\n * @deprecated Import this constant from @comunica/context-entries.\n */\n\nexports.KEY_CONTEXT_INCLUDE_CREDENTIALS = context_entries_1.KeysHttp.includeCredentials;\n/**\n * @type {string} Context entry for the authentication for a source.\n * @value {string} \"username:password\"-pair.\n * @deprecated Import this constant from @comunica/context-entries.\n */\n\nexports.KEY_CONTEXT_AUTH = context_entries_1.KeysHttp.auth;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@comunica/bus-http/lib/ActorHttp.js"],"names":["Object","defineProperty","exports","value","KEY_CONTEXT_AUTH","KEY_CONTEXT_INCLUDE_CREDENTIALS","ActorHttp","context_entries_1","require","core_1","isStream","toNodeReadable","toWebReadableStream","Actor","constructor","args","body","headersToHash","headers","hash","forEach","key","KeysHttp","includeCredentials","auth"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2BF,OAAO,CAACG,+BAAR,GAA0CH,OAAO,CAACI,SAAR,GAAoB,KAAK,CAA9F;;AACA,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,2BAAD,CAAjC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,gBAAD,CAAtB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAMG,cAAc,GAAGH,OAAO,CAAC,kBAAD,CAAP,CAA4BG,cAAnD;;AACA,MAAMC,mBAAmB,GAAGJ,OAAO,CAAC,kBAAD,CAAP,CAA4BI,mBAAxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMN,SAAN,SAAwBG,MAAM,CAACI,KAA/B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACyB,SAAdJ,cAAc,CAACK,IAAD,EAAO;AACxB,WAAON,QAAQ,CAACM,IAAD,CAAR,GAAiBA,IAAjB,GAAwBL,cAAc,CAACK,IAAD,CAA7C;AACH;AACD;AACJ;AACA;AACA;AACA;;;AAC8B,SAAnBJ,mBAAmB,CAACI,IAAD,EAAO;AAC7B,WAAOJ,mBAAmB,CAACI,IAAD,CAA1B;AACH;AACD;AACJ;AACA;AACA;;;AACwB,SAAbC,aAAa,CAACC,OAAD,EAAU;AAC1B,UAAMC,IAAI,GAAG,EAAb;AACAD,IAAAA,OAAO,CAACE,OAAR,CAAgB,CAACjB,KAAD,EAAQkB,GAAR,KAAgB;AAC5BF,MAAAA,IAAI,CAACE,GAAD,CAAJ,GAAYlB,KAAZ;AACH,KAFD;AAGA,WAAOgB,IAAP;AACH;;AA/BgC;;AAiCrCjB,OAAO,CAACI,SAAR,GAAoBA,SAApB;AACA;AACA;AACA;AACA;;AACAJ,OAAO,CAACG,+BAAR,GAA0CE,iBAAiB,CAACe,QAAlB,CAA2BC,kBAArE;AACA;AACA;AACA;AACA;AACA;;AACArB,OAAO,CAACE,gBAAR,GAA2BG,iBAAiB,CAACe,QAAlB,CAA2BE,IAAtD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KEY_CONTEXT_AUTH = exports.KEY_CONTEXT_INCLUDE_CREDENTIALS = exports.ActorHttp = void 0;\nconst context_entries_1 = require(\"@comunica/context-entries\");\nconst core_1 = require(\"@comunica/core\");\nconst isStream = require('is-stream');\nconst toNodeReadable = require('web-streams-node').toNodeReadable;\nconst toWebReadableStream = require('web-streams-node').toWebReadableStream;\n/**\n * A base actor for listening to HTTP events.\n *\n * Actor types:\n * * Input:  IActionHttp:      The HTTP request.\n * * Test:   IActorHttpTest:   An estimate for the response time.\n * * Output: IActorHttpOutput: The HTTP response.\n *\n * @see IActionHttp\n * @see IActorHttpTest\n * @see IActorHttpOutput\n */\nclass ActorHttp extends core_1.Actor {\n    constructor(args) {\n        super(args);\n    }\n    /**\n     * Converts WhatWG streams to Node streams if required.\n     * Returns the input in case the stream already is a Node stream.\n     * @param {ReadableStream} body\n     * @returns {NodeJS.ReadableStream}\n     */\n    static toNodeReadable(body) {\n        return isStream(body) ? body : toNodeReadable(body);\n    }\n    /**\n     * Converts Node streams to WhatWG streams.\n     * @param {NodeJS.ReadableStream} body\n     * @returns {ReadableStream}\n     */\n    static toWebReadableStream(body) {\n        return toWebReadableStream(body);\n    }\n    /**\n     * Convert the given headers object into a raw hash.\n     * @param headers A headers object.\n     */\n    static headersToHash(headers) {\n        const hash = {};\n        headers.forEach((value, key) => {\n            hash[key] = value;\n        });\n        return hash;\n    }\n}\nexports.ActorHttp = ActorHttp;\n/**\n * @type {string} Context entry for the include credentials flags.\n * @deprecated Import this constant from @comunica/context-entries.\n */\nexports.KEY_CONTEXT_INCLUDE_CREDENTIALS = context_entries_1.KeysHttp.includeCredentials;\n/**\n * @type {string} Context entry for the authentication for a source.\n * @value {string} \"username:password\"-pair.\n * @deprecated Import this constant from @comunica/context-entries.\n */\nexports.KEY_CONTEXT_AUTH = context_entries_1.KeysHttp.auth;\n//# sourceMappingURL=ActorHttp.js.map"]},"metadata":{},"sourceType":"script"}