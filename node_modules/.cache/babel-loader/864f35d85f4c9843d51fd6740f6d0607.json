{"ast":null,"code":"var Promise = require('promise-polyfill');\n\nmodule.exports = function (stream, enc, cb) {\n  if (typeof enc === 'function') {\n    cb = enc;\n    enc = null;\n  }\n\n  cb = cb || function () {};\n\n  var str = '';\n  return new Promise(function (resolve, reject) {\n    stream.on('data', function (data) {\n      str += typeof enc === 'string' ? data.toString(enc) : data.toString();\n    });\n    stream.on('end', function () {\n      resolve(str);\n      cb(null, str);\n    });\n    stream.on('error', function (err) {\n      reject(err);\n      cb(err);\n    });\n  });\n};","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/stream-to-string/index.js"],"names":["Promise","require","module","exports","stream","enc","cb","str","resolve","reject","on","data","toString","err"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkBC,GAAlB,EAAuBC,EAAvB,EAA2B;AACxC,MAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;AAC3BC,IAAAA,EAAE,GAAGD,GAAL;AACAA,IAAAA,GAAG,GAAG,IAAN;AACH;;AACDC,EAAAA,EAAE,GAAGA,EAAE,IAAI,YAAY,CAAE,CAAzB;;AAEA,MAAIC,GAAG,GAAG,EAAV;AAEA,SAAO,IAAIP,OAAJ,CAAa,UAAUQ,OAAV,EAAmBC,MAAnB,EAA2B;AAC3CL,IAAAA,MAAM,CAACM,EAAP,CAAU,MAAV,EAAkB,UAAUC,IAAV,EAAgB;AAC9BJ,MAAAA,GAAG,IAAK,OAAOF,GAAP,KAAe,QAAhB,GAA4BM,IAAI,CAACC,QAAL,CAAcP,GAAd,CAA5B,GAAiDM,IAAI,CAACC,QAAL,EAAxD;AACH,KAFD;AAGAR,IAAAA,MAAM,CAACM,EAAP,CAAU,KAAV,EAAiB,YAAY;AACzBF,MAAAA,OAAO,CAACD,GAAD,CAAP;AACAD,MAAAA,EAAE,CAAC,IAAD,EAAOC,GAAP,CAAF;AACH,KAHD;AAIAH,IAAAA,MAAM,CAACM,EAAP,CAAU,OAAV,EAAmB,UAAUG,GAAV,EAAe;AAC9BJ,MAAAA,MAAM,CAACI,GAAD,CAAN;AACAP,MAAAA,EAAE,CAACO,GAAD,CAAF;AACH,KAHD;AAIH,GAZM,CAAP;AAaH,CAtBD","sourcesContent":["var Promise = require('promise-polyfill')\n\nmodule.exports = function (stream, enc, cb) {\n    if (typeof enc === 'function') {\n        cb = enc\n        enc = null\n    }\n    cb = cb || function () {}\n\n    var str = ''\n\n    return new Promise (function (resolve, reject) {\n        stream.on('data', function (data) {\n            str += (typeof enc === 'string') ? data.toString(enc) : data.toString()\n        })\n        stream.on('end', function () {\n            resolve(str)\n            cb(null, str)\n        })\n        stream.on('error', function (err) {\n            reject(err)\n            cb(err)\n        })\n    })\n}\n"]},"metadata":{},"sourceType":"script"}