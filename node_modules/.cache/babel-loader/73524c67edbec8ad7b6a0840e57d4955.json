{"ast":null,"code":"/**\n * Queries for all compacted predicates of a path subject\n */\nimport { JsonLdContextNormalized } from 'jsonld-context-parser';\nimport { toIterablePromise } from './promiseUtils';\nexport default class PropertiesHandler {\n  handle(pathData, path) {\n    return toIterablePromise(this._handle(pathData, path));\n  }\n\n  async *_handle(pathData, path) {\n    const contextRaw = (await pathData.settings.parsedContext) || {};\n    const context = new JsonLdContextNormalized(contextRaw);\n\n    for await (const predicate of path.predicates) yield context.compactIri(`${await predicate}`, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/ldflex/module/PropertiesHandler.js"],"names":["JsonLdContextNormalized","toIterablePromise","PropertiesHandler","handle","pathData","path","_handle","contextRaw","settings","parsedContext","context","predicate","predicates","compactIri"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,uBAAT,QAAwC,uBAAxC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,eAAe,MAAMC,iBAAN,CAAwB;AACrCC,EAAAA,MAAM,CAACC,QAAD,EAAWC,IAAX,EAAiB;AACrB,WAAOJ,iBAAiB,CAAC,KAAKK,OAAL,CAAaF,QAAb,EAAuBC,IAAvB,CAAD,CAAxB;AACD;;AAEa,SAAPC,OAAO,CAACF,QAAD,EAAWC,IAAX,EAAiB;AAC7B,UAAME,UAAU,GAAG,CAAC,MAAMH,QAAQ,CAACI,QAAT,CAAkBC,aAAzB,KAA2C,EAA9D;AACA,UAAMC,OAAO,GAAG,IAAIV,uBAAJ,CAA4BO,UAA5B,CAAhB;;AAEA,eAAW,MAAMI,SAAjB,IAA8BN,IAAI,CAACO,UAAnC,EAA+C,MAAMF,OAAO,CAACG,UAAR,CAAoB,GAAE,MAAMF,SAAU,EAAtC,EAAyC,IAAzC,CAAN;AAChD;;AAVoC","sourcesContent":["/**\n * Queries for all compacted predicates of a path subject\n */\nimport { JsonLdContextNormalized } from 'jsonld-context-parser';\nimport { toIterablePromise } from './promiseUtils';\nexport default class PropertiesHandler {\n  handle(pathData, path) {\n    return toIterablePromise(this._handle(pathData, path));\n  }\n\n  async *_handle(pathData, path) {\n    const contextRaw = (await pathData.settings.parsedContext) || {};\n    const context = new JsonLdContextNormalized(contextRaw);\n\n    for await (const predicate of path.predicates) yield context.compactIri(`${await predicate}`, true);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}