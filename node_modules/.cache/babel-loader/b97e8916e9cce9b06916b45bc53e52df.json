{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Translator_1 = require(\"../Translator\");\n/**\n * Translates integer numbers.\n */\n\n\nclass TypeHandlerNumberInteger {\n  fromRdf(literal, validate) {\n    const parsed = parseInt(literal.value, 10);\n\n    if (validate) {\n      if (isNaN(parsed) || literal.value.indexOf('.') >= 0) {\n        Translator_1.Translator.incorrectRdfDataType(literal);\n      } // TODO: validate more\n\n    }\n\n    return parsed;\n  }\n\n  toRdf(value, {\n    datatype,\n    dataFactory\n  }) {\n    return dataFactory.literal(String(value), datatype || (value <= TypeHandlerNumberInteger.MAX_INT && value >= TypeHandlerNumberInteger.MIN_INT ? dataFactory.namedNode(TypeHandlerNumberInteger.TYPES[0]) : dataFactory.namedNode(TypeHandlerNumberInteger.TYPES[1])));\n  }\n\n}\n\nexports.TypeHandlerNumberInteger = TypeHandlerNumberInteger;\nTypeHandlerNumberInteger.TYPES = ['http://www.w3.org/2001/XMLSchema#integer', 'http://www.w3.org/2001/XMLSchema#long', 'http://www.w3.org/2001/XMLSchema#int', 'http://www.w3.org/2001/XMLSchema#byte', 'http://www.w3.org/2001/XMLSchema#short', 'http://www.w3.org/2001/XMLSchema#negativeInteger', 'http://www.w3.org/2001/XMLSchema#nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema#nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema#positiveInteger', 'http://www.w3.org/2001/XMLSchema#unsignedByte', 'http://www.w3.org/2001/XMLSchema#unsignedInt', 'http://www.w3.org/2001/XMLSchema#unsignedLong', 'http://www.w3.org/2001/XMLSchema#unsignedShort'];\nTypeHandlerNumberInteger.MAX_INT = 2147483647;\nTypeHandlerNumberInteger.MIN_INT = -2147483648;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/rdf-literal/lib/handler/TypeHandlerNumberInteger.js"],"names":["Object","defineProperty","exports","value","Translator_1","require","TypeHandlerNumberInteger","fromRdf","literal","validate","parsed","parseInt","isNaN","indexOf","Translator","incorrectRdfDataType","toRdf","datatype","dataFactory","String","MAX_INT","MIN_INT","namedNode","TYPES"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA5B;AACA;AACA;AACA;;;AACA,MAAMC,wBAAN,CAA+B;AAC3BC,EAAAA,OAAO,CAACC,OAAD,EAAUC,QAAV,EAAoB;AACvB,UAAMC,MAAM,GAAGC,QAAQ,CAACH,OAAO,CAACL,KAAT,EAAgB,EAAhB,CAAvB;;AACA,QAAIM,QAAJ,EAAc;AACV,UAAIG,KAAK,CAACF,MAAD,CAAL,IAAiBF,OAAO,CAACL,KAAR,CAAcU,OAAd,CAAsB,GAAtB,KAA8B,CAAnD,EAAsD;AAClDT,QAAAA,YAAY,CAACU,UAAb,CAAwBC,oBAAxB,CAA6CP,OAA7C;AACH,OAHS,CAIV;;AACH;;AACD,WAAOE,MAAP;AACH;;AACDM,EAAAA,KAAK,CAACb,KAAD,EAAQ;AAAEc,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAR,EAAmC;AACpC,WAAOA,WAAW,CAACV,OAAZ,CAAoBW,MAAM,CAAChB,KAAD,CAA1B,EAAmCc,QAAQ,KAC1Cd,KAAK,IAAIG,wBAAwB,CAACc,OAAlC,IAA6CjB,KAAK,IAAIG,wBAAwB,CAACe,OAA/E,GACEH,WAAW,CAACI,SAAZ,CAAsBhB,wBAAwB,CAACiB,KAAzB,CAA+B,CAA/B,CAAtB,CADF,GAEEL,WAAW,CAACI,SAAZ,CAAsBhB,wBAAwB,CAACiB,KAAzB,CAA+B,CAA/B,CAAtB,CAHwC,CAA3C,CAAP;AAIH;;AAhB0B;;AAkB/BrB,OAAO,CAACI,wBAAR,GAAmCA,wBAAnC;AACAA,wBAAwB,CAACiB,KAAzB,GAAiC,CAC7B,0CAD6B,EAE7B,uCAF6B,EAG7B,sCAH6B,EAI7B,uCAJ6B,EAK7B,wCAL6B,EAM7B,kDAN6B,EAO7B,qDAP6B,EAQ7B,qDAR6B,EAS7B,kDAT6B,EAU7B,+CAV6B,EAW7B,8CAX6B,EAY7B,+CAZ6B,EAa7B,gDAb6B,CAAjC;AAeAjB,wBAAwB,CAACc,OAAzB,GAAmC,UAAnC;AACAd,wBAAwB,CAACe,OAAzB,GAAmC,CAAC,UAApC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Translator_1 = require(\"../Translator\");\n/**\n * Translates integer numbers.\n */\nclass TypeHandlerNumberInteger {\n    fromRdf(literal, validate) {\n        const parsed = parseInt(literal.value, 10);\n        if (validate) {\n            if (isNaN(parsed) || literal.value.indexOf('.') >= 0) {\n                Translator_1.Translator.incorrectRdfDataType(literal);\n            }\n            // TODO: validate more\n        }\n        return parsed;\n    }\n    toRdf(value, { datatype, dataFactory }) {\n        return dataFactory.literal(String(value), datatype\n            || (value <= TypeHandlerNumberInteger.MAX_INT && value >= TypeHandlerNumberInteger.MIN_INT\n                ? dataFactory.namedNode(TypeHandlerNumberInteger.TYPES[0])\n                : dataFactory.namedNode(TypeHandlerNumberInteger.TYPES[1])));\n    }\n}\nexports.TypeHandlerNumberInteger = TypeHandlerNumberInteger;\nTypeHandlerNumberInteger.TYPES = [\n    'http://www.w3.org/2001/XMLSchema#integer',\n    'http://www.w3.org/2001/XMLSchema#long',\n    'http://www.w3.org/2001/XMLSchema#int',\n    'http://www.w3.org/2001/XMLSchema#byte',\n    'http://www.w3.org/2001/XMLSchema#short',\n    'http://www.w3.org/2001/XMLSchema#negativeInteger',\n    'http://www.w3.org/2001/XMLSchema#nonNegativeInteger',\n    'http://www.w3.org/2001/XMLSchema#nonPositiveInteger',\n    'http://www.w3.org/2001/XMLSchema#positiveInteger',\n    'http://www.w3.org/2001/XMLSchema#unsignedByte',\n    'http://www.w3.org/2001/XMLSchema#unsignedInt',\n    'http://www.w3.org/2001/XMLSchema#unsignedLong',\n    'http://www.w3.org/2001/XMLSchema#unsignedShort',\n];\nTypeHandlerNumberInteger.MAX_INT = 2147483647;\nTypeHandlerNumberInteger.MIN_INT = -2147483648;\n//# sourceMappingURL=TypeHandlerNumberInteger.js.map"]},"metadata":{},"sourceType":"script"}