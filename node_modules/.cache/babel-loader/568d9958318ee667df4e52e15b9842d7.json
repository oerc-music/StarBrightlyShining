{"ast":null,"code":"import React from 'react';\nimport useLDflexList from '../hooks/useLDflexList';\n/** Displays a list of items matching a Solid LDflex expression. */\n\nexport default function List({\n  src,\n  offset = 0,\n  limit = Infinity,\n  filter = () => true,\n  container = items => /*#__PURE__*/React.createElement(\"ul\", null, items),\n  children = (item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index\n  }, `${item}`)\n}) {\n  const items = useLDflexList(src).filter(filter).slice(offset, +offset + +limit).map(children);\n  return container ? container(items) : items;\n}","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@solid/react/module/components/List.js"],"names":["React","useLDflexList","List","src","offset","limit","Infinity","filter","container","items","createElement","children","item","index","key","slice","map"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA;;AAEA,eAAe,SAASC,IAAT,CAAc;AAC3BC,EAAAA,GAD2B;AAE3BC,EAAAA,MAAM,GAAG,CAFkB;AAG3BC,EAAAA,KAAK,GAAGC,QAHmB;AAI3BC,EAAAA,MAAM,GAAG,MAAM,IAJY;AAK3BC,EAAAA,SAAS,GAAGC,KAAK,IAAI,aAAaT,KAAK,CAACU,aAAN,CAAoB,IAApB,EAA0B,IAA1B,EAAgCD,KAAhC,CALP;AAM3BE,EAAAA,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB,aAAab,KAAK,CAACU,aAAN,CAAoB,IAApB,EAA0B;AACjEI,IAAAA,GAAG,EAAED;AAD4D,GAA1B,EAErC,GAAED,IAAK,EAF8B;AANd,CAAd,EASZ;AACD,QAAMH,KAAK,GAAGR,aAAa,CAACE,GAAD,CAAb,CAAmBI,MAAnB,CAA0BA,MAA1B,EAAkCQ,KAAlC,CAAwCX,MAAxC,EAAgD,CAACA,MAAD,GAAU,CAACC,KAA3D,EAAkEW,GAAlE,CAAsEL,QAAtE,CAAd;AACA,SAAOH,SAAS,GAAGA,SAAS,CAACC,KAAD,CAAZ,GAAsBA,KAAtC;AACD","sourcesContent":["import React from 'react';\nimport useLDflexList from '../hooks/useLDflexList';\n/** Displays a list of items matching a Solid LDflex expression. */\n\nexport default function List({\n  src,\n  offset = 0,\n  limit = Infinity,\n  filter = () => true,\n  container = items => /*#__PURE__*/React.createElement(\"ul\", null, items),\n  children = (item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index\n  }, `${item}`)\n}) {\n  const items = useLDflexList(src).filter(filter).slice(offset, +offset + +limit).map(children);\n  return container ? container(items) : items;\n}"]},"metadata":{},"sourceType":"module"}