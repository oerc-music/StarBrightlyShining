{"ast":null,"code":"'use strict';\n\nconst Readable = require('stream').Readable;\n\nconst ReadableStream = require('web-streams-ponyfill').ReadableStream;\n/**\n * Web / node stream conversion functions\n */\n\n\nglobal.ReadableStream = global.ReadableStream || ReadableStream; // TODO: The module 'readable-stream-node-to-web' expects `ReadableStream` in globals\n\nconst readableNodeToWeb = require('readable-stream-node-to-web');\n/**\n * ReadableStream wrapping an array.\n *\n * @param {Array} arr, the array to wrap into a stream.\n * @return {ReadableStream}\n */\n\n\nfunction arrayToWeb(arr) {\n  return new ReadableStream({\n    start(controller) {\n      for (var i = 0; i < arr.length; i++) {\n        controller.enqueue(arr[i]);\n      }\n\n      controller.close();\n    }\n\n  });\n}\n\nclass NodeReadable extends Readable {\n  constructor(webStream, options) {\n    super(options);\n    this._webStream = webStream;\n    this._reader = webStream.getReader();\n    this._reading = false;\n  }\n\n  _read(size) {\n    if (this._reading) {\n      return;\n    }\n\n    this._reading = true;\n\n    const doRead = () => {\n      this._reader.read().then(res => {\n        if (this._doneReading) {\n          this._reading = false;\n\n          this._reader.releaseLock();\n\n          this._doneReading();\n        }\n\n        if (res.done) {\n          this.push(null);\n          this._reading = false;\n\n          this._reader.releaseLock();\n\n          return;\n        }\n\n        if (this.push(res.value)) {\n          return doRead(size);\n        } else {\n          this._reading = false;\n\n          this._reader.releaseLock();\n        }\n      });\n    };\n\n    doRead();\n  }\n\n  _destroy(err, callback) {\n    if (this._reading) {\n      const promise = new Promise(resolve => {\n        this._doneReading = resolve;\n      });\n      promise.then(() => this._handleDestroy(err, callback));\n    } else {\n      this._handleDestroy(err, callback);\n    }\n  }\n\n  _handleDestroy(err, callback) {\n    this._webStream.cancel();\n\n    super._destroy(err, callback);\n  }\n\n}\n\nfunction readableWebToNode(webStream) {\n  return new NodeReadable(webStream);\n}\n\nmodule.exports = {\n  readable: {\n    nodeToWeb: readableNodeToWeb,\n    arrayToWeb: arrayToWeb,\n    webToNode: readableWebToNode\n  }\n};","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/web-streams-node/lib/conversions.js"],"names":["Readable","require","ReadableStream","global","readableNodeToWeb","arrayToWeb","arr","start","controller","i","length","enqueue","close","NodeReadable","constructor","webStream","options","_webStream","_reader","getReader","_reading","_read","size","doRead","read","then","res","_doneReading","releaseLock","done","push","value","_destroy","err","callback","promise","Promise","resolve","_handleDestroy","cancel","readableWebToNode","module","exports","readable","nodeToWeb","webToNode"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,QAAnC;;AACA,MAAME,cAAc,GAAGD,OAAO,CAAC,sBAAD,CAAP,CAAgCC,cAAvD;AAEA;AACA;AACA;;;AACAC,MAAM,CAACD,cAAP,GAAwBC,MAAM,CAACD,cAAP,IAAyBA,cAAjD,C,CACA;;AACA,MAAME,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,UAAT,CAAoBC,GAApB,EAAyB;AACrB,SAAO,IAAIJ,cAAJ,CAAmB;AACtBK,IAAAA,KAAK,CAACC,UAAD,EAAa;AACd,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjCD,QAAAA,UAAU,CAACG,OAAX,CAAmBL,GAAG,CAACG,CAAD,CAAtB;AACH;;AACDD,MAAAA,UAAU,CAACI,KAAX;AACH;;AANqB,GAAnB,CAAP;AAQH;;AAGD,MAAMC,YAAN,SAA2Bb,QAA3B,CAAoC;AAChCc,EAAAA,WAAW,CAACC,SAAD,EAAYC,OAAZ,EAAqB;AAC5B,UAAMA,OAAN;AACA,SAAKC,UAAL,GAAkBF,SAAlB;AACA,SAAKG,OAAL,GAAeH,SAAS,CAACI,SAAV,EAAf;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACH;;AAEDC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACR,QAAI,KAAKF,QAAT,EAAmB;AACf;AACH;;AACD,SAAKA,QAAL,GAAgB,IAAhB;;AACA,UAAMG,MAAM,GAAG,MAAM;AACjB,WAAKL,OAAL,CAAaM,IAAb,GACKC,IADL,CACUC,GAAG,IAAI;AACT,YAAI,KAAKC,YAAT,EAAuB;AACnB,eAAKP,QAAL,GAAgB,KAAhB;;AACA,eAAKF,OAAL,CAAaU,WAAb;;AACA,eAAKD,YAAL;AACH;;AACD,YAAID,GAAG,CAACG,IAAR,EAAc;AACV,eAAKC,IAAL,CAAU,IAAV;AACA,eAAKV,QAAL,GAAgB,KAAhB;;AACA,eAAKF,OAAL,CAAaU,WAAb;;AACA;AACH;;AACD,YAAI,KAAKE,IAAL,CAAUJ,GAAG,CAACK,KAAd,CAAJ,EAA0B;AACtB,iBAAOR,MAAM,CAACD,IAAD,CAAb;AACH,SAFD,MAEO;AACH,eAAKF,QAAL,GAAgB,KAAhB;;AACA,eAAKF,OAAL,CAAaU,WAAb;AACH;AACJ,OAnBL;AAoBH,KArBD;;AAsBAL,IAAAA,MAAM;AACT;;AAEDS,EAAAA,QAAQ,CAACC,GAAD,EAAMC,QAAN,EAAgB;AACpB,QAAI,KAAKd,QAAT,EAAmB;AACf,YAAMe,OAAO,GAAG,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACnC,aAAKV,YAAL,GAAoBU,OAApB;AACH,OAFe,CAAhB;AAGAF,MAAAA,OAAO,CAACV,IAAR,CAAa,MAAM,KAAKa,cAAL,CAAoBL,GAApB,EAAyBC,QAAzB,CAAnB;AACH,KALD,MAKO;AACH,WAAKI,cAAL,CAAoBL,GAApB,EAAyBC,QAAzB;AACH;AACJ;;AAEDI,EAAAA,cAAc,CAACL,GAAD,EAAMC,QAAN,EAAgB;AAC1B,SAAKjB,UAAL,CAAgBsB,MAAhB;;AACA,UAAMP,QAAN,CAAeC,GAAf,EAAoBC,QAApB;AACH;;AApD+B;;AAuDpC,SAASM,iBAAT,CAA2BzB,SAA3B,EAAsC;AAClC,SAAO,IAAIF,YAAJ,CAAiBE,SAAjB,CAAP;AACH;;AAED0B,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAExC,iBADL;AAENC,IAAAA,UAAU,EAAEA,UAFN;AAGNwC,IAAAA,SAAS,EAAEL;AAHL;AADG,CAAjB","sourcesContent":["'use strict';\n\nconst Readable = require('stream').Readable;\nconst ReadableStream = require('web-streams-ponyfill').ReadableStream;\n\n/**\n * Web / node stream conversion functions\n */\nglobal.ReadableStream = global.ReadableStream || ReadableStream;\n// TODO: The module 'readable-stream-node-to-web' expects `ReadableStream` in globals\nconst readableNodeToWeb = require('readable-stream-node-to-web');\n\n/**\n * ReadableStream wrapping an array.\n *\n * @param {Array} arr, the array to wrap into a stream.\n * @return {ReadableStream}\n */\nfunction arrayToWeb(arr) {\n    return new ReadableStream({\n        start(controller) {\n            for (var i = 0; i < arr.length; i++) {\n                controller.enqueue(arr[i]);\n            }\n            controller.close();\n        }\n    });\n}\n\n\nclass NodeReadable extends Readable {\n    constructor(webStream, options) {\n        super(options);\n        this._webStream = webStream;\n        this._reader = webStream.getReader();\n        this._reading = false;\n    }\n\n    _read(size) {\n        if (this._reading) {\n            return;\n        }\n        this._reading = true;\n        const doRead = () => {\n            this._reader.read()\n                .then(res => {\n                    if (this._doneReading) {\n                        this._reading = false;\n                        this._reader.releaseLock();\n                        this._doneReading();\n                    }\n                    if (res.done) {\n                        this.push(null);\n                        this._reading = false;\n                        this._reader.releaseLock();\n                        return;\n                    }\n                    if (this.push(res.value)) {\n                        return doRead(size);\n                    } else {\n                        this._reading = false;\n                        this._reader.releaseLock();\n                    }\n                });\n        };\n        doRead();\n    }\n    \n    _destroy(err, callback) {\n        if (this._reading) {\n            const promise = new Promise(resolve => {\n                this._doneReading = resolve;\n            });\n            promise.then(() => this._handleDestroy(err, callback));\n        } else {\n            this._handleDestroy(err, callback);\n        }\n    }\n        \n    _handleDestroy(err, callback) {\n        this._webStream.cancel();\n        super._destroy(err, callback);\n    }\n}\n\nfunction readableWebToNode(webStream) {\n    return new NodeReadable(webStream);\n}\n\nmodule.exports = {\n    readable: {\n        nodeToWeb: readableNodeToWeb,\n        arrayToWeb: arrayToWeb,\n        webToNode: readableWebToNode,\n    },\n};\n"]},"metadata":{},"sourceType":"script"}