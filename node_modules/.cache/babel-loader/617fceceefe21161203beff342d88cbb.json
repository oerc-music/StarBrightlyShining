{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActorRdfParseFixedMediaTypes = void 0;\n\nconst actor_abstract_mediatyped_1 = require(\"@comunica/actor-abstract-mediatyped\");\n/**\n * A base actor for listening to RDF parse events that has fixed media types.\n *\n * Actor types:\n * * Input:  IActionRdfParseOrMediaType:      A parse input or a media type input.\n * * Test:   <none>\n * * Output: IActorOutputRdfParseOrMediaType: The parsed quads.\n *\n * @see IActionInit\n */\n\n\nclass ActorRdfParseFixedMediaTypes extends actor_abstract_mediatyped_1.ActorAbstractMediaTypedFixed {\n  constructor(args) {\n    super(args);\n  }\n\n  async testHandleChecked(action) {\n    return true;\n  }\n\n}\n\nexports.ActorRdfParseFixedMediaTypes = ActorRdfParseFixedMediaTypes;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@comunica/bus-rdf-parse/lib/ActorRdfParseFixedMediaTypes.js"],"names":["Object","defineProperty","exports","value","ActorRdfParseFixedMediaTypes","actor_abstract_mediatyped_1","require","ActorAbstractMediaTypedFixed","constructor","args","testHandleChecked","action"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,4BAAR,GAAuC,KAAK,CAA5C;;AACA,MAAMC,2BAA2B,GAAGC,OAAO,CAAC,qCAAD,CAA3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMF,4BAAN,SAA2CC,2BAA2B,CAACE,4BAAvE,CAAoG;AAChGC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN;AACH;;AACsB,QAAjBC,iBAAiB,CAACC,MAAD,EAAS;AAC5B,WAAO,IAAP;AACH;;AAN+F;;AAQpGT,OAAO,CAACE,4BAAR,GAAuCA,4BAAvC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActorRdfParseFixedMediaTypes = void 0;\nconst actor_abstract_mediatyped_1 = require(\"@comunica/actor-abstract-mediatyped\");\n/**\n * A base actor for listening to RDF parse events that has fixed media types.\n *\n * Actor types:\n * * Input:  IActionRdfParseOrMediaType:      A parse input or a media type input.\n * * Test:   <none>\n * * Output: IActorOutputRdfParseOrMediaType: The parsed quads.\n *\n * @see IActionInit\n */\nclass ActorRdfParseFixedMediaTypes extends actor_abstract_mediatyped_1.ActorAbstractMediaTypedFixed {\n    constructor(args) {\n        super(args);\n    }\n    async testHandleChecked(action) {\n        return true;\n    }\n}\nexports.ActorRdfParseFixedMediaTypes = ActorRdfParseFixedMediaTypes;\n//# sourceMappingURL=ActorRdfParseFixedMediaTypes.js.map"]},"metadata":{},"sourceType":"script"}