{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KEY_CONTEXT_LOG = exports.Logger = void 0;\n\nconst context_entries_1 = require(\"@comunica/context-entries\");\n/**\n * A logger accepts messages from different levels\n * and emits them in a certain way.\n */\n\n\nclass Logger {\n  /**\n   * Convert a string-based logging level to a numerical logging level.\n   * @param level A string-based logging level\n   * @return The numerical logging level, or undefined.\n   */\n  static getLevelOrdinal(level) {\n    return Logger.LEVELS[level];\n  }\n\n}\n\nexports.Logger = Logger;\n/**\n * All available logging levels.\n * @type {{trace: number; debug: number; info: number; warn: number; error: number; fatal: number}}\n */\n\nLogger.LEVELS = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 3,\n  error: 4,\n  fatal: 5\n};\n/**\n * @type {string} Context entry for a logger instance.\n * @value {Logger} A logger.\n * @deprecated Import this constant from @comunica/context-entries.\n */\n\nexports.KEY_CONTEXT_LOG = context_entries_1.KeysCore.log;","map":{"version":3,"sources":["/Users/mark/localRepos/StarBrightlyShining/node_modules/@comunica/core/lib/Logger.js"],"names":["Object","defineProperty","exports","value","KEY_CONTEXT_LOG","Logger","context_entries_1","require","getLevelOrdinal","level","LEVELS","trace","debug","info","warn","error","fatal","KeysCore","log"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0BF,OAAO,CAACG,MAAR,GAAiB,KAAK,CAAhD;;AACA,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,2BAAD,CAAjC;AACA;AACA;AACA;AACA;;;AACA,MAAMF,MAAN,CAAa;AACT;AACJ;AACA;AACA;AACA;AAC0B,SAAfG,eAAe,CAACC,KAAD,EAAQ;AAC1B,WAAOJ,MAAM,CAACK,MAAP,CAAcD,KAAd,CAAP;AACH;;AARQ;;AAUbP,OAAO,CAACG,MAAR,GAAiBA,MAAjB;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACK,MAAP,GAAgB;AACZC,EAAAA,KAAK,EAAE,CADK;AAEZC,EAAAA,KAAK,EAAE,CAFK;AAGZC,EAAAA,IAAI,EAAE,CAHM;AAIZC,EAAAA,IAAI,EAAE,CAJM;AAKZC,EAAAA,KAAK,EAAE,CALK;AAMZC,EAAAA,KAAK,EAAE;AANK,CAAhB;AAQA;AACA;AACA;AACA;AACA;;AACAd,OAAO,CAACE,eAAR,GAA0BE,iBAAiB,CAACW,QAAlB,CAA2BC,GAArD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KEY_CONTEXT_LOG = exports.Logger = void 0;\nconst context_entries_1 = require(\"@comunica/context-entries\");\n/**\n * A logger accepts messages from different levels\n * and emits them in a certain way.\n */\nclass Logger {\n    /**\n     * Convert a string-based logging level to a numerical logging level.\n     * @param level A string-based logging level\n     * @return The numerical logging level, or undefined.\n     */\n    static getLevelOrdinal(level) {\n        return Logger.LEVELS[level];\n    }\n}\nexports.Logger = Logger;\n/**\n * All available logging levels.\n * @type {{trace: number; debug: number; info: number; warn: number; error: number; fatal: number}}\n */\nLogger.LEVELS = {\n    trace: 0,\n    debug: 1,\n    info: 2,\n    warn: 3,\n    error: 4,\n    fatal: 5,\n};\n/**\n * @type {string} Context entry for a logger instance.\n * @value {Logger} A logger.\n * @deprecated Import this constant from @comunica/context-entries.\n */\nexports.KEY_CONTEXT_LOG = context_entries_1.KeysCore.log;\n//# sourceMappingURL=Logger.js.map"]},"metadata":{},"sourceType":"script"}