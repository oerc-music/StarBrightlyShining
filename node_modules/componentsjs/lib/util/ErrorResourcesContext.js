"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorResourcesContext = void 0;
const NodeUtil = require("util");
/**
 * An error that can include a context containing resources for display.
 */
class ErrorResourcesContext extends Error {
    constructor(message, context) {
        super(`${message}\n${ErrorResourcesContext.contextToString(context)}`);
        this.name = 'ErrorResourcesContext';
        this.context = context;
    }
    static contextToString(context) {
        return Object.entries(context)
            .map(([key, value]) => `${key}: ${typeof value === 'string' ?
            value :
            // eslint-disable-next-line @typescript-eslint/no-extra-parens
            (Array.isArray(value) ?
                value.map(valueSub => ErrorResourcesContext.resourceToString(valueSub)) :
                ErrorResourcesContext.resourceToString(value))}`)
            .join('\n');
    }
    /**
     * Convert the given resource to a compact string.
     * Mainly used for error reporting.
     *
     * Note that this will remove certain fields from the resource,
     * so only use this when throwing an error that will stop the process.
     *
     * @param resource A resource.
     */
    static resourceToString(resource) {
        return NodeUtil.inspect(Object.assign({ term: resource.term, properties: resource.properties }, resource.list ? { list: resource.list } : {}), { colors: true, depth: 2 });
    }
}
exports.ErrorResourcesContext = ErrorResourcesContext;
//# sourceMappingURL=ErrorResourcesContext.js.map