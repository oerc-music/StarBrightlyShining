import type { RdfObjectLoader, Resource } from 'rdf-object';
import type { IParameterPropertyHandler } from './IParameterPropertyHandler';
/**
 * If a param range is defined, apply the type and validate the range.
 */
export declare class ParameterPropertyHandlerRange implements IParameterPropertyHandler {
    private readonly objectLoader;
    constructor(objectLoader: RdfObjectLoader);
    canHandle(value: Resource[], configRoot: Resource, parameter: Resource, configElement: Resource): boolean;
    handle(value: Resource[], configRoot: Resource, parameter: Resource, configElement: Resource): Resource[];
    /**
     * Apply the given datatype to the given literal.
     * Checks if the datatype is correct and casts to the correct js type.
     * Will throw an error if the type has an invalid value.
     * Will be ignored if the value is not a literal or the type is not recognized.
     * @param value The value.
     * @param param The parameter.
     */
    captureType(value: Resource, param: Resource): Resource;
    protected throwIncorrectTypeError(value: Resource, parameter: Resource): void;
}
